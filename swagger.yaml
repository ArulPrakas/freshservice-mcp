openapi: 3.0.3
info:
  version: 2.0.1
  title: Freshservice
  description: Public REST APIs for Freshservice
  contact:
    email: mithun.mohandas@freshworks.com
servers:
  - url: 'https://{subdomain}.freshservice.com'
    variables:
      subdomain:
        default: api
        description: Sub-domain of the Account
security:
  - Personal API Key: []
tags:
  - name: Tickets
  - name: Problems
  - name: Changes
  - name: Releases
  - name: Requesters
  - name: Agents
  - name: CABs
  - name: Users
  - name: Agent Groups
  - name: Locations
  - name: Products
  - name: Vendors
  - name: Assets
  - name: Purchase Orders
  - name: Asset Types
  - name: Assignment History of User
  - name: Assignment History of Asset
  - name: Contracts
  - name: Contract Types
  - name: Departments
  - name: Business Hours
  - name: Projects
  - name: Solution Articles
  - name: Service Catalog
  - name: Announcements
  - name: Employee Onboarding
  - name: Canned Responses
  - name: Canned Response Folders
  - name: Software
  - name: Relationships
  - name: Customer Satisfaction Surveys
  - name: Email
  - name: Spam Watcher
  - name: New Gen PM
  - name: Approvals
  - name: Service Catalog Item
  - name: Analytics
  - name: Attachments
  - name: Tasks
  - name: Document Template
  - name: Cloned Instances
  - name: Config Sets
  - name: IM Configuration
  - name: Conversation
  - name: Contextual Collaboration
  - name: Employee Offboarding
  - name: Devops Platform
  - name: Feature
  - name: Status page
  - name: Requester Groups
paths:
  /api/v2/instance-management/cloned-instances:
    get:
      summary: Get all Cloned Instances
      tags:
        - Cloned Instances
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      example: DEV
                    description:
                      type: string
                      example: Create Dev instance
                    clone_type:
                      type: string
                      enum:
                        - uat
                        - test_instance
                      example: uat
                    status:
                      type: string
                      enum:
                        - in_progress
                        - completed
                        - active
                      example: in_progress
                    source_account_id:
                      type: integer
                      example: 17809
                    created_at:
                      type: string
                      format: date-time
                      example: '2023-05-08T18:30:00.000Z'
                    last_sync_at:
                      type: string
                      format: date-time
                      example: '2023-05-08T18:30:00.000Z'
                    last_sync_by:
                      type: integer
                      example: 89
                    created_by:
                      type: integer
                      example: 99
                    updated_by:
                      type: integer
                      example: 80
                    cloned_account:
                      $ref: '#/components/schemas/Account'
                  required:
                    - name
                    - type
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
      description: get all cloned instances
      operationId: get-api-admin-cloned-instances
    post:
      summary: Create Cloned Instance
      tags:
        - Cloned Instances
      requestBody:
        description: Properties of the cloned instance to be created
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClonedInstance'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  document_template:
                    $ref: '#/components/schemas/ClonedInstance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
      description: Create a cloned instance
      operationId: post-api-admin-cloned-instance
  '/api/v2/instance-management/cloned-instances/{id}':
    put:
      summary: Update a Cloned instance
      tags:
        - Cloned Instances
      parameters:
        - schema:
            type: integer
          name: id
          in: path
          required: true
      requestBody:
        description: Properties of the cloned instance to be updated
        content:
          application/json:
            schema:
              properties:
                description:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  document_template:
                    $ref: '#/components/schemas/ClonedInstance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
      description: Update a Cloned Instance
      operationId: put-api-admin-cloned-instance-id
    patch:
      summary: Update a Cloned instance
      tags:
        - Cloned Instances
      parameters:
        - schema:
            type: integer
          name: id
          in: path
          required: true
      requestBody:
        description: Properties of the cloned instance to be updated
        content:
          application/json:
            schema:
              properties:
                description:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  document_template:
                    $ref: '#/components/schemas/ClonedInstance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
      description: Update a Cloned Instance
      operationId: patch-api-admin-cloned-instance-id
    get:
      summary: Get a Cloned Instance
      tags:
        - Cloned Instances
      parameters:
        - schema:
            type: integer
          name: id
          in: path
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  document_template:
                    $ref: '#/components/schemas/ClonedInstance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
      description: Get a Cloned Instance
      operationId: get-api-admin-cloned-instance-id
    delete:
      summary: Delete a Cloned Instance
      tags:
        - Cloned Instances
      parameters:
        - schema:
            type: string
          name: id
          in: path
          required: true
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
      description: Delete a cloned instance
      operationId: delete-api-admin-cloned-instance-id
  '/api/v2/ws/{workspace_id}/instance-management/instance-configurations':
    get:
      summary: Get all configuration for particular account
      tags:
        - IM Configuration
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
          description: Workspace display id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    document_template:
                      $ref: '#/components/schemas/InstanceConfiguration'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
      description: get all configuration
      operationId: get-api-workspace-configuration
  '/api/v2/ws/{workspace_id}/instance-management/config-sets':
    get:
      summary: Get all config sets for particular instance
      tags:
        - Config Sets
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
          description: Workspace display id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    document_template:
                      $ref: '#/components/schemas/ConfigSet'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
      description: get all config sets
      operationId: get-api-workspace-config-sets
    post:
      summary: Create Config Set
      tags:
        - Config Sets
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
          description: Workspace display id
      requestBody:
        description: Config Set to be created
        content:
          application/json:
            schema:
              properties:
                description:
                  type: string
                name:
                  type: string
                operating_account_id:
                  type: integer
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  document_template:
                    $ref: '#/components/schemas/ConfigSet'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
      description: Create a cloned instance
      operationId: post-api-workspace-config-set
  '/api/v2/ws/{workspace_id}/instance-management/config-sets/{id}':
    put:
      summary: Update a config set
      tags:
        - Config Sets
      parameters:
        - schema:
            type: integer
          name: id
          in: path
          required: true
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
          description: Workspace display id
      requestBody:
        description: Properties of the config set to be updated
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  document_template:
                    $ref: '#/components/schemas/ConfigSet'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
      description: Update a Config Set
      operationId: put-api-workspace-config-set-id
    patch:
      summary: Update a config set
      tags:
        - Config Sets
      parameters:
        - schema:
            type: integer
          name: id
          in: path
          required: true
        - schema:
            type: integer
          name: workspace_id
          in: path
          required: true
          description: Workspace display id
      requestBody:
        description: Properties of the config set to be updated
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  document_template:
                    $ref: '#/components/schemas/ConfigSet'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
      description: pdate a Config Set
      operationId: patch-api-workspace-config-set-id
    get:
      summary: Get a config set
      tags:
        - Config Sets
      parameters:
        - schema:
            type: integer
          name: id
          in: path
          required: true
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
          description: Workspace display id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  document_template:
                    $ref: '#/components/schemas/ConfigSet'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
      description: Get a Config Set
      operationId: get-api-workspace-config-set-id
    delete:
      summary: Delete a config set
      tags:
        - Config Sets
      parameters:
        - schema:
            type: string
          name: id
          in: path
          required: true
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
          description: Workspace display id
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
      description: Delete a Config Set
      operationId: delete-api-workspace-config-set-id
  '/api/v2/ws/{workspace_id}/instance-management/config-sets/delete-multiple':
    delete:
      summary: Delete multiple config set
      tags:
        - Config Sets
      parameters:
        - schema:
            type: string
            example: '1,2,3'
          name: ids
          description: config set ids
          in: query
          required: true
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
          description: Workspace display id
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
      description: Delete multiple config set
      operationId: delete_multiple-api-workspace-config-set-id
  '/api/v2/ws/{workspace_id}/instance-management/instance-configurations/delete-multiple':
    delete:
      summary: Delete multiple instance configurations
      tags:
        - IM Configuration
      parameters:
        - schema:
            type: string
            example: '1,2,3'
          name: ids
          description: instance configurations ids
          in: query
          required: true
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
          description: Workspace display id
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
      description: Delete multiple instance configurations
      operationId: delete_multiple-api-workspace-instance-configurations-id
  '/api/v2/ws/{workspace_id}/instance-management/config-sets/{id}/config-items-meta':
    get:
      summary: Config Items Meta to get count of each configuration
      tags:
        - Config Sets
      parameters:
        - schema:
            type: integer
          name: id
          in: path
          required: true
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
          description: Workspace display id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    document_template:
                      $ref: '#/components/schemas/ConfigSetItemMeta'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
      description: Config Items Meta for config set
      operationId: get_config_items_meta
  '/api/v2/ws/{workspace_id}/instance-management/config-sets/{id}/config-set-items':
    get:
      summary: Get Config Set Items for a config set
      tags:
        - Config Sets
      parameters:
        - schema:
            type: integer
          name: id
          in: path
          required: true
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
          description: Workspace display id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    document_template:
                      $ref: '#/components/schemas/ConfigSetItem'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
      description: Get Config Set Items
      operationId: get-config-set-items
  '/api/v2/ws/{workspace_id}/instance-management/instance-configurations/configuration-types':
    get:
      summary: Get Configutaion Types
      tags:
        - IM Configuration
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
          description: Workspace display id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    document_template:
                      $ref: '#/components/schemas/ConfigurationType'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
      description: Get Configuration Types
      operationId: get-configuration-types
  '/api/v2/ws/{workspace_id}/instance-management/config-sets/sync-history':
    get:
      summary: Get Sync History
      tags:
        - Config Sets
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
          description: Workspace display id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    document_template:
                      $ref: '#/components/schemas/ImSyncHistory'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
      description: Get Configuration Types
      operationId: get-sync-history
  '/api/v2/ws/{workspace_id}/instance-management/config-sets/{id}/selective-sync':
    post:
      summary: Import config set item to a target account
      tags:
        - Config Sets
      parameters:
        - schema:
            type: integer
          name: id
          in: path
          required: true
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
          description: Workspace display id
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
      description: Import config set item
      operationId: import-config-set
  /api/v2/departments:
    post:
      operationId: create-department
      tags:
        - Departments
      summary: Create Department
      description: Create a new Department (or Company in MSP Mode) in Freshservice
      requestBody:
        description: Department that needs to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  department:
                    $ref: '#/components/schemas/Department'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    get:
      operationId: list-departments
      tags:
        - Departments
      summary: List All Departments
      description: Retrieve a list of all Departments (or Companies in MSP Mode) in Freshservice
      parameters:
        - $ref: '#/components/parameters/PaginationPageParam'
        - $ref: '#/components/parameters/PaginationPerPageParam'
        - $ref: '#/components/parameters/WorkspaceIdParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  departments:
                    type: array
                    items:
                      $ref: '#/components/schemas/Department'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/departments/{department_id}':
    get:
      operationId: get-department
      tags:
        - Departments
      summary: View Department
      description: Retrieve the Department (or Company in MSP Mode) with the given ID from Freshservice
      parameters:
        - name: department_id
          in: path
          description: ID of department to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  department:
                    $ref: '#/components/schemas/Department'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    put:
      operationId: update-department
      tags:
        - Departments
      summary: Update Department
      description: Update an existing Department (or Company in MSP Mode) in Freshservice
      parameters:
        - name: department_id
          in: path
          description: ID of department to retrieve
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Department that needs to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  department:
                    $ref: '#/components/schemas/Department'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    delete:
      operationId: delete-department
      tags:
        - Departments
      summary: Delete Department
      description: Delete the Department (or Company in MSP Mode) with the given ID from Freshservice
      parameters:
        - name: department_id
          in: path
          description: ID of department to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  /api/v2/department_fields:
    get:
      operationId: list-department-fields
      tags:
        - Departments
      summary: List Department Fields
      description: Retrieve the Department Fields (or Company Fields in MSP Mode) from Freshservice. The fields will be returned in the sequence that they are displayed on the UI.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  department_fields:
                    type: array
                    items:
                      $ref: '#/components/schemas/field_definition'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  /api/v2/groups:
    post:
      operationId: create-agent-group
      tags:
        - Agent Groups
      summary: Create Agent Group
      description: Create a new Agent Group in Freshservice
      requestBody:
        description: Agent Group that needs to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  agent_group:
                    $ref: '#/components/schemas/Group'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  agent_group:
                    $ref: '#/components/schemas/Group'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    get:
      operationId: list-agent-groups
      tags:
        - Agent Groups
      summary: List All Agent Groups
      description: Retrieve a list of all Agent Groups in Freshservice
      parameters:
        - in: query
          name: per_page
          description: The number of entries to retrieve in each page of a paginated list.
          schema:
            type: integer
            default: 10
        - in: query
          name: page
          description: The page number to retrieve.
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  departments:
                    type: array
                    items:
                      $ref: '#/components/schemas/Group'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/groups/{agent_group_id}':
    get:
      operationId: get-agent-group
      tags:
        - Agent Groups
      summary: View Agent Group
      description: Retrieve the Agent Group with the given ID from Freshservice
      parameters:
        - name: agent_group_id
          in: path
          description: ID of the agent group to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  agent_group:
                    $ref: '#/components/schemas/Group'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    put:
      operationId: update-agent-group
      tags:
        - Agent Groups
      summary: Update Agent Group
      description: Update an existing Agent Group in Freshservice
      parameters:
        - name: agent_group_id
          in: path
          description: ID of agent group to retrieve
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Agent group that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  agent_group:
                    $ref: '#/components/schemas/Group'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  agent_group:
                    $ref: '#/components/schemas/Group'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    delete:
      operationId: delete-agent-group
      tags:
        - Agent Groups
      summary: Delete Agent Group
      description: Delete the Agent Group with the given ID from Freshservice
      parameters:
        - name: agent_group_id
          in: path
          description: ID of agent group to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  agent_group:
                    $ref: '#/components/schemas/Group'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  /api/v2/products:
    post:
      operationId: create-product
      tags:
        - Products
      summary: Create a new Product in the Product Catalog
      description: Create a new Product in the Product Catalog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                required:
                  - product
                type: object
                properties:
                  product:
                    $ref: '#/components/schemas/product'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    get:
      operationId: list-products
      tags:
        - Products
      summary: List All Products in the Product Catalog
      description: Get a list of all Products in Freshservice
      parameters:
        - $ref: '#/components/parameters/PaginationPerPageParam'
        - $ref: '#/components/parameters/PaginationPageParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - products
                type: object
                properties:
                  products:
                    type: array
                    minItems: 0
                    items:
                      $ref: '#/components/schemas/product'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/products/{product_id}':
    get:
      operationId: get-product
      tags:
        - Products
      summary: Retrieve a specific Product from the Product Catalog
      description: Retrieve a specific Product from the Product Catalog
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - product
                type: object
                properties:
                  product:
                    $ref: '#/components/schemas/product'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    put:
      operationId: update-product
      tags:
        - Products
      summary: Update an existing Product in the Product Catalog
      description: Update an existing Product in the Product Catalog
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - product
                type: object
                properties:
                  product:
                    $ref: '#/components/schemas/product'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    delete:
      operationId: delete-product
      tags:
        - Products
      summary: Delete an existing Product from the Product Catalog
      description: Delete an existing Product from the Product Catalog
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  /api/v2/business_hours:
    get:
      operationId: list-business-hours-configs
      tags:
        - Business Hours
      summary: List All Business Hours Configurations
      description: Retrieve a list of all Business Hours configurations
      parameters:
        - in: query
          name: per_page
          description: The number of entries to retrieve in each page of a paginated list.
          schema:
            type: integer
            default: 10
        - in: query
          name: page
          description: The page number to retrieve.
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  business_hours:
                    type: array
                    items:
                      $ref: '#/components/schemas/business_hours'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/business_hours/{business_hours_id}':
    get:
      operationId: get-business-hours-config
      tags:
        - Business Hours
      summary: View Business Hours Configuration
      description: Retrieve the Business Hours configuration with the given ID from Freshservice
      parameters:
        - name: business_hours_id
          in: path
          description: ID of Business Hours configuration to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  business_hours:
                    type: array
                    items:
                      $ref: '#/components/schemas/business_hours'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  /api/v2/requester_groups:
    post:
      operationId: create-requester-group
      tags:
        - Requester Groups
      summary: Create Requester Group
      description: Create a new Requester Group in Freshservice
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - requester_group
                properties:
                  requester_group:
                    allOf:
                      - $ref: '#/components/schemas/RequesterGroup'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      requestBody:
        required: true
        description: Requester Group who needs to be created
        content:
          application/json:
            schema:
              required:
                - name
              allOf:
                - $ref: '#/components/schemas/RequesterGroup'
    get:
      operationId: list-requester-groups
      tags:
        - Requester Groups
      summary: List All Requester Groups
      description: Retrieve a list of all Requester Groups in Freshservice
      parameters:
        - $ref: '#/components/parameters/PaginationPageParam'
        - $ref: '#/components/parameters/PaginationPerPageParam'
        - $ref: '#/components/parameters/WorkspaceIdParam'
        - in: query
          name: order_by
          required: false
          description: The field based on which requester groups are ordered
          schema:
            type: string
        - in: query
          name: order_type
          required: false
          description: Type of sorting - asc / desc
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - requester_groups
                properties:
                  requester_groups:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/RequesterGroup'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  '/api/v2/requester_groups/{id}':
    parameters:
      - name: id
        in: path
        description: ID of the requester group to retrieve
        required: true
        schema:
          type: integer
          format: int64
    get:
      operationId: get-requester-group
      tags:
        - Requester Groups
      summary: View Requester Group
      description: Retrieve the Requester Group with the given ID from Freshservice
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - requester_group
                properties:
                  requester_group:
                    allOf:
                      - $ref: '#/components/schemas/RequesterGroup'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: update-requester-group
      tags:
        - Requester Groups
      summary: Update Requester Group
      description: Update an existing Requester Group in Freshservice
      requestBody:
        required: true
        description: Requester group that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequesterGroup'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - requester_group
                properties:
                  requester_group:
                    allOf:
                      - $ref: '#/components/schemas/RequesterGroup'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      operationId: update-requester-group-patch
      tags:
        - Requester Groups
      summary: Update Requester Group
      description: Update an existing Requester Group in Freshservice
      requestBody:
        description: Requester group that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequesterGroup'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - requester_group
                properties:
                  requester_group:
                    allOf:
                      - $ref: '#/components/schemas/RequesterGroup'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      operationId: delete-requester-group
      tags:
        - Requester Groups
      summary: Delete Requester Group
      description: Delete the Requester Group with the given ID from Freshservice
      responses:
        '204':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  '/api/v2/requester_groups/{id}/members/{requester_id}':
    post:
      operationId: add-requester-to-requester-group
      tags:
        - Requester Groups
      summary: Add requester to Requester Group
      description: Add a requester to a manual Requester Group in Freshservice
      parameters:
        - name: id
          in: path
          description: ID of requester group to which user needs to be added
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: requester_id
          description: Id of the user who needs to be added to the group
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      operationId: delete-requester-from-requester-group
      tags:
        - Requester Groups
      summary: Delete requester from Requester Group
      description: Remove a requester from a manual Requester Group in Freshservice
      parameters:
        - name: id
          in: path
          description: ID of requester group to which user needs to be added
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: requester_id
          description: Id of the user who needs to be added to the group
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  '/api/v2/requester_groups/{id}/members':
    get:
      operationId: list-requester-group-members
      tags:
        - Requester Groups
      summary: List All members of specific Requester Group
      description: Retrieve a list of all members of specific Requester Group in Freshservice
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
        - $ref: '#/components/parameters/PaginationPageParam'
        - $ref: '#/components/parameters/PaginationPerPageParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - requesters
                properties:
                  requesters:
                    type: array
                    items:
                      required:
                        - id
                        - first_name
                        - last_name
                        - email
                      allOf:
                        - $ref: '#/components/schemas/Requester'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /api/v2/requester_groups/autocomplete:
    get:
      operationId: search-requester-groups
      description: This path is to search the requester groups
      summary: Search Requester Groups
      tags:
        - Requester Groups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - requester_groups
                properties:
                  requester_groups:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        value:
                          type: string
                          example: Common Team
                        workspace:
                          allOf:
                            - $ref: '#/components/schemas/Workspace'
                            - required:
                                - id
                                - name
                                - logo_url
                                - state
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
      parameters:
        - $ref: '#/components/parameters/SearchParam'
        - $ref: '#/components/parameters/WorkspaceIdParam'
        - schema:
            type: string
          name: workspace_ids
          in: query
          description: Retrieves requester groups for workspaces
  /api/v2/locations:
    post:
      operationId: create-location
      tags:
        - Locations
      summary: Create a new Location
      description: Create a new Location
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/location'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  location:
                    $ref: '#/components/schemas/location'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      operationId: list-locations
      tags:
        - Locations
      summary: List All Locations in Freshservice
      description: Get a list of all locations in Freshservice
      parameters:
        - $ref: '#/components/parameters/PaginationPageParam'
        - $ref: '#/components/parameters/PaginationPerPageParam'
        - $ref: '#/components/parameters/WorkspaceIdParam'
        - in: query
          name: query
          description: 'You can filter locations by their Name. Please note that the query string needs to be URL encoded.<br/>Sample Query: https://domain.freshservice.com/api/v2/locations?query="name:%United%20Kingdom%27"'
          schema:
            type: string
            pattern: '\"name:''(.*)''\"'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  locations:
                    type: array
                    items:
                      $ref: '#/components/schemas/location'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/locations/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the Location
        schema:
          type: integer
          format: int64
          minimum: 1
    get:
      operationId: get-location
      tags:
        - Locations
      summary: Retrieve a specific location
      description: Retrieve a specific location
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  location:
                    $ref: '#/components/schemas/location'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      operationId: update-location
      tags:
        - Locations
      summary: Update an existing location
      description: Update an existing location
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/location'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  location:
                    $ref: '#/components/schemas/location'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      operationId: delete-location
      tags:
        - Locations
      summary: Delete an existing location
      description: Delete an existing location
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v2/vendors:
    post:
      operationId: create-vendor
      tags:
        - Vendors
      summary: Create a new Vendor
      description: Create a new Vendor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
              allOf:
                - $ref: '#/components/schemas/vendor'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  vendor:
                    allOf:
                      - $ref: '#/components/schemas/vendor'
                    required:
                      - id
                      - name
                      - description
                      - contact_name
                      - email
                      - mobile
                      - address
                      - phone
                      - primary_contact_id
                      - custom_fields
                      - created_at
                      - updated_at
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      operationId: list-vendors
      tags:
        - Vendors
      summary: List All Vendors in Freshservice
      description: Get a list of all Vendors in Freshservice
      parameters:
        - $ref: '#/components/parameters/PaginationPageParam'
        - $ref: '#/components/parameters/PaginationPerPageParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  vendors:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/vendor'
                      required:
                        - id
                        - name
                        - description
                        - contact_name
                        - email
                        - address
                        - mobile
                        - phone
                        - primary_contact_id
                        - custom_fields
                        - created_at
                        - updated_at
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/vendors/{id}':
    parameters:
      - name: id
        in: path
        description: Vendor Id
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
    get:
      operationId: get-vendor
      tags:
        - Vendors
      summary: View a specific vendor
      description: View a specific vendor
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  vendor:
                    allOf:
                      - $ref: '#/components/schemas/vendor'
                    required:
                      - id
                      - name
                      - description
                      - contact_name
                      - email
                      - mobile
                      - address
                      - phone
                      - primary_contact_id
                      - custom_fields
                      - created_at
                      - updated_at
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      operationId: update-vendor
      tags:
        - Vendors
      summary: Update an existing vendor
      description: Update an existing vendor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vendor'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  vendor:
                    $ref: '#/components/schemas/vendor'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      operationId: delete-vendor
      tags:
        - Vendors
      summary: Delete an existing vendor
      description: Delete an existing vendor
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v2/asset_types:
    post:
      operationId: create-asset-type
      tags:
        - Asset Types
      summary: Create a new Asset Type
      description: Create a new Asset Type
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
              allOf:
                - $ref: '#/components/schemas/asset_type'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  asset_type:
                    required:
                      - id
                      - name
                      - description
                      - parent_asset_type_id
                      - visible
                      - created_at
                      - updated_at
                    allOf:
                      - $ref: '#/components/schemas/asset_type'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      operationId: list-asset-types
      tags:
        - Asset Types
      summary: List All Asset Types in Freshservice
      description: Get a list of all Asset Types in Freshservice
      parameters:
        - $ref: '#/components/parameters/PaginationPerPageParam'
        - $ref: '#/components/parameters/PaginationPageParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  asset_types:
                    type: array
                    items:
                      required:
                        - id
                        - name
                        - description
                        - parent_asset_type_id
                        - visible
                        - created_at
                        - updated_at
                      allOf:
                        - $ref: '#/components/schemas/asset_type'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/asset_types/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      operationId: get-asset-type
      tags:
        - Asset Types
      summary: Retrieve a specific asset type
      description: Retrieve a specific asset type
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  asset_type:
                    required:
                      - id
                      - name
                      - description
                      - parent_asset_type_id
                      - visible
                      - created_at
                      - updated_at
                    allOf:
                      - $ref: '#/components/schemas/asset_type'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      operationId: update-asset-type
      tags:
        - Asset Types
      summary: Update an existing asset type
      description: Update an existing asset type
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asset_type'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  asset_type:
                    required:
                      - id
                      - name
                      - description
                      - parent_asset_type_id
                      - visible
                      - created_at
                      - updated_at
                    allOf:
                      - $ref: '#/components/schemas/asset_type'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      operationId: delete-asset-type
      tags:
        - Asset Types
      summary: Delete an existing Asset Type
      description: Delete an existing Asset Type
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/asset_types/{id}/fields':
    get:
      operationId: list-asset-type-fields
      tags:
        - Asset Types
      summary: List all fields for an asset type (including default fields)
      description: Retrieve the Asset Fields from Freshservice. The fields will be returned in the sequence that they are displayed on the UI (this includes the default fields common for all asset types and the fields specific to an asset type)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  asset_type_fields:
                    type: array
                    items:
                      required:
                        - field_header
                        - fields
                      allOf:
                        - $ref: '#/components/schemas/asset_type_field'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v2/asset_types/subtypes:
    get:
      operationId: list-all-child-asset-types
      summary: List all child asset types
      description: List all child asset types for the given asset type.
      tags:
        - Asset Types
      parameters:
        - name: ref_id
          in: query
          required: true
          description: the ref id of the asset type to list sub types
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - asset_types
                properties:
                  asset_types:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/asset_type'
                      required:
                        - id
                        - name
                        - parent_asset_type_id
                        - description
                        - visible
                        - updated_at
                        - created_at
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /api/v2/assets:
    post:
      operationId: create-asset
      tags:
        - Assets
      summary: Create an Asset
      description: Create a new asset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  asset:
                    $ref: '#/components/schemas/asset'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      operationId: list-assets
      tags:
        - Assets
      summary: List All Assets
      description: Lists all the assets in your Freshservice account.
      parameters:
        - in: query
          name: per_page
          description: The number of entries to retrieve in each page of a paginated list. This is not applicable when search or filter query is present.
          schema:
            type: integer
            default: 30
            maximum: 100
        - in: query
          name: page
          description: The page number to retrieve.
          schema:
            type: integer
            default: 1
        - in: query
          name: trashed
          description: List assets in trash.
          schema:
            type: boolean
        - in: query
          name: include
          description: Query param to include asset type fields in response.
          schema:
            type: string
            enum:
              - type_fields
        - in: query
          name: filter
          description: 'The simple or compound query which needs to be applied as a filter to the list of asset. This string needs to be URL encoded.<br/> Supported Query Parameters:<br/>asset_type_id, department_id, location_id, asset_state, user_id, agent_id, name, asset_tag, created_at, updated_at.<br/>Sample Query: https://account.freshservice.com/api/v2/assets?filter="asset_type_id:12034 AND asset_tag:''HSN2323'' AND created_at:>''2018-08-10''"'
          schema:
            type: string
            pattern: \"(.*)\"
        - in: query
          name: search
          description: 'The simple query which needs to be applied to search an asset from the list of assets.<br/> Supported Query Parameters:<br/>name, asset_tag, serial_number.<br/>Sample Query: https://account.freshservice.com/api/v2/assets?search="name:''dell monitor''"'
          schema:
            type: string
            pattern: '^\"\s*[^:]+:\s*\''.+\''\s*\"$'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  assets:
                    type: array
                    items:
                      $ref: '#/components/schemas/asset'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              examples:
                example-1:
                  summary: Invalid search query format
                  value:
                    description: Validation failed
                    errors:
                      - field: search
                        message: 'It should be in the format, "search_field:''search_term''"'
                        code: invalid_value
                example-2:
                  summary: Invalid search field in search query
                  value:
                    description: Validation failed
                    errors:
                      - field: search
                        message: 'It should be one of these values: ''name,asset_tag,serial_number'''
                        code: invalid_value
                example-3:
                  summary: Invalid filter query format
                  value:
                    description: Validation failed
                    errors:
                      - field: filter
                        message: 'Given query is invalid, expected format "keyword:value  OPERATOR keyword:''string'' OPERATOR keyword:>''yyyy-mm-dd'' OPERATOR keyword:<integer". Space is mandatory between key/value pair and operator. Please check the paranthesis if there are any.'
                        code: invalid_value
                example-4:
                  summary: Invalid filter field in filter query
                  value:
                    description: Validation failed
                    errors:
                      - field: hello
                        message: Unexpected/invalid field in request
                        code: invalid_value
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/assets/{display_id}':
    parameters:
      - name: display_id
        in: path
        description: Display ID of the asset
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
    get:
      operationId: get-asset
      tags:
        - Assets
      summary: View an Asset
      description: View a particular asset.
      parameters:
        - in: query
          name: include
          description: Query param to include asset type fields in response.
          schema:
            type: string
            enum:
              - type_fields
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  asset:
                    $ref: '#/components/schemas/asset'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      operationId: update-asset
      tags:
        - Assets
      summary: Update an existing asset
      description: Update an existing asset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  asset:
                    $ref: '#/components/schemas/asset'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      operationId: delete-asset
      tags:
        - Assets
      summary: Delete an existing Asset
      description: Delete an existing Asset
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/assets/{display_id}/restore':
    parameters:
      - name: display_id
        in: path
        description: Display ID of the asset
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
    put:
      operationId: restore-asset
      tags:
        - Assets
      summary: Restore an Asset
      description: Restore a deleted asset
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/assets/{display_id}/delete_forever':
    parameters:
      - name: display_id
        in: path
        description: Display ID of the asset
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
    put:
      operationId: delete-asset-forever
      tags:
        - Assets
      summary: Delete an Asset Permanently
      description: Delete an asset which cannot be restored later.
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/assets/{display_id}/components':
    parameters:
      - name: display_id
        in: path
        description: Display ID of the asset
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
    get:
      operationId: list-asset-components
      tags:
        - Assets
      summary: List all Asset Components
      description: List all the components of an asset
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  components:
                    type: array
                    items:
                      $ref: '#/components/schemas/component'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      operationId: create-component
      tags:
        - Assets
      summary: Create a component data for an asset
      description: Create a component data for an asset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                component_type:
                  type: string
                  format: text
                  enum:
                    - Processor
                    - Memory
                    - Logical Drive
                    - Network Adapter
                    - Hard Disk
                    - Datastore
                component_data:
                  type: array
                  items:
                    type: object
              required:
                - component_data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  components:
                    type: array
                    items:
                      $ref: '#/components/schemas/component'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/assets/{display_id}/components/{component_id}':
    parameters:
      - name: display_id
        in: path
        description: Display ID of the asset
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
      - name: component_id
        in: path
        description: ID of the asset component
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
    put:
      operationId: update-component
      tags:
        - Assets
      summary: Update an existing asset component
      description: Update an existing asset component
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                component_data:
                  type: array
                  items:
                    type: object
              required:
                - component_data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  components:
                    $ref: '#/components/schemas/component'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/assets/{display_id}/requests':
    parameters:
      - name: display_id
        in: path
        description: Display ID of the asset
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
    get:
      operationId: list-asset-requests
      tags:
        - Assets
      summary: List All Associated Requests
      description: List all the requests associated to the asset
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  requests:
                    type: array
                    items:
                      $ref: '#/components/schemas/asset_requests'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/users/{id}/assignment-history':
    parameters:
      - name: id
        in: path
        description: User ID
        required: true
        schema:
          type: integer
    get:
      operationId: assignment-history
      tags:
        - Assignment History of User
      summary: Assignment History of user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  assignment_history_user:
                    type: array
                    items:
                      $ref: '#/components/schemas/assignment_history_user'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/assets/{id}/assignment-history':
    parameters:
      - name: id
        in: path
        description: Asset ID
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
    get:
      operationId: assignment-history-asset
      tags:
        - Assignment History of Asset
      summary: Assignment History for asset
      description: Retrieve assignment history of an asset
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  assignment_history_asset:
                    type: array
                    items:
                      $ref: '#/components/schemas/assignment_history_asset'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/assets/{display_id}/contracts':
    parameters:
      - name: display_id
        in: path
        description: Display ID of the asset
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
    get:
      operationId: list-asset-contracts
      tags:
        - Assets
      summary: List all associated Contracts
      description: List all the contracts that an asset has been associated to
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  contracts:
                    type: array
                    items:
                      $ref: '#/components/schemas/asset_contracts'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v2/relationship_types:
    get:
      operationId: list-relationship_type
      tags:
        - Relationships
      summary: List all Relationship Types
      description: Lists all the relationship types in your Freshservice account.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  relationship_types:
                    type: array
                    items:
                      $ref: '#/components/schemas/relationship_type'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/assets/{display_id}/relationships':
    parameters:
      - name: display_id
        in: path
        description: Display ID of the asset
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
    get:
      operationId: list-asset-relationships
      tags:
        - Assets
      summary: List all Relationships for an Asset
      description: Lists all the relationships of a particular asset
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  relationships:
                    $ref: '#/components/schemas/relationship'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v2/relationships:
    get:
      operationId: list-relationships
      tags:
        - Relationships
      summary: List all Relationships
      description: Lists all the relationships in your Freshservice account
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  relationships:
                    type: array
                    items:
                      $ref: '#/components/schemas/relationship'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    delete:
      operationId: delete-relationship
      tags:
        - Relationships
      summary: Delete Relationships in bulk
      description: Delete relationships in your Freshservice account in bulk.
      parameters:
        - name: ids
          in: query
          required: true
          description: Ids of the relationships to delete separated by comma.
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/relationships/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: Id of the relationship
        schema:
          type: integer
          format: int64
    get:
      operationId: get-relationships
      tags:
        - Relationships
      summary: View a Relationship
      description: View a particular relationship in your Freshservice account.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  relationships:
                    type: array
                    items:
                      $ref: '#/components/schemas/relationship'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  /api/v2/applications:
    get:
      operationId: list-software
      tags:
        - Software
      summary: List all Software
      description: List all software
      parameters:
        - $ref: '#/components/parameters/PaginationPageParam'
        - $ref: '#/components/parameters/PaginationPerPageParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  application:
                    $ref: '#/components/schemas/software'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      operationId: create-software
      tags:
        - Software
      summary: Create a new software
      description: Create a new software
      requestBody:
        required: true
        description: Software that needs to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/software'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  application:
                    $ref: '#/components/schemas/software'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      operationId: delete-software
      tags:
        - Software
      summary: Delete multiple software.
      description: Delete multiple software.
      parameters:
        - name: ids
          in: query
          required: true
          description: Array of ids of software to be deleted.
          schema:
            type: array
      responses:
        '204':
          description: No Content
        '207':
          $ref: '#/components/responses/MultiStatus'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v2/applications/check_saas_feature:
    get:
      operationId: check-saas-feature
      tags:
        - Software
      summary: Check whether the saas feature is enabled
      description: Check whether the saas feature is enabled
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  saas_app_management:
                    type: boolean
                  pod:
                    type: string
                    minLength: 1
                    maxLength: 255
                required:
                  - saas_app_management
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/applications/{id}':
    get:
      operationId: view-specific-software
      tags:
        - Software
      summary: view a particular software
      description: view a particular software
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  application:
                    $ref: '#/components/schemas/software'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      operationId: update-specific-software
      summary: Update an existing software
      description: Update an existing software
      tags:
        - Software
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Software that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/software'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  application:
                    $ref: '#/components/schemas/software'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      operationId: delete-specific-software
      tags:
        - Software
      summary: Delete a particular software.
      description: Delete a particular software.
      parameters:
        - name: id
          in: path
          required: true
          description: The name of the software to be deleted.
          schema:
            type: integer
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/applications/{id}/installations':
    get:
      operationId: list-software-installations
      tags:
        - Software
      summary: List all devices where the software is installed in
      description: list of all the devices where the Software is installed in
      parameters:
        - $ref: '#/components/parameters/PaginationPageParam'
        - $ref: '#/components/parameters/PaginationPerPageParam'
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  installation:
                    $ref: '#/components/schemas/software_installations'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      operationId: create-software-installations
      tags:
        - Software
      summary: Add a new device to a Software.
      description: Add a new device to a Software.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Software Installation that needs to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/software_installations'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  installation:
                    $ref: '#/components/schemas/software_installations'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      operationId: delete-software-installations
      tags:
        - Software
      summary: Remove devices from a Software in bulk
      description: Remove devices from a Software in bulk.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: device_ids
          in: query
          required: true
          schema:
            type: array
      responses:
        '204':
          description: No Content
        '207':
          $ref: '#/components/responses/MultiStatus'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/applications/{id}/licenses':
    get:
      operationId: list-software-license
      tags:
        - Software
      summary: List all license of the software
      description: List of all license of the software
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - $ref: '#/components/parameters/PaginationPageParam'
        - $ref: '#/components/parameters/PaginationPerPageParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  licenses:
                    $ref: '#/components/schemas/software_licenses'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/applications/{id}/users':
    get:
      operationId: list-software-users
      tags:
        - Software
      summary: List of users using a particular Software
      description: List of users using a particular Software
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - $ref: '#/components/parameters/PaginationPageParam'
        - $ref: '#/components/parameters/PaginationPerPageParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  application_user:
                    $ref: '#/components/schemas/software_users'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      operationId: create-software-users
      tags:
        - Software
      summary: Add Users to a Software in bulk.
      description: Add Users to a Software in bulk.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Software Users that needs to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/software_users'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  application_user:
                    $ref: '#/components/schemas/software_users'
        '207':
          $ref: '#/components/responses/MultiStatus'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      operationId: update-software-user
      tags:
        - Software
      summary: Update Users of a Software in bulk.
      description: Update Users of a Software in bulk.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Software User that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/software_users'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  application_user:
                    $ref: '#/components/schemas/software_users'
        '207':
          $ref: '#/components/responses/MultiStatus'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      operationId: delete-software-user
      tags:
        - Software
      summary: Remove Users from a Software in bulk.
      description: Remove Users from a Software in bulk.
      parameters:
        - name: user_ids
          in: query
          required: true
          schema:
            type: array
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content
        '207':
          $ref: '#/components/responses/MultiStatus'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v2/surveys:
    post:
      operationId: create-survey
      tags:
        - Customer Satisfaction Surveys
      summary: Create Survey
      description: Create a new CSAT survey in Freshservice
      requestBody:
        description: CSAT Survey that needs to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/survey'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  survey:
                    $ref: '#/components/schemas/survey'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    get:
      operationId: list-surveys
      tags:
        - Customer Satisfaction Surveys
      summary: List All Surveys
      description: Retrieve a list of all CSAT Surveys in Freshservice
      parameters:
        - in: query
          name: active
          description: Query param to filter out active / inactive surveys. E.g. Passing the parameter active=1 will list the active survey.
          schema:
            type: integer
        - in: query
          name: per_page
          description: The number of entries to retrieve in each page of a paginated list.
          schema:
            type: integer
            default: 10
        - in: query
          name: page
          description: The page number to retrieve.
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  surveys:
                    type: array
                    items:
                      $ref: '#/components/schemas/survey'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/surveys/{survey_id}':
    get:
      operationId: get-survey
      tags:
        - Customer Satisfaction Surveys
      summary: View Survey
      description: Retrieve the CSAT Survey with the given ID from Freshservice
      parameters:
        - name: survey_id
          in: path
          description: ID of CSAT survey to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  surveys:
                    type: array
                    items:
                      $ref: '#/components/schemas/survey'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    put:
      operationId: update-survey
      tags:
        - Customer Satisfaction Surveys
      summary: Update Survey
      description: Update an existing CSAT Survey in Freshservice
      parameters:
        - name: survey_id
          in: path
          description: ID of Survey to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: Survey that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/survey'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  survey:
                    $ref: '#/components/schemas/survey'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    delete:
      operationId: delete-survey
      tags:
        - Customer Satisfaction Surveys
      summary: Delete Survey
      description: Delete the Survey with the given ID along with the underlying responses to this Survey from Freshservice
      parameters:
        - name: survey_id
          in: path
          description: ID of survey to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/surveys/{survey_id}/activate':
    put:
      operationId: activate-survey
      tags:
        - Customer Satisfaction Surveys
      summary: Activate Survey
      description: Activate the CSAT Survey with the given ID from Freshservice
      parameters:
        - name: survey_id
          in: path
          description: ID of CSAT survey to activate
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/surveys/{survey_id}/deactivate':
    put:
      operationId: deactivate-survey
      tags:
        - Customer Satisfaction Surveys
      summary: Deactivate Survey
      description: Deactivate the CSAT Survey with the given ID from Freshservice
      parameters:
        - name: survey_id
          in: path
          description: ID of CSAT survey to deactivate
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/service_items/{service_item_id}':
    get:
      operationId: get-service-item
      tags:
        - Service Catalog
      summary: View a Service Item
      description: View a Service item
      parameters:
        - name: service_item_id
          in: path
          description: ID of service item to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  service_item:
                    type: array
                    items:
                      $ref: '#/components/schemas/service_item'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  /api/v2/service_items:
    get:
      operationId: list-service-items
      tags:
        - Service Catalog
      summary: List All Service Items
      description: Retrieve a list of all Service Items in Freshservice
      parameters:
        - in: query
          name: per_page
          description: The number of entries to retrieve in each page of a paginated list.
          schema:
            type: integer
            default: 10
        - in: query
          name: page
          description: The page number to retrieve.
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  service_item:
                    type: array
                    items:
                      $ref: '#/components/schemas/service_item'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/catalog/item/{service_item_id}/fields':
    get:
      operationId: list-catalog-item-fields
      tags:
        - Service Catalog
      summary: View all fields of the service item
      description: View all fields of the service item
      parameters:
        - name: service_item_id
          in: path
          description: ID of service item to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  departments:
                    type: array
                    items:
                      $ref: '#/components/schemas/service_item_field'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  /api/v2/service_requests:
    post:
      operationId: create-service-request
      tags:
        - Service Catalog
      summary: Create a Service Request
      description: Create a service request in Freshservice
      requestBody:
        required: true
        description: Service request that needs to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/service_request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  service_item:
                    $ref: '#/components/schemas/service_item'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/service_requests/{service_request_id}':
    put:
      operationId: update-service-request
      tags:
        - Service Catalog
      summary: Update a service request
      description: Update an existing Service request in Freshservice
      parameters:
        - name: service_request_id
          in: path
          description: ID of Service Request to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Service request to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/service_request_update'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  department:
                    $ref: '#/components/schemas/service_item'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  /api/v2/solutions/articles:
    get:
      operationId: list-solution-article
      tags:
        - Solution Articles
      summary: List All Solution articles
      description: Retrieve a list of all Solution articles in Freshservice
      parameters:
        - in: query
          name: per_page
          description: The number of entries to retrieve in each page of a paginated list.
          schema:
            type: integer
            default: 30
        - in: query
          name: page
          description: The page number to retrieve.
          schema:
            type: integer
            default: 1
        - in: query
          name: folder_id
          description: The ID of the folder whose solution articles have to be listed.
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  solution_articles:
                    type: array
                    items:
                      required:
                        - id
                        - created_at
                        - updated_at
                        - description
                        - description_text
                        - title
                        - status
                        - user_id
                        - approval_status
                        - position
                        - folder_id
                        - category_id
                        - thumbs_up
                        - thumbs_down
                        - modified_by
                        - modified_at
                        - inserted_into_tickets
                        - url
                        - article_type
                        - views
                        - attachments
                        - folder_visibility
                        - group_folder_group_ids
                        - folder_department_ids
                        - group_folder_requester_group_ids
                        - group_folder_department_ids
                        - keywords
                        - review_date
                      allOf:
                        - $ref: '#/components/schemas/SolutionArticle'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    post:
      operationId: create-solution-article
      tags:
        - Solution Articles
      summary: Create a solution article in a folder
      description: Create a new solution article in Freshservice
      requestBody:
        required: true
        description: Article that needs to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SolutionArticle'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  solution_article:
                    required:
                      - id
                      - created_at
                      - updated_at
                      - title
                      - status
                      - description
                      - description_text
                      - category_id
                      - folder_id
                      - user_id
                      - modified_by
                      - modified_at
                      - inserted_into_tickets
                      - url
                      - position
                      - article_type
                      - thumbs_up
                      - thumbs_down
                      - approval_status
                      - approvals
                      - cloud_files
                      - attachments
                      - keywords
                      - tags
                      - views
                      - review_date
                      - group_folder_group_ids
                      - folder_department_ids
                      - group_folder_requester_group_ids
                      - group_folder_department_ids
                      - folder_visibility
                    allOf:
                      - $ref: '#/components/schemas/SolutionArticle'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/solutions/articles/{article_id}':
    get:
      operationId: get-solution-article
      tags:
        - Solution Articles
      summary: View a solution article
      description: View a solution article
      parameters:
        - name: article_id
          in: path
          description: ID of solution article
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - solution_article
                properties:
                  solution_article:
                    required:
                      - id
                      - created_at
                      - updated_at
                      - title
                      - status
                      - description
                      - description_text
                      - category_id
                      - folder_id
                      - user_id
                      - modified_by
                      - modified_at
                      - inserted_into_tickets
                      - url
                      - position
                      - article_type
                      - thumbs_up
                      - thumbs_down
                      - approval_status
                      - attachments
                      - keywords
                      - tags
                      - approvals
                      - views
                      - review_date
                      - cloud_files
                      - group_folder_group_ids
                      - folder_department_ids
                      - group_folder_requester_group_ids
                      - group_folder_department_ids
                      - folder_visibility
                    allOf:
                      - $ref: '#/components/schemas/SolutionArticle'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    put:
      operationId: update-solution-article
      tags:
        - Solution Articles
      summary: Update a solution article
      description: Update the solution article with the given ID from Freshservice
      parameters:
        - in: path
          name: article_id
          description: ID of the solution article to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: Article that needs to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SolutionArticle'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - solution_article
                properties:
                  solution_article:
                    required:
                      - id
                      - created_at
                      - updated_at
                      - title
                      - status
                      - description
                      - description_text
                      - category_id
                      - folder_id
                      - user_id
                      - modified_by
                      - modified_at
                      - inserted_into_tickets
                      - url
                      - position
                      - article_type
                      - thumbs_up
                      - thumbs_down
                      - approval_status
                      - attachments
                      - keywords
                      - tags
                      - approvals
                      - views
                      - review_date
                      - group_folder_group_ids
                      - folder_department_ids
                      - group_folder_requester_group_ids
                      - group_folder_department_ids
                      - folder_visibility
                    allOf:
                      - $ref: '#/components/schemas/SolutionArticle'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    delete:
      operationId: delete-solution-article
      tags:
        - Solution Articles
      summary: Delete a solution article
      description: Delete the solution article with the given ID from Freshservice
      parameters:
        - name: article_id
          in: path
          description: ID of the solution article to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/solutions/articles/{id}/send_for_approval':
    parameters:
      - name: id
        in: path
        description: ID of Article to send for approval
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
    put:
      operationId: put-api-v2-solutions-articles-id-send_for_approval
      tags:
        - Solution Articles
      summary: Send Article for Approval
      description: Send the article for review with the given ID from Freshservice
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                additionalProperties: false
                properties:
                  article:
                    allOf:
                      - $ref: '#/components/schemas/SolutionArticle'
                required:
                  - article
        '206':
          $ref: '#/components/responses/PartialContent'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/solutions/articles/{id}/outdate_child_articles':
    parameters:
      - name: id
        in: path
        description: ID of the primary article
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
    put:
      operationId: put-api-v2-solutions-articles-article_id-outdate_child_articles
      tags:
        - Solution Articles
      summary: Outdate all child articles
      description: Outdating all child articles of the primary article
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                additionalProperties: false
                properties:
                  article:
                    required:
                      - id
                      - created_at
                      - updated_at
                      - title
                      - status
                      - description
                      - description_text
                      - category_id
                      - folder_id
                      - user_id
                      - modified_by
                      - modified_at
                      - inserted_into_tickets
                      - url
                      - position
                      - article_type
                      - thumbs_up
                      - thumbs_down
                      - approval_status
                      - attachments
                      - keywords
                      - tags
                      - approvals
                      - views
                      - review_date
                      - group_folder_group_ids
                      - folder_department_ids
                      - group_folder_requester_group_ids
                      - group_folder_department_ids
                      - folder_visibility
                    allOf:
                      - $ref: '#/components/schemas/SolutionArticle'
                required:
                  - article
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v2/solutions/folders:
    get:
      operationId: list-solution-folders
      tags:
        - Solution Articles
      summary: List All Solution Folders
      description: Retrieve a list of all Solution Folders in Freshservice
      parameters:
        - name: category_id
          in: query
          description: ID of solution category in which the folders reside
          schema:
            type: integer
            format: int64
        - in: query
          name: per_page
          description: The number of entries to retrieve in each page of a paginated list.
          schema:
            type: integer
            default: 30
        - in: query
          name: page
          description: The page number to retrieve.
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  solution_folders:
                    type: array
                    items:
                      $ref: '#/components/schemas/solution_folder'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    post:
      operationId: create-solution-folder
      tags:
        - Solution Articles
      summary: Create a solution folder
      description: Create a new solution folder in Freshservice
      requestBody:
        required: true
        description: Folder that needs to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/solution_folder'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  solution_folder:
                    $ref: '#/components/schemas/solution_folder'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/solutions/folders/{folder_id}':
    get:
      operationId: get-solution-folder
      tags:
        - Solution Articles
      summary: View a solution folder
      description: View a solution folder
      parameters:
        - name: folder_id
          in: path
          description: ID of solution folder
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  solution_folder:
                    $ref: '#/components/schemas/solution_folder'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    put:
      operationId: update-solution-folder
      tags:
        - Solution Articles
      summary: Update a solution folder
      description: Update the solution folder with the given ID from Freshservice
      parameters:
        - name: folder_id
          in: path
          description: ID of the solution folder that has to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: Folder that needs to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/solution_folder'
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    delete:
      operationId: delete-solution-folder
      tags:
        - Solution Articles
      summary: Delete a solution folder
      description: Delete the solution folder with the given ID from Freshservice
      parameters:
        - name: folder_id
          in: path
          description: ID of the solution folder that has to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  /api/v2/solutions/categories:
    get:
      operationId: list-solution-category
      tags:
        - Solution Articles
      summary: List All Solution Categories
      description: Retrieve a list of all Solution Categories in Freshservice
      parameters:
        - in: query
          name: per_page
          description: The number of entries to retrieve in each page of a paginated list.
          schema:
            type: integer
            default: 30
        - in: query
          name: page
          description: The page number to retrieve.
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  solution_categories:
                    type: array
                    items:
                      $ref: '#/components/schemas/solution_category'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    post:
      operationId: create-solution-category
      tags:
        - Solution Articles
      summary: Create a solution category
      description: Create a new solution category in Freshservice
      requestBody:
        required: true
        description: Solution Category that needs to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/solution_category'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  solution_category:
                    $ref: '#/components/schemas/solution_category'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/solutions/categories/{category_id}':
    get:
      operationId: get-solution-category
      tags:
        - Solution Articles
      summary: View a solution category
      description: View a solution category
      parameters:
        - name: category_id
          in: path
          description: ID of solution category
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  solution_category:
                    $ref: '#/components/schemas/solution_category'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    put:
      operationId: update-solution-category
      tags:
        - Solution Articles
      summary: Update a solution category
      description: Update the solution category with the given ID from Freshservice
      parameters:
        - name: category_id
          in: path
          description: ID of the solution category which has to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: Category that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/solution_category'
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    delete:
      operationId: delete-solution-category
      tags:
        - Solution Articles
      summary: Delete a solution category
      description: Delete the solution category with the given ID from Freshservice
      parameters:
        - name: category_id
          in: path
          description: ID of the solution category which has to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  /api/v2/requesters:
    post:
      operationId: create-requester
      tags:
        - Requesters
      summary: Create Requester
      description: Create a new Requester in Freshservice
      requestBody:
        required: true
        description: Requester who needs to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Requester'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  requester:
                    $ref: '#/components/schemas/Requester'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    get:
      operationId: list-requesters
      tags:
        - Requesters
      summary: List All Requesters
      description: Retrieve a list of all Requesters in Freshservice
      parameters:
        - in: query
          name: per_page
          description: The number of entries to retrieve in each page of a paginated list.
          schema:
            type: integer
            default: 10
        - in: query
          name: page
          description: The page number to retrieve.
          schema:
            type: integer
            default: 1
        - in: query
          name: email
          description: The email address for which the corresponding requester needs to be listed.
          schema:
            type: string
        - in: query
          name: mobile_phone_number
          description: The mobile phone number for which the corresponding requesters need to be listed.
          schema:
            type: string
        - in: query
          name: work_phone_number
          description: The work phone number for which the corresponding requesters need to be listed.
          schema:
            type: string
        - in: query
          name: active
          description: 'Signifies if the user accounts to be listed are active (true), or have been deactivated. Not applying this filter returns both active and deactivated accounts.'
          schema:
            type: boolean
        - in: query
          name: query
          description: 'The simple or compound query which needs to be applied as a filter to the list of requesters. This string needs to be URL encoded.<br/> Supported Query Parameters:<br/>first_name, last_name, job_title, primary_email, secondary_emails, work_phone_number, mobile_phone_number, department_id, reporting_manager_id, time_zone, language, location_id, created_at, updated_at, (all custom fields).<br/>Sample Query: https://account.freshservice.com/api/v2/requesters?query="job_titile:''HR Manager'' AND created_at:>''2018-08-10''"'
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  requesters:
                    type: array
                    items:
                      $ref: '#/components/schemas/Requester'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/requesters/{requester_id}':
    get:
      operationId: get-requester
      tags:
        - Requesters
      summary: View Requester
      description: Retrieve the Requester with the given ID from Freshservice
      parameters:
        - name: requester_id
          in: path
          description: ID of requester to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  requester:
                    $ref: '#/components/schemas/Requester'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    put:
      operationId: update-requester
      tags:
        - Requesters
      summary: Update Requester
      description: Update an existing Requester in Freshservice
      parameters:
        - name: requester_id
          in: path
          description: ID of requester to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Requester who needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Requester'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  requester:
                    $ref: '#/components/schemas/Requester'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    delete:
      operationId: delete-requester
      tags:
        - Requesters
      summary: Delete Requester
      description: Delete the Requester with the given ID from Freshservice
      parameters:
        - name: requester_id
          in: path
          description: ID of requester to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/requesters/{requester_id}/forget':
    delete:
      operationId: forget-requester
      tags:
        - Requesters
      summary: Forget Requester
      description: Permanently deletes the requester and the tickets that they requested.
      parameters:
        - name: requester_id
          in: path
          description: ID of requester to forget
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/requesters/{requester_id}/convert_to_agent':
    put:
      operationId: convert-requester-to-agent
      tags:
        - Requesters
      summary: Convert Requester to Agent
      description: Convert a requester to an occasional agent with SD Agent role and no group memberships.
      parameters:
        - name: requester_id
          in: path
          description: ID of requester to update
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  agent:
                    $ref: '#/components/schemas/Agent'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/requesters/{primary_requester_id}/merge':
    put:
      operationId: merge-requester
      tags:
        - Requesters
      summary: Merge Requesters
      description: Merge secondary requesters into a primary requester.
      parameters:
        - name: primary_requester_id
          in: path
          description: ID of the primary requester
          required: true
          schema:
            type: integer
            format: int64
        - name: secondary_requesters
          in: query
          description: ID of the primary requester
          required: true
          schema:
            type: array
            minItems: 1
            maxItems: 3
            items:
              type: integer
              format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  agent:
                    $ref: '#/components/schemas/Requester'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  /api/v2/requester_fields:
    get:
      operationId: list-requester-fields
      tags:
        - Requesters
      summary: List All Requester Fields
      description: Retrieve a list of all Requester Fields in Freshservice
      parameters:
        - in: query
          name: per_page
          description: The number of entries to retrieve in each page of a paginated list.
          schema:
            type: integer
            default: 10
        - in: query
          name: page
          description: The page number to retrieve.
          schema:
            type: integer
            default: 1
        - in: query
          name: include
          description: Query param to include user field groups in response. E.g. '?include=user_field_groups' Will return the user field groups details
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  requester_fields:
                    type: array
                    items:
                      $ref: '#/components/schemas/requester_field'
                  user_field_groups:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserFieldGroup'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  /api/v2/agents:
    post:
      operationId: create-agent
      tags:
        - Agents
      summary: Create Agent
      description: Create a new Agent in Freshservice
      requestBody:
        required: true
        description: Agent who needs to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Agent'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  agent:
                    $ref: '#/components/schemas/Agent'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  agent:
                    $ref: '#/components/schemas/Agent'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    get:
      operationId: list-agents
      tags:
        - Agents
      summary: List All Agents
      description: Retrieve a list of all Agents in Freshservice
      parameters:
        - in: query
          name: per_page
          description: The number of entries to retrieve in each page of a paginated list.
          schema:
            type: integer
            default: 10
        - in: query
          name: page
          description: The page number to retrieve.
          schema:
            type: integer
            default: 1
        - in: query
          name: email
          description: The email address for which the corresponding requester needs to be listed.
          schema:
            type: string
        - in: query
          name: mobile_phone_number
          description: The mobile phone number for which the corresponding requesters need to be listed.
          schema:
            type: string
        - in: query
          name: work_phone_number
          description: The work phone number for which the corresponding requesters need to be listed.
          schema:
            type: string
        - in: query
          name: state
          description: 'Signifies whether the agents to be listed are full-time agents or occasional agents. Supports two possible values - fulltime, occasional.'
          schema:
            type: string
        - in: query
          name: active
          description: 'Signifies if the user accounts to be listed are active (true), or have been deactivated. Not applying this filter returns both active and deactivated accounts.'
          schema:
            type: boolean
        - in: query
          name: query
          description: 'The simple or compound query which needs to be applied as a filter to the list of agents. This string needs to be URL encoded.<br/> Supported Query Parameters:<br/>first_name, last_name, job_title, email, work_phone_number, mobile_phone_number, department_id, reporting_manager_id, time_zone, language, location_id, created_at, updated_at, (all custom fields).<br/>Sample Query: https://account.freshservice.com/api/v2/agents?query="job_titile:''HR Manager'' AND created_at:>''2018-08-10''"'
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  agents:
                    type: array
                    items:
                      $ref: '#/components/schemas/Agent'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/agents/{agent_id}':
    get:
      operationId: get-agent
      tags:
        - Agents
      summary: View Agent
      description: Retrieve the Agent with the given ID from Freshservice
      parameters:
        - name: agent_id
          in: path
          description: ID of agent to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  agent:
                    $ref: '#/components/schemas/Agent'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    put:
      operationId: update-agent
      tags:
        - Agents
      summary: Update Agent
      description: Update an existing Agent in Freshservice
      parameters:
        - name: agent_id
          in: path
          description: ID of agent to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: Agent who needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Agent'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  agent:
                    $ref: '#/components/schemas/Agent'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  agent:
                    $ref: '#/components/schemas/Agent'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    delete:
      operationId: delete-agent
      tags:
        - Agents
      summary: Delete Agent
      description: Converts the Agent with the given ID to a requester.
      parameters:
        - name: agent_id
          in: path
          description: ID of agent to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  agent:
                    $ref: '#/components/schemas/Agent'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/agents/{agent_id}/forget':
    delete:
      operationId: forget-agent
      tags:
        - Agents
      summary: Forget Agent
      description: Permanently deletes the agent and the tickets that they requested.
      parameters:
        - name: agent_id
          in: path
          description: ID of agent to forget
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  agent:
                    $ref: '#/components/schemas/Agent'
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  /api/v2/agent_fields:
    get:
      operationId: list-agent-fields
      tags:
        - Agents
      summary: List All Agent Fields
      description: Retrieve a list of all Agent Fields in Freshservice
      parameters:
        - in: query
          name: per_page
          description: The number of entries to retrieve in each page of a paginated list.
          schema:
            type: integer
            default: 10
        - in: query
          name: page
          description: The page number to retrieve.
          schema:
            type: integer
            default: 1
        - in: query
          name: include
          description: Query param to include user field groups in response. E.g. '?include=user_field_groups' Will return the user field groups details
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  requester_fields:
                    type: array
                    items:
                      $ref: '#/components/schemas/agent_field'
                  user_field_groups:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserFieldGroup'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  /api/v2/cabs:
    get:
      operationId: list-cabs
      tags:
        - CABs
      summary: List All Cabs
      description: Lists all the cabs present in an Account
      parameters:
        - in: query
          name: per_page
          description: The number of entries to retrieve in each page of a paginated list.
          schema:
            type: integer
            default: 10
        - in: query
          name: page
          description: The page number to retrieve.
          schema:
            type: integer
            default: 1
        - in: query
          name: include
          description: Includes a requested detail which will be clubbed in with the response. Only include members is allowed now
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  cabs:
                    type: array
                    items:
                      $ref: '#/components/schemas/CAB'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    post:
      operationId: create-cab
      tags:
        - CABs
      summary: Create a new CAB
      requestBody:
        description: Properties of the CAB to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cab_create'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  cabs:
                    type: array
                    items:
                      $ref: '#/components/schemas/CAB'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/cabs/{cab_id}':
    get:
      operationId: show-cab
      tags:
        - CABs
      summary: Show Details of a Cab
      description: Shows all the details of the requested cab along with the member-ids.
      parameters:
        - in: path
          name: cab_id
          description: The unique id of the cab for which the details are needed
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: include
          description: Includes a requested detail which will be clubbed in with the response. Only include members is allowed now
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  cab:
                    $ref: '#/components/schemas/CAB'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    patch:
      operationId: update-cab
      tags:
        - CABs
      summary: Update an existing CAB
      description: Updates all the details of the requested cab allowing to add and remove members.
      parameters:
        - in: path
          name: cab_id
          description: The unique id of the cab for which the details are needed
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Properties of the CAB to be update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cab_update'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  cabs:
                    type: array
                    items:
                      $ref: '#/components/schemas/CAB'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    delete:
      operationId: delete-cab
      tags:
        - CABs
      summary: Delete a CAB.
      description: Deletes the CAB and dissaociates its members from the CAB.
      parameters:
        - name: cab_id
          in: path
          description: ID of the CAB to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  /api/v2/tickets:
    post:
      operationId: create-ticket
      tags:
        - Tickets
      summary: Create a Ticket
      description: Create a new Ticket in Freshservice
      requestBody:
        required: true
        description: details of the Freshservice Ticket to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ticket'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  ticket:
                    $ref: '#/components/schemas/ticket'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    get:
      operationId: list-tickets
      tags:
        - Tickets
      summary: List all Tickets
      description: Fetch the list of all Tickets in FreshService
      parameters:
        - in: query
          name: filter
          description: 'Pre-defined filters. The filters available are [new_and_my_open, watching, spam, deleted].'
          schema:
            type: string
        - in: query
          name: email
          description: Query param to filter out tickets requester's email id.
          schema:
            type: string
        - in: query
          name: requester_id
          description: Query param to filter out tickets created by a particular requester.
          schema:
            type: integer
        - in: query
          name: updated_since
          description: 'Query param to filter out tickets based on updated time. E.g. ''?updated_since=2015-01-19T02:00:00Z''.'
          schema:
            type: string
        - in: query
          name: include
          description: 'Query param to include certain fields in response. E.g. ''?include=stats'' Will return the ticket’s closed_at, resolved_at and first_responded_at time. ''?include=requester'' Will return the requester''s email, id, mobile, name, and phone.'
          schema:
            type: string
        - in: query
          name: order_type
          description: Query param to sort the list of tickets. Supported values - 'asc' and 'desc'. Default is 'desc'
          schema:
            type: string
        - in: query
          name: type
          description: 'Query param to filter out tickets based on type. For Incidents: /api/v2/tickets?type=Incident. For Service Requests: /api/v2/tickets?type=Service+Request'
          schema:
            type: string
        - in: query
          name: workspace_id
          description: 'Query param to filter out tickets based on workspace_id. E.g. /api/v2/tickets?workspace_id=2.  If a workspace_id is not specified as a URL parameter, only tickets from the primary workspace will be included in the response. If workspace_id is specified as 0, tickets from across all workspaces will be included in the response with just the global fields. Applicable only to accounts on the Employee Support Mode.'
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tickets:
                    type: array
                    items:
                      $ref: '#/components/schemas/ticket'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/tickets/{ticket_id}':
    get:
      operationId: get-ticket
      tags:
        - Tickets
      summary: View a Ticket
      description: Get the details of a FreshService Ticket
      parameters:
        - name: ticket_id
          in: path
          description: ID of the ticket to be fetched
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: include
          description: 'Query param to include certain fields in response. E.g. ''?include=stats'' Will return the ticket’s closed_at, resolved_at and first_responded_at time. ''?include=requester'' Will return the requester''s email, id, mobile, name, and phone. Supported options - [conversations, requester, problem, stats, assets, change, related_tickets]'
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  ticket:
                    $ref: '#/components/schemas/ticket'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    put:
      operationId: update-ticket
      tags:
        - Tickets
      summary: Update a  ticket
      description: Edit a Freshservice Ticket
      parameters:
        - name: ticket_id
          in: path
          description: ID of the ticket to be updated
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: bypass_mandatory
          description: 'Query param to bypass mandatory fields check while updating the ticket except for requester_id, source. Any business rules trying to mandate certain fields will also be bypassed. All fields configured as mandatory upon closing or resolving the ticket can be skipped while updating the ticket if this parameter is passed as true. This can only be passed by an admin.'
          schema:
            type: boolean
      requestBody:
        description: Details of the ticket to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ticket'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ticket:
                    $ref: '#/components/schemas/ticket'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    delete:
      operationId: delete-ticket
      tags:
        - Tickets
      summary: Delete a ticket
      description: Remove a Freshservice Ticket
      parameters:
        - name: ticket_id
          in: path
          description: ID of the ticket to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/tickets/{ticket_id}/move_workspace':
    put:
      operationId: move-ticket
      tags:
        - Tickets
      summary: move a ticket to another workspace
      description: 'This API moves a ticket to a different workspace, while also allowing the assigned group and agent to be modified.'
      parameters:
        - name: ticket_id
          in: path
          description: ID of the ticket to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Details of the ticket to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/move_ticket'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ticket:
                    $ref: '#/components/schemas/ticket'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/tickets/{ticket_id}/restore':
    put:
      operationId: restore-ticket
      tags:
        - Tickets
      summary: Restore a ticket
      description: Restore a deleted Freshservice Ticket
      parameters:
        - name: ticket_id
          in: path
          description: ID of the ticket to be restored
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/tickets/{ticket_id}/create_child_ticket':
    post:
      operationId: create-child-ticket
      tags:
        - Tickets
      summary: Create child ticket for a ticket
      description: Create a new child Ticket on a Freshservice Ticket
      parameters:
        - name: ticket_id
          in: path
          description: ID of ticket request for which child ticket needs to be created
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: details of child ticket to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ticket'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  ticket:
                    $ref: '#/components/schemas/ticket'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/tickets/{ticket_id}/csat_response':
    get:
      parameters:
        - schema:
            type: integer
          name: ticket_id
          in: path
          required: true
      summary: Retrieve a csat response of a Ticket with the given ID from Freshservice
      tags:
        - Tickets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/csat_response'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
      description: Retrieve a csat response of a Ticket with the given ID from Freshservice
      operationId: get-tickets-csat-response
  /api/v2/ticket_form_fields:
    get:
      operationId: get-ticket-form-fields
      tags:
        - Tickets
      summary: View Ticket Form Fields
      description: Retrieve all the Fields that constitute the Ticket Object
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  ticket_fields:
                    type: array
                    items:
                      $ref: '#/components/schemas/ticket_form_fields'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/tickets/{ticket_id}/activities':
    get:
      operationId: get-ticket-activities
      tags:
        - Tickets
      summary: View Ticket Activities
      description: Get Activities of a Ticket
      parameters:
        - name: ticket_id
          in: path
          description: ID of ticket for which activities has to be fetched
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  ticket:
                    $ref: '#/components/schemas/ticket_activities'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/tickets/{ticket_id}/reply':
    post:
      operationId: create-ticket-reply
      tags:
        - Tickets
      summary: Create a Reply on a ticket
      description: Post a new Reply on a Freshservice Ticket
      parameters:
        - name: ticket_id
          in: path
          description: ID of ticket for which reply has to be created
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: details of the Reply to be posted
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reply'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  conversation:
                    $ref: '#/components/schemas/reply'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/tickets/{ticket_id}/notes':
    post:
      operationId: create-ticket-note
      tags:
        - Tickets
      summary: Create a Note on a ticket
      description: Post a new Note on a Freshservice Ticket
      parameters:
        - name: ticket_id
          in: path
          description: ID of the ticket for which note has to be added
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: details of the note to be posted
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ticket_note'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  conversation:
                    $ref: '#/components/schemas/note'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/tickets/{ticket_id}/conversations':
    get:
      operationId: list-ticket-conversations
      tags:
        - Tickets
      summary: List all conversations on a Ticket
      description: Fetch the list of all conversations on a Freshservice Ticket
      parameters:
        - name: ticket_id
          in: path
          description: ID of the ticket for which conversations has to be fetched
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  conversations:
                    type: array
                    items:
                      $ref: '#/components/schemas/conversation'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/conversations/{conversation_id}':
    put:
      operationId: update-conversation
      tags:
        - Tickets
      summary: Update a conversation on a ticket
      description: Edit the conversation on a Freshservice Ticket
      parameters:
        - name: conversation_id
          in: path
          description: ID of the reply or note that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: details of the conversation to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/conversation'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  conversation:
                    $ref: '#/components/schemas/conversation'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    delete:
      operationId: delete-conversation
      tags:
        - Tickets
      summary: Delete a conversation on a ticket
      description: Remove a conversation on a Freshservice Ticket
      parameters:
        - name: conversation_id
          in: path
          description: ID of the reply or note that needs to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/conversations/{conversation_id}/attachments/{id}':
    delete:
      operationId: delete-conversation-attachment
      tags:
        - Tickets
      summary: Delete a attachment from a conversation
      description: This API helps you delete an attachment from a conversation.
      parameters:
        - name: conversation_id
          in: path
          description: ID of the reply or note that needs to be deleted
          required: true
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          description: ID of the attachment that needs to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/tickets/{ticket_id}/tasks':
    get:
      operationId: list-ticket-tasks
      tags:
        - Tickets
      summary: View all tasks on ticket
      description: Retrieve the tasks on a ticket request with the given ID from Freshservice
      parameters:
        - name: ticket_id
          in: path
          description: ID of ticket request for which tasks are to be retrieved
          required: true
          schema:
            type: integer
            format: int64
        - name: per_page
          in: query
          description: The number of tasks to retrieve in each page of a paginated list.
          required: false
          schema:
            type: integer
            default: 30
        - name: page
          in: query
          description: The page number to retrieve.
          required: false
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: '#/components/schemas/task'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    post:
      operationId: create-ticket-task
      tags:
        - Tickets
      summary: Create Task on a ticket
      description: Create a new task on a ticket request in freshservice
      parameters:
        - name: ticket_id
          in: path
          description: ID of ticket request for which tasks are to be retrieved
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: details of task to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: '#/components/schemas/task'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/tickets/{ticket_id}/tasks/{task_id}':
    get:
      operationId: get-ticket-task
      tags:
        - Tickets
      summary: View task on a ticket
      description: Retrieve a task on a ticket request with the given ID from Freshservice
      parameters:
        - name: ticket_id
          in: path
          description: ID of ticket request
          required: true
          schema:
            type: integer
            format: int64
        - name: task_id
          in: path
          description: ID of the task
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: '#/components/schemas/task'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    put:
      operationId: update-ticket-task
      tags:
        - Tickets
      summary: Update a task on a ticket
      description: Update an existing task on an existing ticket request in Freshservice
      parameters:
        - name: ticket_id
          in: path
          description: ID of ticket request
          required: true
          schema:
            type: integer
            format: int64
        - name: task_id
          in: path
          description: ID of the task
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: task details that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: '#/components/schemas/task'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    delete:
      operationId: delete-ticket-task
      tags:
        - Tickets
      summary: Delete task on a ticket
      description: Delete the task on a ticket request with the given ID from Freshservice
      parameters:
        - name: ticket_id
          in: path
          description: ID of ticket
          required: true
          schema:
            type: integer
            format: int64
        - name: task_id
          in: path
          description: ID of task
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/tickets/{ticket_id}/time_entries':
    get:
      operationId: list-ticket-time-entries
      tags:
        - Tickets
      summary: View all time entries on ticket
      description: Retrieve the time entries on a ticket request with the given ID from Freshservice
      parameters:
        - name: ticket_id
          in: path
          description: ID of ticket request for which time entries are to be retrieved
          required: true
          schema:
            type: integer
            format: int64
        - name: per_page
          in: query
          description: The number of time entries to retrieve in each page of a paginated list.
          required: false
          schema:
            type: integer
            default: 30
        - name: page
          in: query
          description: The page number to retrieve.
          required: false
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  time_entries:
                    type: array
                    items:
                      $ref: '#/components/schemas/time_entry'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    post:
      operationId: create-ticket-time-entry
      tags:
        - Tickets
      summary: Create time entry on a ticket
      description: Create a new time entry on a ticket request in freshservice
      parameters:
        - name: ticket_id
          in: path
          description: ID of ticket request for which time entries are to be retrieved
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: details of time entry to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/time_entry'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  time_entry:
                    $ref: '#/components/schemas/time_entry'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/tickets/{ticket_id}/time_entries/{time_entry_id}':
    get:
      operationId: get-ticket-time-entry
      tags:
        - Tickets
      summary: View time entry on a ticket
      description: Retrieve a time entry on a ticket request with the given ID from Freshservice
      parameters:
        - name: ticket_id
          in: path
          description: ID of ticket request
          required: true
          schema:
            type: integer
            format: int64
        - name: time_entry_id
          in: path
          description: ID of the time entry
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  time_entry:
                    $ref: '#/components/schemas/time_entry'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    put:
      operationId: update-ticket-time-entry
      tags:
        - Tickets
      summary: Update a time entry on a ticket
      description: Update an existing time entry on an existing ticket request in Freshservice
      parameters:
        - name: ticket_id
          in: path
          description: ID of ticket request
          required: true
          schema:
            type: integer
            format: int64
        - name: time_entry_id
          in: path
          description: ID of the time entry
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: time entry details that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/time_entry'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  time_entry:
                    $ref: '#/components/schemas/time_entry'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    delete:
      operationId: delete-ticket-time-entry
      tags:
        - Tickets
      summary: Delete a time entry on a ticket
      description: Delete the time entry on a Freshservice Ticket
      parameters:
        - name: ticket_id
          in: path
          description: ID of ticket
          required: true
          schema:
            type: integer
            format: int64
        - name: time_entry_id
          in: path
          description: ID of the time entry
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  /api/v2/ticket_fields/sources:
    post:
      operationId: create-ticket-field-source
      tags:
        - Tickets
      summary: Create source
      description: Create a custom ticket source in Freshservice
      requestBody:
        required: true
        description: Custom ticket source that needs to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ticket_source'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  source:
                    $ref: '#/components/schemas/ticket_source'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/service_catalog/items/{display_id}/place_request':
    post:
      operationId: place-service-request
      description: This API helps you create a service request.
      tags:
        - Tickets
      summary: Create a service request
      parameters:
        - name: display_id
          in: path
          description: display ID of service catalog item
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: Place a Service Request for a Service Catalog Item
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/place_request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      service_request:
                        type: array
                        items:
                          $ref: '#/components/schemas/place_request_response'
                type: object
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/tickets/{ticket_id}/requested_items':
    get:
      operationId: view-requested-items-of-service-request
      description: This api helps you to view requested items attached to a service request
      tags:
        - Tickets
      summary: View Requested Items of a Service Request
      parameters:
        - name: ticket_id
          in: path
          description: ticket id of service request
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  requested_items:
                    type: array
                    items:
                      $ref: '#/components/schemas/requested_item'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/tickets/{ticket_id}/requested_items/{requested_item_id}':
    put:
      operationId: update-requested-items-of-service-request
      description: This api helps you to update the requested items attached to a service request
      tags:
        - Tickets
      summary: Update Requested Items of a Service Request
      parameters:
        - name: ticket_id
          in: path
          description: ticket id of service request
          required: true
          schema:
            type: integer
            format: int64
        - name: requested_item_id
          in: path
          description: requested item id of service request
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: Place a Service Request for a Service Catalog Item
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requested_item'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  requested_items:
                    type: array
                    items:
                      $ref: '#/components/schemas/requested_item'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v2/changes:
    get:
      operationId: list-changes
      tags:
        - Changes
      summary: List All Changes
      description: Retrieve a list of all Changes in Freshservice
      parameters:
        - name: filter_name
          in: query
          description: Retrieve the changes by the filter name
          required: false
          schema:
            type: string
            enum:
              - my_open
              - unassigned
              - closed
              - release_requested
              - deleted
              - all
        - name: requester_id
          in: query
          description: Retrieve the changes by the requester id
          required: false
          schema:
            type: string
        - name: email
          in: query
          description: Retrieve the changes by the requester email
          required: false
          schema:
            type: string
        - name: updated_since
          in: query
          description: Retrieve the changes by when it was last updated
          required: false
          schema:
            type: string
            format: date-time
        - name: per_page
          in: query
          description: The number of changes to retrieve in each page of a paginated list.
          required: false
          schema:
            type: integer
            default: 30
        - name: page
          in: query
          description: The page number to retrieve.
          required: false
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  changes:
                    type: array
                    items:
                      $ref: '#/components/schemas/change'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    post:
      operationId: create-change
      tags:
        - Changes
      summary: Create Change
      description: Create a new Change request in Freshservice
      requestBody:
        required: true
        description: Subject of the change request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/change'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  change:
                    $ref: '#/components/schemas/change'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  /api/v2/changes/filter-via-devops-association:
    post:
      operationId: list-changes-via-devops-associations
      tags:
        - Changes
        - Devops Platform
      summary: List All Changes by filtering on devops external entities id
      description: Retrieve a list of all Changes in Freshservice
      requestBody:
        required: true
        description: Subject of the change request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
      parameters:
        - name: per_page
          in: query
          description: The number of changes to retrieve in each page of a paginated list.
          required: false
          schema:
            type: integer
            default: 30
        - name: page
          in: query
          description: The page number to retrieve.
          required: false
          schema:
            type: integer
            default: 1
        - name: workspace_id
          in: query
          description: The workspace id from where changes belongs to.
          required: false
          schema:
            type: integer
            default: 2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  changes:
                    type: array
                    items:
                      $ref: '#/components/schemas/change'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/changes/{change_id}':
    get:
      operationId: get-change
      tags:
        - Changes
      summary: View Change
      description: Retrieve the Change request with the given ID from Freshservice
      parameters:
        - name: change_id
          in: path
          description: ID of change request to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  change:
                    $ref: '#/components/schemas/change'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    put:
      operationId: update-change
      tags:
        - Changes
      summary: Update Change request
      description: Update an existing Change request in Freshservice
      parameters:
        - name: change_id
          in: path
          description: ID of change request to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: change details that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/change'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  change:
                    $ref: '#/components/schemas/change'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    delete:
      operationId: delete-change
      tags:
        - Changes
      summary: Delete Change request
      description: Delete the Change request with the given ID from Freshservice
      parameters:
        - name: change_id
          in: path
          description: ID of change to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/changes/{change_id}/notes':
    get:
      operationId: list-change-notes
      tags:
        - Changes
      summary: View notes on change
      description: Retrieve the notes on a Change request with the given ID from Freshservice
      parameters:
        - name: change_id
          in: path
          description: ID of change request for which notes are to be retrieved
          required: true
          schema:
            type: integer
            format: int64
        - name: per_page
          in: query
          description: The number of notes to retrieve in each page of a paginated list.
          required: false
          schema:
            type: integer
            default: 30
        - name: page
          in: query
          description: The page number to retrieve.
          required: false
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  notes:
                    type: array
                    items:
                      $ref: '#/components/schemas/note'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    post:
      operationId: create-change-note
      tags:
        - Changes
      summary: Create Note on a change
      description: Create a new note on a change request in freshservice
      parameters:
        - name: change_id
          in: path
          description: ID of change request for which notes are to be retrieved
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: Note content of change
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/note'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  note:
                    $ref: '#/components/schemas/note'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/changes/{change_id}/notes/{note_id}':
    get:
      operationId: get-change-note
      tags:
        - Changes
      summary: View note on a change
      description: Retrieve a note on a Change request with the given ID from Freshservice
      parameters:
        - name: change_id
          in: path
          description: ID of change request
          required: true
          schema:
            type: integer
            format: int64
        - name: note_id
          in: path
          description: ID of the note
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  note:
                    $ref: '#/components/schemas/note'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    put:
      operationId: update-change-note
      tags:
        - Changes
      summary: Update a note on a change
      description: Update an existing note on an existing Change request in Freshservice
      parameters:
        - name: change_id
          in: path
          description: ID of change request
          required: true
          schema:
            type: integer
            format: int64
        - name: note_id
          in: path
          description: ID of the note
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: note details that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/note'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  note:
                    $ref: '#/components/schemas/note'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    delete:
      operationId: delete-change-note
      tags:
        - Changes
      summary: Delete note on a change
      description: Delete the note on a Change request with the given ID from Freshservice
      parameters:
        - name: change_id
          in: path
          description: ID of change
          required: true
          schema:
            type: integer
            format: int64
        - name: note_id
          in: path
          description: ID of note
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/changes/{change_id}/tasks':
    get:
      operationId: list-change-tasks
      tags:
        - Changes
      summary: View tasks on change
      description: Retrieve the tasks on a Change request with the given ID from Freshservice
      parameters:
        - name: change_id
          in: path
          description: ID of change request for which tasks are to be retrieved
          required: true
          schema:
            type: integer
            format: int64
        - name: per_page
          in: query
          description: The number of tasks to retrieve in each page of a paginated list.
          required: false
          schema:
            type: integer
            default: 10
        - name: page
          in: query
          description: The page number to retrieve.
          required: false
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: '#/components/schemas/task'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    post:
      operationId: create-change-task
      tags:
        - Changes
      summary: Create Task on a change
      description: Create a new task on a change request in freshservice
      parameters:
        - name: change_id
          in: path
          description: ID of change request for which tasks are to be retrieved
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: details of task to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: '#/components/schemas/task'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/changes/{change_id}/tasks/{task_id}':
    get:
      operationId: get-change-task
      tags:
        - Changes
      summary: View task on a change
      description: Retrieve a task on a Change request with the given ID from Freshservice
      parameters:
        - name: change_id
          in: path
          description: ID of change request
          required: true
          schema:
            type: integer
            format: int64
        - name: task_id
          in: path
          description: ID of the task
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: '#/components/schemas/task'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    put:
      operationId: update-change-task
      tags:
        - Changes
      summary: Update a task on a change
      description: Update an existing task on an existing Change request in Freshservice
      parameters:
        - name: change_id
          in: path
          description: ID of change request
          required: true
          schema:
            type: integer
            format: int64
        - name: task_id
          in: path
          description: ID of the task
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: task details that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: '#/components/schemas/task'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    delete:
      operationId: delete-change-task
      tags:
        - Changes
      summary: Delete task on a change
      description: Delete the task on a Change request with the given ID from Freshservice
      parameters:
        - name: change_id
          in: path
          description: ID of change
          required: true
          schema:
            type: integer
            format: int64
        - name: task_id
          in: path
          description: ID of task
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/changes/{change_id}/time_entries':
    get:
      operationId: list-change-time-entries
      tags:
        - Changes
      summary: View time entries on change
      description: Retrieve the time entries on a Change request with the given ID from Freshservice
      parameters:
        - name: change_id
          in: path
          description: ID of change request for which time entries are to be retrieved
          required: true
          schema:
            type: integer
            format: int64
        - name: per_page
          in: query
          description: The number of time entries to retrieve in each page of a paginated list.
          required: false
          schema:
            type: integer
            default: 10
        - name: page
          in: query
          description: The page number to retrieve.
          required: false
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  time_entries:
                    type: array
                    items:
                      $ref: '#/components/schemas/time_entry'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    post:
      operationId: create-change-time-entry
      tags:
        - Changes
      summary: Create time entry on a change
      description: Create a new time entry on a change request in freshservice
      parameters:
        - name: change_id
          in: path
          description: ID of change request for which time entries are to be retrieved
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: details of time entry to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/time_entry'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  time_entry:
                    $ref: '#/components/schemas/time_entry'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/changes/{change_id}/time_entries/{time_entry_id}':
    get:
      operationId: get-change-time-entry
      tags:
        - Changes
      summary: View time entry on a change
      description: Retrieve a time entry on a Change request with the given ID from Freshservice
      parameters:
        - name: change_id
          in: path
          description: ID of change request
          required: true
          schema:
            type: integer
            format: int64
        - name: time_entry_id
          in: path
          description: ID of the time entry
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  time_entry:
                    $ref: '#/components/schemas/time_entry'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    put:
      operationId: update-change-time-entry
      tags:
        - Changes
      summary: Update a time entry on a change
      description: Update an existing time entry on an existing Change request in Freshservice
      parameters:
        - name: change_id
          in: path
          description: ID of change request
          required: true
          schema:
            type: integer
            format: int64
        - name: time_entry_id
          in: path
          description: ID of the time entry
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: time entry details that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/time_entry'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  time_entry:
                    $ref: '#/components/schemas/time_entry'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    delete:
      operationId: delete-change-time-entry
      tags:
        - Changes
      summary: Delete a time entry on a change
      description: Delete the time entry on a Change request with the given ID from Freshservice
      parameters:
        - name: change_id
          in: path
          description: ID of change
          required: true
          schema:
            type: integer
            format: int64
        - name: time_entry_id
          in: path
          description: ID of the time entry
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  /api/v2/projects:
    post:
      operationId: create-project
      tags:
        - Projects
      summary: Create Project
      description: Create a new Project in Freshservice
      requestBody:
        required: true
        description: project that needs to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/project'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  project:
                    $ref: '#/components/schemas/project'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    get:
      operationId: list-projects
      tags:
        - Projects
      summary: List All Projects
      description: Retrieve a list of all Projects in Freshservice
      parameters:
        - in: query
          name: per_page
          description: The number of entries to retrieve in each page of a paginated list.
          schema:
            type: integer
            default: 30
        - in: query
          name: page
          description: The page number to retrieve.
          schema:
            type: integer
            default: 1
        - in: query
          name: status
          description: Filter to be applied in retrieving projects
          schema:
            type: string
            default: all
            enum:
              - all
              - open
              - in_progress
              - completed
        - in: query
          name: archived
          description: Filter archived or active projects
          schema:
            type: boolean
            default: false
            enum:
              - false
              - true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  projects:
                    type: array
                    items:
                      $ref: '#/components/schemas/project'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/projects/{project_id}':
    get:
      operationId: get-project
      tags:
        - Projects
      summary: View Project
      description: Retrieve the Project with the given ID from Freshservice
      parameters:
        - name: project_id
          in: path
          description: ID of project to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  project:
                    $ref: '#/components/schemas/project'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    put:
      operationId: update-project
      tags:
        - Projects
      summary: Update Project
      description: Update an existing Project in Freshservice
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: project that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/project'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  project:
                    $ref: '#/components/schemas/project'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    delete:
      operationId: delete-project
      tags:
        - Projects
      summary: Delete Project
      description: Delete an existing Project in Freshservice
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/projects/{id}/archive':
    post:
      operationId: archive-project
      tags:
        - Projects
      summary: Archive Project
      description: Archive an existing Project in Freshservice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  project:
                    $ref: '#/components/schemas/project'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/projects/{id}/restore':
    post:
      operationId: restore-project
      tags:
        - Projects
      summary: Restore Project
      description: Restore an archived Project in Freshservice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  project:
                    $ref: '#/components/schemas/project'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/projects/{id}/tasks':
    post:
      operationId: create-project-task
      tags:
        - Projects
      summary: Create Project Task
      description: Create a new Project Task in Freshservice
      requestBody:
        required: true
        description: project task that needs to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/project_task'
      parameters:
        - name: id
          in: path
          description: ID of project to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: '#/components/schemas/project_task'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    get:
      operationId: list-project-tasks
      tags:
        - Projects
      summary: List All Project Tasks
      description: Retrieve a list of all Project Tasks in Freshservice
      parameters:
        - in: query
          name: per_page
          description: The number of entries to retrieve in each page of a paginated list.
          schema:
            type: integer
            default: 30
        - name: id
          in: path
          description: ID of project to retrieve
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: page
          description: The page number to retrieve.
          schema:
            type: integer
            default: 1
        - in: query
          name: filter
          description: Task filters
          schema:
            type: string
            default: all
            enum:
              - all
              - open
              - in_progress
              - completed
              - overdue
              - unassigned
        - in: query
          name: parent_id
          description: Task filters
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: '#/components/schemas/project_task'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/projects/{project_id}/tasks/{id}':
    get:
      operationId: get-project-task
      tags:
        - Projects
      summary: View Project Task Details
      description: View Project Task Details
      parameters:
        - name: id
          in: path
          description: Task id
          required: true
          schema:
            type: integer
            format: int64
        - name: project_id
          in: path
          description: Project id of the task
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: '#/components/schemas/project_task'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    put:
      operationId: update-project-task
      tags:
        - Projects
      summary: Update a  Project Task
      description: Update an existing Project Task in Freshservice
      parameters:
        - name: project_id
          in: path
          description: ID of project to retrieve
          required: true
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          description: ID of the task to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: project task that needs to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/project_task'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: '#/components/schemas/project_task'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    delete:
      operationId: delete-project-task
      tags:
        - Projects
      summary: Delete a  Project Task
      description: Delete an existing Project Task in Freshservice
      parameters:
        - name: project_id
          in: path
          description: ID of project to retrieve
          required: true
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          description: ID of the task to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  /api/v2/change_form_fields:
    get:
      operationId: list-change-form-fields
      tags:
        - Changes
      summary: View Change Fields
      description: Retrieve all the Fields that constitute the Change Object
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  change_fields:
                    type: array
                    items:
                      $ref: '#/components/schemas/field'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  /api/v2/release_form_fields:
    get:
      operationId: list-release-form-fields
      tags:
        - Releases
      summary: View Release Fields
      description: Retrieve all the Fields that constitute the Release Object
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  release_fields:
                    type: array
                    items:
                      $ref: '#/components/schemas/field'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  /api/v2/announcements:
    get:
      operationId: list-announcement
      tags:
        - Announcements
      summary: List All Announcements
      description: Retrieve a list of all Announcements in Freshservice
      parameters:
        - $ref: '#/components/parameters/PaginationPageParam'
        - $ref: '#/components/parameters/PaginationPerPageParam'
        - name: state
          in: query
          description: '(archived, active, scheduled, unread)'
          schema:
            type: string
            enum:
              - active
              - scheduled
              - archived
              - unread
              - all
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - announcements
                properties:
                  announcements:
                    type: array
                    items:
                      required:
                        - id
                        - created_at
                        - updated_at
                        - title
                        - created_by
                        - visible_from
                        - visible_till
                        - body
                        - body_html
                        - visibility
                        - state
                        - groups
                        - departments
                        - is_read
                        - send_email
                        - additional_emails
                      allOf:
                        - $ref: '#/components/schemas/Announcement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      operationId: create-announcement
      tags:
        - Announcements
      summary: Create Announcement
      description: Create a new Announcement request in Freshservice
      requestBody:
        required: true
        description: Details of the Announcement
        content:
          application/json:
            schema:
              required:
                - title
                - visible_from
                - body_html
                - visibility
              allOf:
                - $ref: '#/components/schemas/Announcement'
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - announcement
                properties:
                  announcement:
                    required:
                      - id
                      - created_at
                      - updated_at
                      - title
                      - created_by
                      - visible_from
                      - visible_till
                      - body
                      - body_html
                      - visibility
                      - state
                      - groups
                      - departments
                      - is_read
                      - send_email
                      - additional_emails
                    allOf:
                      - $ref: '#/components/schemas/Announcement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/announcements/{announcement_id}':
    parameters:
      - name: announcement_id
        in: path
        description: ID of Announcement to retrieve
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
    get:
      operationId: get-announcement
      tags:
        - Announcements
      summary: View Announcement
      description: Retrieve the Announcement with the given ID from Freshservice
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - announcement
                properties:
                  announcement:
                    required:
                      - id
                      - created_at
                      - updated_at
                      - title
                      - created_by
                      - visible_from
                      - visible_till
                      - body
                      - body_html
                      - visibility
                      - state
                      - groups
                      - departments
                      - is_read
                      - send_email
                      - additional_emails
                    allOf:
                      - $ref: '#/components/schemas/Announcement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      operationId: update-announcement
      tags:
        - Announcements
      summary: Update Announcement
      description: Update an existing Announcement in Freshservice
      requestBody:
        description: Announcement details that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Announcement'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - announcement
                properties:
                  announcement:
                    required:
                      - id
                      - created_at
                      - updated_at
                      - title
                      - created_by
                      - visible_from
                      - visible_till
                      - body
                      - body_html
                      - visibility
                      - state
                      - groups
                      - departments
                      - is_read
                      - send_email
                      - additional_emails
                    allOf:
                      - $ref: '#/components/schemas/Announcement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      operationId: delete-announcement
      tags:
        - Announcements
      summary: Delete Announcement
      description: Delete the Announcement with the given ID from Freshservice
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v2/problems:
    get:
      operationId: list-problems
      tags:
        - Problems
      summary: List All Problems
      description: Retrieve a list of all Problems in Freshservice
      parameters:
        - name: updated_since
          in: query
          description: Retrieve the problems by when it was last updated
          required: false
          schema:
            type: string
            format: date-time
        - name: per_page
          in: query
          description: The number of problems to retrieve in each page of a paginated list.
          required: false
          schema:
            type: integer
            default: 30
        - name: page
          in: query
          description: The page number to retrieve.
          required: false
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  problems:
                    type: array
                    items:
                      $ref: '#/components/schemas/problem'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    post:
      operationId: create-problem
      tags:
        - Problems
      summary: Create Problem
      description: Create a new Problem in Freshservice
      requestBody:
        required: true
        description: Details of the Problem
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/problem'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  problem:
                    $ref: '#/components/schemas/problem'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/problems/{problem_id}':
    get:
      operationId: get-problem
      tags:
        - Problems
      summary: View Problem
      description: Retrieve the Problem with the given ID from Freshservice
      parameters:
        - name: problem_id
          in: path
          description: ID of Problem to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  problem:
                    $ref: '#/components/schemas/problem'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    put:
      operationId: update-problem
      tags:
        - Problems
      summary: Update Problem
      description: Update an existing Problem in Freshservice
      parameters:
        - name: problem_id
          in: path
          description: ID of problem to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: Problem details that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/problem'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  problem:
                    $ref: '#/components/schemas/problem'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    delete:
      operationId: delete-problem
      tags:
        - Problems
      summary: Delete Problem
      description: Delete the Problem with the given ID from Freshservice
      parameters:
        - name: problem_id
          in: path
          description: ID of problem to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/problems/{problem_id}/move_workspace':
    put:
      operationId: move-problem
      tags:
        - Problems
      summary: Move Problem
      description: 'This API moves a problem to a different workspace, while also allowing the assigned group and agent to be modified.'
      parameters:
        - name: problem_id
          in: path
          description: ID of problem to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: Problem details that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveProblem'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  problem:
                    $ref: '#/components/schemas/problem'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/problems/{problem_id}/restore':
    post:
      operationId: restore-problem
      tags:
        - Problems
      summary: Restore Problem
      description: 'The API mentioned previously. If you deleted some problems and regret doing so now, this API will help you restore them.'
      parameters:
        - name: problem_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  project:
                    $ref: '#/components/schemas/problem'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  /api/v2/problem_form_fields:
    get:
      operationId: list-problem-form-fields
      tags:
        - Problems
      summary: View all problem fields
      description: Retrieve all the Fields that constitute the Problem Object
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  notes:
                    type: array
                    items:
                      $ref: '#/components/schemas/problem_form_field'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/problems/{problem_id}/notes':
    get:
      operationId: list-problem-notes
      tags:
        - Problems
      summary: View notes on problem
      description: Retrieve the notes on a Problem with the given ID from Freshservice
      parameters:
        - name: problem_id
          in: path
          description: ID of problem for which notes are to be retrieved
          required: true
          schema:
            type: integer
            format: int64
        - name: per_page
          in: query
          description: The number of notes to retrieve in each page of a paginated list.
          required: false
          schema:
            type: integer
            default: 30
        - name: page
          in: query
          description: The page number to retrieve.
          required: false
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  notes:
                    type: array
                    items:
                      $ref: '#/components/schemas/note'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    post:
      operationId: create-problem-note
      tags:
        - Problems
      summary: Create Note on a problem
      description: Create a new note on a problem in freshservice
      parameters:
        - name: problem_id
          in: path
          description: ID of problem for which notes are to be retrieved
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: Note content of problem
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/note'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  note:
                    $ref: '#/components/schemas/note'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/problems/{problem_id}/notes/{note_id}':
    get:
      operationId: get-problem-note
      tags:
        - Problems
      summary: View note on a problem
      description: Retrieve a note on a Problem with the given ID from Freshservice
      parameters:
        - name: problem_id
          in: path
          description: ID of problem
          required: true
          schema:
            type: integer
            format: int64
        - name: note_id
          in: path
          description: ID of the note
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  note:
                    $ref: '#/components/schemas/note'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    put:
      operationId: update-problem-note
      tags:
        - Problems
      summary: Update a note on a problem
      description: Update an existing note on an existing Problem in Freshservice
      parameters:
        - name: problem_id
          in: path
          description: ID of problem
          required: true
          schema:
            type: integer
            format: int64
        - name: note_id
          in: path
          description: ID of the note
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: note details that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/note'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  note:
                    $ref: '#/components/schemas/note'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    delete:
      operationId: delete-problem-note
      tags:
        - Problems
      summary: Delete note on a problem
      description: Delete the note on a Problem with the given ID from Freshservice
      parameters:
        - name: problem_id
          in: path
          description: ID of problem
          required: true
          schema:
            type: integer
            format: int64
        - name: note_id
          in: path
          description: ID of note
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/problems/{problem_id}/tasks':
    get:
      operationId: list-problem-tasks
      tags:
        - Problems
      summary: View tasks on problem
      description: Retrieve the tasks on a Problem with the given ID from Freshservice
      parameters:
        - name: problem_id
          in: path
          description: ID of problem for which tasks are to be retrieved
          required: true
          schema:
            type: integer
            format: int64
        - name: per_page
          in: query
          description: The number of tasks to retrieve in each page of a paginated list.
          required: false
          schema:
            type: integer
            default: 10
        - name: page
          in: query
          description: The page number to retrieve.
          required: false
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: '#/components/schemas/task'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    post:
      operationId: create-problem-task
      tags:
        - Problems
      summary: Create Task on a problem
      description: Create a new task on a problem in freshservice
      parameters:
        - name: problem_id
          in: path
          description: ID of problem for which tasks are to be retrieved
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: details of task to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: '#/components/schemas/task'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/problems/{problem_id}/tasks/{task_id}':
    get:
      operationId: get-problem-task
      tags:
        - Problems
      summary: View task on a problem
      description: Retrieve a task on a Problem with the given ID from Freshservice
      parameters:
        - name: problem_id
          in: path
          description: ID of problem
          required: true
          schema:
            type: integer
            format: int64
        - name: task_id
          in: path
          description: ID of the task
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: '#/components/schemas/task'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    put:
      operationId: update-problem-task
      tags:
        - Problems
      summary: Update a task on a problem
      description: Update an existing task on an existing Problem in Freshservice
      parameters:
        - name: problem_id
          in: path
          description: ID of problem
          required: true
          schema:
            type: integer
            format: int64
        - name: task_id
          in: path
          description: ID of the task
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: task details that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: '#/components/schemas/task'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    delete:
      operationId: delete-problem-task
      tags:
        - Problems
      summary: Delete task on a problem
      description: Delete the task on a Problem with the given ID from Freshservice
      parameters:
        - name: problem_id
          in: path
          description: ID of problem
          required: true
          schema:
            type: integer
            format: int64
        - name: task_id
          in: path
          description: ID of task
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/problems/{problem_id}/time_entries':
    get:
      operationId: list-problem-time-entries
      tags:
        - Problems
      summary: View time entries on problem
      description: Retrieve the time entries on a Problem with the given ID from Freshservice
      parameters:
        - name: problem_id
          in: path
          description: ID of problem for which time entries are to be retrieved
          required: true
          schema:
            type: integer
            format: int64
        - name: per_page
          in: query
          description: The number of time entries to retrieve in each page of a paginated list.
          required: false
          schema:
            type: integer
            default: 10
        - name: page
          in: query
          description: The page number to retrieve.
          required: false
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  time_entries:
                    type: array
                    items:
                      $ref: '#/components/schemas/time_entry'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    post:
      operationId: create-problem-time-entry
      tags:
        - Problems
      summary: Create time entry on a problem
      description: Create a new time entry on a problem in freshservice
      parameters:
        - name: problem_id
          in: path
          description: ID of problem for which time entries are to be retrieved
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: details of time entry to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/time_entry'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  time_entry:
                    $ref: '#/components/schemas/time_entry'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/problems/{problem_id}/time_entries/{time_entry_id}':
    get:
      operationId: get-problem-time-entry
      tags:
        - Problems
      summary: View time entry on a problem
      description: Retrieve a time entry on a Problem with the given ID from Freshservice
      parameters:
        - name: problem_id
          in: path
          description: ID of problem
          required: true
          schema:
            type: integer
            format: int64
        - name: time_entry_id
          in: path
          description: ID of the time entry
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  time_entry:
                    $ref: '#/components/schemas/time_entry'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    put:
      operationId: update-problem-time-entry
      tags:
        - Problems
      summary: Update a time entry on a problem
      description: Update an existing time entry on an existing Problem in Freshservice
      parameters:
        - name: problem_id
          in: path
          description: ID of problem
          required: true
          schema:
            type: integer
            format: int64
        - name: time_entry_id
          in: path
          description: ID of the time entry
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: time entry details that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/time_entry'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  time_entry:
                    $ref: '#/components/schemas/time_entry'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    delete:
      operationId: delete-problem-time-entry
      tags:
        - Problems
      summary: Delete a time entry on a problem
      description: Delete the time entry on a Problem with the given ID from Freshservice
      parameters:
        - name: problem_id
          in: path
          description: ID of problem
          required: true
          schema:
            type: integer
            format: int64
        - name: time_entry_id
          in: path
          description: ID of the time entry
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  /api/v2/onboarding_requests/form:
    get:
      operationId: get-onboarding-request-form
      tags:
        - Employee Onboarding
      summary: Display onboarding form details
      description: Retrieve a list of all fields in initiator form.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding_form'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  /api/v2/onboarding_requests:
    post:
      operationId: create-onboarding-request
      tags:
        - Employee Onboarding
      summary: Create Onboarding Request
      description: Create a new Onboarding Request in Freshservice
      requestBody:
        description: onboarding request that needs to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding_request_fields'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  onboarding_request:
                    $ref: '#/components/schemas/onboarding_request'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    get:
      operationId: list-onboarding-requests
      tags:
        - Employee Onboarding
      summary: Get all Onboarding Requests
      description: Get all Onboarding Request for a particular user.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding_request_index'
        '400':
          description: Bad data
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/onboarding_requests/{request_id}':
    get:
      operationId: get-onboarding-request
      tags:
        - Employee Onboarding
      summary: Get a specific Onboarding Request
      description: Get a specific Onboarding Request from freshservice
      parameters:
        - in: path
          name: request_id
          description: Display ID of the Onboarding Request
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  onboarding_request:
                    $ref: '#/components/schemas/onboarding_request'
        '400':
          description: Bad data
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  /api/v2/onboarding_requests/id/tickets:
    get:
      operationId: list-onboarding-request-tickets
      tags:
        - Employee Onboarding
      summary: Get the details of the FreshService Tickets associated with a specific Onboarding Request
      description: Get the details of the FreshService Tickets associated with a specific Onboarding Request
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding_ticket'
        '400':
          description: Bad data
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  /api/v2/canned_responses:
    get:
      operationId: list-canned-responses
      tags:
        - Canned Responses
      summary: List All Canned Responses
      description: Retrieve a list of all Canned Responses in Freshservice
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  canned_responses:
                    type: array
                    items:
                      $ref: '#/components/schemas/canned_response'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    post:
      operationId: create-canned-response
      tags:
        - Canned Responses
      summary: Create Canned Response
      description: Create a new Canned Response request in Freshservice
      requestBody:
        required: true
        description: Details of the Canned Response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/canned_response'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  canned response:
                    $ref: '#/components/schemas/canned_response'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/canned_response/{canned_response_id}':
    get:
      operationId: get-canned-response
      tags:
        - Canned Responses
      summary: View Canned Response
      description: Retrieve the Canned Response with the given ID from Freshservice
      parameters:
        - name: canned_response_id
          in: path
          description: ID of Canned Response to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  canned_response:
                    $ref: '#/components/schemas/canned_response'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    put:
      operationId: update-canned-response
      tags:
        - Canned Responses
      summary: Update Canned Response
      description: Update an existing Canned Response in Freshservice
      parameters:
        - name: canned_response_id
          in: path
          description: ID of canned response to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Canned Response details that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/canned_response'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  canned response:
                    $ref: '#/components/schemas/canned_response'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    delete:
      operationId: delete-canned-response
      tags:
        - Canned Responses
      summary: Delete Canned Response
      description: Delete the Canned Response with the given ID from Freshservice
      parameters:
        - name: canned_response_id
          in: path
          description: ID of canned response to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  /api/v2/canned_response_folders:
    get:
      operationId: list-canned-response-folders
      tags:
        - Canned Response Folders
      summary: List All Canned Response Folders
      description: Retrieve a list of all Canned Responses in Freshservice
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  canned_response_folders:
                    type: array
                    items:
                      $ref: '#/components/schemas/canned_response_folder'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    post:
      operationId: create-canned-response-folder
      tags:
        - Canned Response Folders
      summary: Create Canned Response Folder
      description: Create a new Canned Response Folder request in Freshservice
      requestBody:
        description: Details of the Canned Response Folder
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/canned_response_folder'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  canned_response_folders:
                    $ref: '#/components/schemas/canned_response_folder'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/canned_response_folder/{canned_response_folder_id}':
    get:
      operationId: get-canned-response-folder
      tags:
        - Canned Response Folders
      summary: View Canned Response Folder
      description: Retrieve the Canned Response Folder with the given ID from Freshservice
      parameters:
        - name: canned_response_folder_id
          in: path
          description: ID of Canned Response to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  canned response:
                    $ref: '#/components/schemas/canned_response'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    put:
      operationId: update-canned-response-folder
      tags:
        - Canned Response Folders
      summary: Update Canned Response Folder
      description: Update an existing Canned Response Folder in Freshservice
      parameters:
        - name: canned_response_folder_id
          in: path
          description: ID of canned response Folder to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Canned Response details that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/canned_response_folder'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  canned response:
                    $ref: '#/components/schemas/canned_response_folder'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    delete:
      operationId: delete-caned-response-folder
      tags:
        - Canned Response Folders
      summary: Delete Canned Response Folder
      description: Delete the Canned Response Folder with the given ID from Freshservice
      parameters:
        - name: canned_response_folder_id
          in: path
          description: ID of canned response folder to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/canned_response_folders/{canned_response_folder_id}/canned_responses':
    get:
      operationId: list-canned-response-folders-canned-responses
      tags:
        - Canned Response Folders
      summary: List All Canned Responses
      description: Retrieve a list of all Canned Responses in a Canned Response Folder in Freshservice
      parameters:
        - name: canned_response_folder_id
          in: path
          description: ID of canned response folder
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  canned_responses:
                    type: array
                    items:
                      $ref: '#/components/schemas/canned_response'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  /api/v2/releases:
    get:
      operationId: list-releases
      tags:
        - Releases
      summary: List All Releases
      description: Retrieve a list of all Releases in Freshservice
      parameters:
        - name: updated_since
          in: query
          description: Retrieve the releases by when it was last updated
          required: false
          schema:
            type: string
            format: date-time
        - name: per_page
          in: query
          description: The number of releases to retrieve in each page of a paginated list.
          required: false
          schema:
            type: integer
            default: 30
        - name: page
          in: query
          description: The page number to retrieve.
          required: false
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  releases:
                    type: array
                    items:
                      $ref: '#/components/schemas/release'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    post:
      operationId: create-release
      tags:
        - Releases
      summary: Create Release
      description: Create a new Release request in Freshservice
      requestBody:
        description: Details of the Release
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/release'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  release:
                    $ref: '#/components/schemas/release'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/releases/{release_id}':
    get:
      operationId: get-release
      tags:
        - Releases
      summary: View Release
      description: Retrieve the Release with the given ID from Freshservice
      parameters:
        - name: release_id
          in: path
          description: ID of Release to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  release:
                    $ref: '#/components/schemas/release'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    put:
      operationId: update-release
      tags:
        - Releases
      summary: Update Release
      description: Update an existing Release in Freshservice
      parameters:
        - name: release_id
          in: path
          description: ID of release to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Release details that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/release'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  release:
                    $ref: '#/components/schemas/release'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    delete:
      operationId: delete-release
      tags:
        - Releases
      summary: Delete Release
      description: Delete the Release with the given ID from Freshservice
      parameters:
        - name: release_id
          in: path
          description: ID of release to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/releases/{release_id}/notes':
    get:
      operationId: list-release-note
      tags:
        - Releases
      summary: View notes on release
      description: Retrieve the notes on a Release with the given ID from Freshservice
      parameters:
        - name: release_id
          in: path
          description: ID of release for which notes are to be retrieved
          required: true
          schema:
            type: integer
            format: int64
        - name: per_page
          in: query
          description: The number of notes to retrieve in each page of a paginated list.
          required: false
          schema:
            type: integer
            default: 30
        - name: page
          in: query
          description: The page number to retrieve.
          required: false
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  notes:
                    type: array
                    items:
                      $ref: '#/components/schemas/release_note'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    post:
      operationId: create-release-note
      tags:
        - Releases
      summary: Create Note on a release
      description: Create a new note on a release in freshservice
      parameters:
        - name: release_id
          in: path
          description: ID of release for which notes are to be retrieved
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Note content of release
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/release_note'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  note:
                    $ref: '#/components/schemas/release_note'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/releases/{release_id}/notes/{note_id}':
    get:
      operationId: get-release-note
      tags:
        - Releases
      summary: View note on a release
      description: Retrieve a note on a Release with the given ID from Freshservice
      parameters:
        - name: release_id
          in: path
          description: ID of release
          required: true
          schema:
            type: integer
            format: int64
        - name: note_id
          in: path
          description: ID of the note
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  note:
                    $ref: '#/components/schemas/release_note'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    put:
      operationId: update-release-note
      tags:
        - Releases
      summary: Update a note on a release
      description: Update an existing note on an existing Release in Freshservice
      parameters:
        - name: release_id
          in: path
          description: ID of release
          required: true
          schema:
            type: integer
            format: int64
        - name: note_id
          in: path
          description: ID of the note
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: note details that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/release_note'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  note:
                    $ref: '#/components/schemas/release_note'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    delete:
      operationId: delete-release-note
      tags:
        - Releases
      summary: Delete note on a release
      description: Delete the note on a Release with the given ID from Freshservice
      parameters:
        - name: release_id
          in: path
          description: ID of release
          required: true
          schema:
            type: integer
            format: int64
        - name: note_id
          in: path
          description: ID of note
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/releases/{release_id}/tasks':
    get:
      operationId: list-release-tasks
      tags:
        - Releases
      summary: View tasks on release
      description: Retrieve the tasks on a Release with the given ID from Freshservice
      parameters:
        - name: release_id
          in: path
          description: ID of release for which tasks are to be retrieved
          required: true
          schema:
            type: integer
            format: int64
        - name: per_page
          in: query
          description: The number of tasks to retrieve in each page of a paginated list.
          required: false
          schema:
            type: integer
            default: 10
        - name: page
          in: query
          description: The page number to retrieve.
          required: false
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: '#/components/schemas/task'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    post:
      operationId: create-release-task
      tags:
        - Releases
      summary: Create Task on a release
      description: Create a new task on a release in freshservice
      parameters:
        - name: release_id
          in: path
          description: ID of release for which tasks are to be retrieved
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: details of task to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: '#/components/schemas/task'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/releases/{release_id}/tasks/{task_id}':
    get:
      operationId: get-release-task
      tags:
        - Releases
      summary: View task on a release
      description: Retrieve a task on a Release with the given ID from Freshservice
      parameters:
        - name: release_id
          in: path
          description: ID of release
          required: true
          schema:
            type: integer
            format: int64
        - name: task_id
          in: path
          description: ID of the task
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: '#/components/schemas/task'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    put:
      operationId: update-release-task
      tags:
        - Releases
      summary: Update a task on a release
      description: Update an existing task on an existing Release in Freshservice
      parameters:
        - name: release_id
          in: path
          description: ID of release
          required: true
          schema:
            type: integer
            format: int64
        - name: task_id
          in: path
          description: ID of the task
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: task details that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: '#/components/schemas/task'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    delete:
      operationId: delete-release-task
      tags:
        - Releases
      summary: Delete task on a release
      description: Delete the task on a Release with the given ID from Freshservice
      parameters:
        - name: release_id
          in: path
          description: ID of release
          required: true
          schema:
            type: integer
            format: int64
        - name: task_id
          in: path
          description: ID of task
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/releases/{release_id}/time_entries':
    get:
      operationId: list-release-time-entries
      tags:
        - Releases
      summary: View time entries on release
      description: Retrieve the time entries on a Release with the given ID from Freshservice
      parameters:
        - name: release_id
          in: path
          description: ID of release for which time entries are to be retrieved
          required: true
          schema:
            type: integer
            format: int64
        - name: per_page
          in: query
          description: The number of time entries to retrieve in each page of a paginated list.
          required: false
          schema:
            type: integer
            default: 10
        - name: page
          in: query
          description: The page number to retrieve.
          required: false
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  time_entries:
                    type: array
                    items:
                      $ref: '#/components/schemas/time_entry'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    post:
      operationId: create-release-time-entry
      tags:
        - Releases
      summary: Create time entry on a release
      description: Create a new time entry on a release in freshservice
      parameters:
        - name: release_id
          in: path
          description: ID of release for which time entries are to be retrieved
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: details of time entry to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/time_entry'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  time_entry:
                    $ref: '#/components/schemas/time_entry'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/releases/{release_id}/time_entries/{time_entry_id}':
    get:
      operationId: get-release-time-entry
      tags:
        - Releases
      summary: View time entry on a release
      description: Retrieve a time entry on a Release with the given ID from Freshservice
      parameters:
        - name: release_id
          in: path
          description: ID of release
          required: true
          schema:
            type: integer
            format: int64
        - name: time_entry_id
          in: path
          description: ID of the time entry
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  time_entry:
                    $ref: '#/components/schemas/time_entry'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    put:
      operationId: update-release-time-entry
      tags:
        - Releases
      summary: Update a time entry on a release
      description: Update an existing time entry on an existing Release in Freshservice
      parameters:
        - name: release_id
          in: path
          description: ID of release
          required: true
          schema:
            type: integer
            format: int64
        - name: time_entry_id
          in: path
          description: ID of the time entry
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: time entry details that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/time_entry'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  time_entry:
                    $ref: '#/components/schemas/time_entry'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    delete:
      operationId: delete-release-time-entry
      tags:
        - Releases
      summary: Delete a time entry on a release
      description: Delete the time entry on a Release with the given ID from Freshservice
      parameters:
        - name: release_id
          in: path
          description: ID of release
          required: true
          schema:
            type: integer
            format: int64
        - name: time_entry_id
          in: path
          description: ID of the time entry
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  /api/v2/purchase_orders:
    post:
      operationId: create-purchase-order-post
      tags:
        - Purchase Orders
      summary: Create a new Purchase Order in Freshservice
      description: Create a new Purchase Order in Freshservice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/purchase_order'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  purchase_order:
                    $ref: '#/components/schemas/purchase_order'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      operationId: list-purchase-orders
      tags:
        - Purchase Orders
      summary: List All Purchase Orders
      description: Get a list of all Purchase Orders in Freshservice
      parameters:
        - in: query
          name: per_page
          description: The number of entries to retrieve in each page of a paginated list.
          schema:
            type: integer
            default: 10
        - in: query
          name: page
          description: The page number to retrieve.
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  purchase_orders:
                    $ref: '#/components/schemas/purchase_order_without_items'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          $ref: '#/components/responses/Forbidden'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/purchase_orders/{purchase_order_id}':
    get:
      operationId: get-purchase-order
      tags:
        - Purchase Orders
      summary: Retrieve an existing Purchase Order
      description: Retrieve an existing Purchase Order
      parameters:
        - name: purchase_order_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  purchase_order:
                    $ref: '#/components/schemas/purchase_order'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Not Found
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      operationId: update-purchase-order
      tags:
        - Purchase Orders
      summary: Update an existing Purchase Order
      description: Update an existing Purchase Order
      parameters:
        - name: purchase_order_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/purchase_order'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  purchase_order:
                    $ref: '#/components/schemas/purchase_order'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      operationId: delete-purchase-order
      tags:
        - Purchase Orders
      summary: Delete a purchase order
      description: Delete the purchase order with the given ID from Freshservice
      parameters:
        - name: purchase_order_id
          in: path
          description: ID of purchase order to delete
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v2/contract_types:
    get:
      operationId: list-contract-types
      tags:
        - Contract Types
      summary: List all contract types
      description: Get a list of all contract types in Freshservice
      parameters:
        - $ref: '#/components/parameters/PaginationPageParam'
        - $ref: '#/components/parameters/PaginationPerPageParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  contract_types:
                    type: array
                    items:
                      $ref: '#/components/schemas/ContractType'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/contract_types/{id}/fields':
    parameters:
      - name: id
        in: path
        required: true
        description: Id of the contract type
        schema:
          type: integer
    get:
      operationId: list-contract-type-fields
      tags:
        - Contract Types
      summary: List all fields of a contract type
      description: Get a list of all fields of a contract type in Freshservice
      parameters:
        - $ref: '#/components/parameters/PaginationPageParam'
        - $ref: '#/components/parameters/PaginationPerPageParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  contract_type_fields:
                    type: array
                    items:
                      $ref: '#/components/schemas/ContractTypeField'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v2/contracts:
    get:
      operationId: list-contracts
      tags:
        - Contracts
      summary: List all contracts
      description: Get a list of all contract in Freshservice
      parameters:
        - $ref: '#/components/parameters/PaginationPageParam'
        - $ref: '#/components/parameters/PaginationPerPageParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  contracts:
                    type: array
                    uniqueItems: true
                    items:
                      $ref: '#/components/schemas/Contract'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      operationId: create-contract
      tags:
        - Contracts
      summary: Create a contract
      description: Create a contract in Freshservice
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                contract:
                  $ref: '#/components/schemas/Contract'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  contract:
                    $ref: '#/components/schemas/Contract'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '415':
          description: Unsupported Media Types
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/contracts/{id}/move_workspace':
    put:
      summary: Move contracts to another workspace
      parameters:
        - name: id
          in: path
          description: ID of the contracts
          required: true
          schema:
            type: integer
            format: int64
      tags:
        - Contracts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  contract:
                    $ref: '#/components/schemas/Contract'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
      operationId: put-api-v2-contracts-id-move-workspace
      description: Move contracts to another workspace
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/MoveWorkspace'
                - type: object
                  properties:
                    visible_to_id:
                      type: integer
                      format: int64
                      example: 1
                  required:
                    - id
                    - workspace_id
  '/api/v2/purchase_orders/{id}/move_workspace':
    put:
      summary: Move purchase order to another workspace
      parameters:
        - name: id
          in: path
          description: ID of the purchase_orders
          required: true
          schema:
            type: integer
            format: int64
      tags:
        - Purchase Orders
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  purchase_order:
                    $ref: '#/components/schemas/purchase_order'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
      operationId: put-api-v2-purchase_orders-id-move-workspace
      description: Move purchase order to another workspace
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/MoveWorkspace'
              required:
                - id
                - workspace_id
  '/api/v2/applications/{id}/move_workspace':
    put:
      summary: Move software to another workspace
      parameters:
        - name: id
          in: path
          description: ID of the applications
          required: true
          schema:
            type: integer
            format: int64
      tags:
        - Software
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  application:
                    $ref: '#/components/schemas/software'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
      operationId: put-api-v2-applications-id-move-workspace
      description: Move software to another workspace
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/MoveWorkspace'
              required:
                - id
                - workspace_id
  '/api/v2/assets/{id}/move_workspace':
    put:
      summary: Move asset to another workspace
      parameters:
        - name: id
          in: path
          description: ID of the assets
          required: true
          schema:
            type: integer
            format: int64
      tags:
        - Assets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  asset:
                    $ref: '#/components/schemas/asset'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
      operationId: put-api-v2-asset-id-move-workspace
      description: Move asset to another workspace
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/MoveWorkspace'
                - type: object
                  properties:
                    agent_id:
                      type: integer
                      format: int64
                      example: 1
                    group_id:
                      type: integer
                      format: int64
                      example: 1
              required:
                - id
                - workspace_id
  '/api/v2/contracts/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: Id of the contract
        schema:
          type: integer
    get:
      operationId: get-contract
      tags:
        - Contracts
      summary: View a contract
      description: View an existing contract in Freshservice
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  contract:
                    $ref: '#/components/schemas/Contract'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      operationId: update-contract
      tags:
        - Contracts
      summary: Update a contract
      description: Update an existing contract in Freshservice
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                contract:
                  $ref: '#/components/schemas/Contract'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  contract:
                    $ref: '#/components/schemas/Contract'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Not Found
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    patch:
      operationId: update-contract-opreation
      tags:
        - Contracts
      summary: 'Submit for approval, Approve, Reject a Contract'
      description: Submit a contract for approval or Approve a contract or Reject a contract
      parameters:
        - in: query
          name: operation
          description: Operation to be performed on the Contract.
          schema:
            type: string
            enum:
              - submit-for-approval
              - approve
              - reject
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason_to_reject:
                  type: string
                  description: Reason to reject a contract. Required for reject a contract.
                  example: Terms need to be reviewed again
                  maxLength: 255
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Not Found
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/contracts/{id}/associated-assets':
    parameters:
      - name: id
        in: path
        description: Id of the contract
        required: true
        schema:
          type: integer
    get:
      operationId: get-contract-associated-assets
      tags:
        - Contracts
      summary: View all associated assets of a contract
      description: Get a list of all associated assets of a contract
      parameters:
        - $ref: '#/components/parameters/PaginationPageParam'
        - $ref: '#/components/parameters/PaginationPerPageParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  associated_assets:
                    type: array
                    items:
                      $ref: '#/components/schemas/asset'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/contracts/{id}/attachments':
    parameters:
      - name: id
        in: path
        required: true
        description: Id of the contract
        schema:
          type: integer
    get:
      operationId: get-contracts-attachments
      tags:
        - Contracts
      summary: View all attachments of a contract
      description: Get a list of all attachments of a contract
      parameters:
        - $ref: '#/components/parameters/PaginationPageParam'
        - $ref: '#/components/parameters/PaginationPerPageParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  attachments:
                    $ref: '#/components/schemas/attachment'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/contracts/{id}/renewals':
    parameters:
      - name: id
        in: path
        description: Id of the contract
        required: true
        schema:
          type: integer
    get:
      operationId: get-contract-renewals
      tags:
        - Contracts
      summary: List all renewals for a contract
      description: Get a list of all renewals and extends of a contract
      parameters:
        - $ref: '#/components/parameters/PaginationPageParam'
        - $ref: '#/components/parameters/PaginationPerPageParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  renewal_details:
                    type: array
                    items:
                      $ref: '#/components/schemas/RenewalDetails'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/applications/{id}/relationships':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
          format: int64
    get:
      summary: List Relationships of a Software
      tags:
        - Software
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  relationships:
                    $ref: '#/components/schemas/relationship'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      operationId: get-api-v2-applications-id-relationships
      description: List All Relationships for a Software
  /api/v2/relationships/bulk-create:
    post:
      summary: Create relationships in bulk
      tags:
        - Relationships
      responses:
        '202':
          $ref: '#/components/responses/AsyncAccepted'
        '403':
          $ref: '#/components/responses/Forbidden'
      operationId: post-api-v2-relationships-bulk-create
      description: Create new relationships between entities in bulk
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                relationships:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  items:
                    $ref: '#/components/schemas/relationship'
                  required:
                    - relationship_type_id
                    - primary_id
                    - primary_type
                    - secondary_id
                    - secondary_type
              required:
                - relationships
  /api/v2/merge-tickets:
    post:
      operationId: merge-tickets
      tags:
        - Tickets
      summary: Merge two or more tickets together
      description: Merge two or more tickets together
      requestBody:
        description: ticket ids which needs to be merged
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/merge_ticket'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    minLength: 1
                required:
                  - status
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitError'
  /api/v2/service_catalog/items/search:
    get:
      operationId: get-api-v2-service_catalog-items-search
      description: Search for service items from the service catalog for a given search term.
      tags:
        - Service Catalog
      summary: Search Service Items
      parameters:
        - $ref: '#/components/parameters/PaginationPageParam'
        - $ref: '#/components/parameters/PaginationPerPageParam'
        - in: query
          name: search_term
          description: The keywords for which the solution articles have to be searched.
          schema:
            type: string
        - in: query
          name: user_email
          description: 'By default, the API will search the articles for the user whose API key is provided. If you want to search articles for a different user, please provide their user_email.'
          schema:
            type: string
            format: email
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      service_items:
                        type: array
                        items:
                          $ref: '#/components/schemas/service_item'
                      meta:
                        $ref: '#/components/schemas/Pagination'
                type: object
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v2/solutions/articles/search:
    get:
      summary: Search solution articles
      tags:
        - Solution Articles
      operationId: get-api-v2-solutions-articles-search
      description: Search solution articles
      parameters:
        - $ref: '#/components/parameters/PaginationPageParam'
        - $ref: '#/components/parameters/PaginationPerPageParam'
        - in: query
          name: search_term
          description: 'The keywords for which the solution articles have to be searched. Example: “Vpn issue”'
          schema:
            type: string
        - in: query
          name: user_email
          schema:
            type: string
            format: email
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  articles:
                    type: array
                    items:
                      required:
                        - id
                        - created_at
                        - updated_at
                        - title
                        - status
                        - description
                        - description_text
                        - category_id
                        - folder_id
                        - user_id
                        - modified_by
                        - modified_at
                        - inserted_into_tickets
                        - url
                        - position
                        - article_type
                        - thumbs_up
                        - thumbs_down
                        - approval_status
                        - attachments
                        - keywords
                        - views
                        - review_date
                        - group_folder_group_ids
                        - folder_department_ids
                        - group_folder_requester_group_ids
                        - group_folder_department_ids
                        - folder_visibility
                      allOf:
                        - $ref: '#/components/schemas/SolutionArticle'
                  meta:
                    $ref: '#/components/schemas/Pagination'
                required:
                  - articles
                  - meta
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v2/internal/custom_mailbox_lambda:
    post:
      summary: Custom mailbox lambda
      operationId: post-api-v2-internal-custom_mailbox_lambda
      responses:
        '200':
          description: OK
      description: Set error messages for email configs
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                messages:
                  $ref: '#/components/schemas/custom_mailbox_lambda'
      tags:
        - Email
  /api/v2/internal/spam_watcher:
    post:
      summary: Spam watcher
      operationId: post-api-v2-internal-spam_watcher
      responses:
        '200':
          description: OK
      tags:
        - Spam Watcher
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/spam_watcher'
      description: 'Block the users, accounts outgoing emails based on the threshold configured at sumologic'
  /api/v2/internal/haystack-spam-watcher:
    post:
      summary: Haystack Spam watcher
      operationId: post-api-v2-internal-haystack_spam_watcher
      responses:
        '200':
          description: OK
      description: 'Block the users, accounts outgoing emails based on the threshold configured at haystack'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/haystack_spam_watcher'
      tags:
        - Spam Watcher
  /api/v2/tickets/filter:
    get:
      summary: Filter Tickets
      description: API to filter tickets matching a specified set of ticket fields.
      tags:
        - Tickets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tickets:
                    type: array
                    items:
                      $ref: '#/components/schemas/ticket'
                  total:
                    type: integer
                    description: total count of tickets
                    example: 20
                    minimum: 0
                    readOnly: true
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimitError'
      operationId: get-api-v2-tickets-filter
      parameters:
        - $ref: '#/components/parameters/PaginationPageParam'
        - $ref: '#/components/parameters/PaginationPerPageParam'
        - name: query
          in: query
          description: |-
            Query Format(query) - "(ticket_field:integer OR ticket_field:'string') AND ticket_field:boolean"
            <br>
            <p>
              <b>Note:</b> 
              <br> 1. The query must be URL encoded<br> 2. Query can be framed using the ticket field name in snake case, which can be obtained from Ticket Fields endpoint. Ticket Fields are case sensitive<br> 3. Query string must be enclosed between a pair of double quotes and can have up to 512 characters<br> 4. Logical operators AND, OR along with parentheses () can be used to group conditions<br> 5. Relational operators greater than or equal to :&gt; and less than or equal to :&lt; can be used along with date fields and numeric fields<br> 6. Input for date fields should be in UTC Format<br> 7. The number of objects returned per page is 30 also the total count of the results will be returned along with the result<br> 8. To scroll through the pages add page parameter to the url<br> 9. To filter for agent and group with no values assigned, use the null keyword<br></p><h4> Supported Ticket Fields</h4>
            <table>
              <thead>
                <tr>
                  <th>Field</th>
                  <th>Type</th>
                  <th>Description</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>agent_id</td><td>number</td><td>ID of the agent to whom the ticket has been assigned</td>
                </tr> 
                <tr> 
                  <td>group_id</td> <td>number</td> <td>ID of the group to which the ticket has been assigned</td>
                </tr>
                <tr>
                  <td>priority</td> <td>number</td> <td>Priority of the ticket</td> </tr> 
                <tr>
                  <td>status</td><td>number</td> <td>Status of the ticket</td>
                </tr>
                <tr>
                  <td>impact</td> <td>number</td> <td>Ticket impact</td>
                </tr>
                <tr>
                  <td>urgency</td> <td>number</td> <td>Ticket urgency</td>
                </tr>
                <tr>
                  <td>tag</td> <td>string</td> <td>Tag that has been associated to the tickets</td>
                </tr>
                <tr>
                  <td>due_by</td> <td>date</td> <td>Date (YYYY-MM-DD) when the ticket is due to be resolved</td>
                </tr>
                <tr>
                  <td>fr_due_by</td> <td>date</td> <td>Date (YYYY-MM-DD) when the first response is due</td>
                </tr>
                <tr>
                  <td>created_at</td><td>date</td> <td>Ticket creation date (YYYY-MM-DD)</td> 
                </tr> 
              </tbody> 
            </table>
            <h4>Custom Fields</h4>
            <table>
              <thead>
                <tr>
                  <th>Field Type</th><th>Type</th>
                </tr> 
              </thead> 
              <tbody> 
                <tr> 
                  <td>Number</td> <td>number</td> 
                </tr> 
                <tr> 
                  <td>Checkbox</td> <td>boolean</td> 
                </tr> 
                <tr> 
                  <td>Dropdown</td> <td>string</td> 
                </tr> 
                <tr> 
                  <td>Date</td> <td>date(YYYY-MM-DD)</td> 
                </tr> 
              </tbody> 
            </table>
            <p>
              <b>Note:</b>
              <br> Queries can be combined using AND or OR.<br> https://domain.freshservice.com/api/v2/tickets/filter?query="priority: 1 AND status: 2 OR urgency: 3"<br><br> <b>Supported operators</b><br> 1. priority: 1 (priority equal to 1)<br> 2. priority:&gt; 1 (priority greater than 1)<br> 3. priority :&lt; 1 (priority less than 1)<br><br> <b>Formatting</b><br> 1. String fields to be enclosed in single quotes ('')<br> 2. Number fields to be given as number without quotes.<br> 3. Date and date_time fields to be enclosed in single quotes('yyyy-mm-dd')<br> 4. only :&gt; and :&lt; are supported for date and date_time fields. Both fields expect input in the same format as 'yyyy-mm-dd'<br> 
            </p>
          required: true
          schema:
            type: string
  /api/v2/pm/projects:
    post:
      operationId: create-pm-project
      summary: Create Project
      description: This API helps you create a new project in your service desk
      requestBody:
        required: true
        description: project that needs to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGenProject'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  project:
                    $ref: '#/components/schemas/NewGenProject'
              examples:
                example-1:
                  value:
                    project:
                      id: 1
                      name: Intranet Site Development
                      key: SP3
                      description: <div>Project for Intranet Site Development</div>
                      status_id: 2
                      priority_id: 2
                      sprint_duration: 14
                      project_type: 0
                      start_date: '2021-04-01'
                      end_date: '2021-06-30'
                      archived: false
                      visibility: 1
                      manager_id: 43423
                      created_at: '2021-04-01T07:16:45Z'
                      updated_at: '2021-04-01T07:16:45Z'
                      custom_fields:
                        sample: value
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - New Gen PM
    get:
      operationId: list-pm-projects
      summary: List All Projects
      description: This API lists all the open and completed projects accessible to you.
      parameters:
        - $ref: '#/components/parameters/PaginationPerPageParam'
        - $ref: '#/components/parameters/PaginationPageParam'
        - in: query
          name: filter
          description: Filter projects based on given value
          schema:
            default: all
            enum:
              - all
              - archived
              - completed
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  projects:
                    type: array
                    items:
                      $ref: '#/components/schemas/NewGenProject'
              examples:
                example-1:
                  value:
                    projects:
                      - id: 1
                        name: Intranet Site Development
                        key: SP3
                        description: <div>Project for Intranet Site Development</div>
                        status_id: 2
                        priority_id: 2
                        sprint_duration: 14
                        project_type: 0
                        start_date: '2021-04-01'
                        end_date: '2021-06-30'
                        archived: false
                        visibility: 1
                        manager_id: 43423
                        created_at: '2021-04-01T07:16:45Z'
                        updated_at: '2021-07-01T07:16:45Z'
                        custom_fields:
                          sample: This is a custom text box
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - New Gen PM
  '/api/v2/pm/projects/{id}':
    get:
      operationId: get-pm-project
      summary: View Project
      description: This API lets you view the details of a project.
      parameters:
        - name: id
          in: path
          description: ID of project to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  project:
                    $ref: '#/components/schemas/NewGenProject'
              examples:
                example-1:
                  value:
                    project:
                      id: 1
                      name: Intranet Site Development
                      key: SP3
                      description: <div>Project for Intranet Site Development</div>
                      status_id: 1
                      priority_id: 2
                      sprint_duration: 14
                      project_type: 0
                      start_date: '2021-04-01'
                      end_date: '2021-06-30'
                      archived: false
                      visibility: 1
                      manager_id: 43423
                      created_at: '2021-04-01T07:16:45Z'
                      updated_at: '2021-07-01T07:16:45Z'
                      custom_fields:
                        sample: This is a custom text box
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - New Gen PM
    put:
      operationId: update-pm-project
      summary: Update Project
      description: This API lets you update the properties of a project.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: project that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGenProject'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  project:
                    $ref: '#/components/schemas/NewGenProject'
              examples:
                example-1:
                  value:
                    project:
                      id: 1
                      name: Intranet Site Development
                      key: SP3
                      description: <div>Project for Intranet Site Development</div>
                      status_id: 2
                      priority_id: 2
                      sprint_duration: 14
                      project_type: 0
                      start_date: '2021-04-01'
                      end_date: '2021-06-30'
                      archived: false
                      visibility: 1
                      manager_id: 43423
                      created_at: '2021-04-01T07:16:45Z'
                      updated_at: '2021-07-01T07:16:45Z'
                      custom_fields:
                        sample: This is a custom text box
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - New Gen PM
    delete:
      operationId: delete-pm-project
      summary: Delete Project
      description: This API lets you permanently delete a project. Deleted projects cannot be restored.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - New Gen PM
  '/api/v2/pm/projects/{id}/archive':
    post:
      operationId: archive-pm-project
      tags:
        - New Gen PM
      summary: Archive Project
      description: Archive an existing Project in Freshservice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              examples: {}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/pm/projects/{id}/restore':
    post:
      operationId: restore-pm-project
      summary: Restore Project
      description: You can restore an archived project using this API.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              examples: {}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - New Gen PM
  /api/v2/pm/project-fields:
    get:
      operationId: list-project-form-fields
      summary: View Project Fields
      description: Retrieve all the Fields that constitute the Project
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  project_fields:
                    type: array
                    items:
                      title: ProjectField
                      description: ''
                      x-tags:
                        - New Gen PM
                      type: object
                      properties:
                        name:
                          type: string
                          minLength: 1
                          example: title
                          description: Name of the field. This can be used in API requests.
                          maxLength: 255
                          readOnly: true
                        default:
                          type: boolean
                          default: false
                          example: true
                          description: Set to true if the field is a default field.
                          readOnly: true
                        label:
                          type: string
                          example: Title
                          description: Display name of the field (as seen by project members).
                          minLength: 1
                          maxLength: 64
                        type:
                          type: string
                          example: default_title
                          description: 'Indicates if the field is a text, number, date, paragraph, checkbox,or dropdown.'
                          minLength: 1
                        choices:
                          description: List of values supported by the field.
                          type: array
                          example:
                            - 1
                            - 2
                            - 3
                          items: {}
                        mandatory:
                          type: boolean
                          default: false
                          example: true
                          description: Set to true if the field is mandatory.
                        created_at:
                          type: string
                          example: '2022-07-05T22:38:37Z'
                          format: date-time
                          readOnly: true
                        updated_at:
                          type: string
                          example: '2022-07-05T22:38:37Z'
                          format: date-time
                          readOnly: true
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - New Gen PM
  '/api/v2/pm/projects/{id}/tasks':
    post:
      operationId: create-pm-project-task
      summary: Create Project Task
      description: This API lets you create a project task.
      requestBody:
        required: true
        description: project task that needs to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGenProjectTask'
      parameters:
        - name: id
          in: path
          description: Unique ID of project
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: '#/components/schemas/NewGenProjectTask'
              examples:
                example-1:
                  value:
                    task:
                      id: 1001
                      project_id: 10
                      title: Clear backlog
                      description: Clear backlog
                      status_id: 1
                      priority_id: 4567
                      type_id: 456789
                      assignee_id: 984793
                      planned_start_date: '2021-06-14T07:16:45Z'
                      planned_end_date: '2021-06-11T07:16:45Z'
                      parent_id: 34534
                      story_points: 5
                      reporter_id: 789621
                      sprint_id: 7892913
                      version_id: 789271
                      created_at: '2021-06-14T07:16:45Z'
                      updated_at: '2021-06-14T07:16:45Z'
                      custom_fields:
                        'Story Link: Link URL': null
                      planned_effort: 2d
                      planned_duration: 2d
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - New Gen PM
    get:
      operationId: list-pm-project-tasks
      summary: List All Project Tasks
      description: You can use this API to list all the tasks of a project
      parameters:
        - name: id
          in: path
          description: Unique ID of project
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: filter
          description: Task filters
          schema:
            type: string
            enum:
              - all
              - open
              - unresolved
            default: all
        - $ref: '#/components/parameters/PaginationPerPageParam'
        - $ref: '#/components/parameters/PaginationPageParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: '#/components/schemas/NewGenProjectTask'
              examples:
                example-1:
                  value:
                    tasks:
                      - id: 1
                        title: Clear backlog
                        project_id: 1
                        description: Clear backlog
                        status_id: 1
                        priority_id: 4567
                        reporter_id: 789621
                        created_at: '2021-06-14T07:16:45.000Z'
                        updated_at: '2021-06-15T07:16:45.000Z'
                        planned_start_date: '2021-06-11T07:16:45.000Z'
                        type_id: 456789
                        assignee_id: 984793
                        planned_end_date: '2021-06-20T07:16:45.000Z'
                        planned_effort: 1d
                        planned_duration: 1w 3d
                        custom_fields:
                          cf_story_link: null
                        version_id: 789271
                        parent_id: 34534
                        story_points: 5
                        sprint_id: 7892913
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - New Gen PM
  '/api/v2/pm/projects/{id}/tasks/{task_id}':
    get:
      operationId: get-pm-project-task
      summary: View Project Task
      description: This API lets you view the details of a project task.
      parameters:
        - name: task_id
          in: path
          description: Task id
          required: true
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          description: Project id of the task
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: '#/components/schemas/NewGenProjectTask'
              examples:
                example-1:
                  value:
                    task:
                      id: 1001
                      project_id: 10
                      title: Clear backlog
                      description: Clear backlog
                      status_id: 1
                      priority_id: 4567
                      type_id: 456789
                      assignee_id: 984793
                      planned_start_date: '2021-06-14T07:16:45Z'
                      planned_end_date: '2021-06-11T07:16:45Z'
                      parent_id: 34534
                      story_points: 5
                      reporter_id: 789621
                      sprint_id: 7892913
                      version_id: 789271
                      created_at: '2021-06-14T07:16:45Z'
                      updated_at: '2021-06-14T07:16:45Z'
                      custom_fields:
                        'Story Link: Link URL': null
                      planned_effort: 2d
                      planned_duration: 2d
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - New Gen PM
    put:
      operationId: update-pm-project-task
      summary: Update a  Project Task
      description: This API lets you update a project task
      requestBody:
        description: project task that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGenProjectTask'
      parameters:
        - name: id
          in: path
          description: Unique ID of project
          required: true
          schema:
            type: integer
            format: int64
        - name: task_id
          in: path
          description: ID of the task to be updated
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: '#/components/schemas/NewGenProjectTask'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - New Gen PM
    delete:
      operationId: delete-pm-project-task
      summary: Delete a  Project Task
      description: This API helps you delete a project task. Deleted tasks cannot be restored.
      parameters:
        - name: id
          in: path
          description: Unique ID of project
          required: true
          schema:
            type: integer
            format: int64
        - name: task_id
          in: path
          description: ID of the task to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - New Gen PM
  '/api/v2/pm/projects/{id}/task-types/{type_id}/fields':
    get:
      operationId: list-task-form-fields
      summary: View Project Task Fields
      description: This API lets you list the fields of a specifc task type from your project.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  fields:
                    type: array
                    items:
                      title: ProjectTaskField
                      description: ''
                      type: object
                      x-tags:
                        - New Gen PM
                      properties:
                        name:
                          type: string
                          minLength: 1
                          example: title
                          description: Name of the field. This can be used in API requests.
                          maxLength: 64
                          readOnly: true
                        default:
                          type: boolean
                          default: false
                          example: true
                          description: Set to true if the field is a default field.
                          readOnly: true
                        label:
                          type: string
                          example: Title
                          description: Display name of the field (as seen by project members).
                          maxLength: 64
                        type:
                          type: string
                          example: default_title
                          description: 'Indicates if the field is a text, number, date, paragraph, checkbox,or dropdown.'
                        choices:
                          type: array
                          description: List of values supported by the field.
                          example:
                            - 1
                            - 2
                            - 3
                            - 5
                            - 8
                            - 13
                          items: {}
                        mandatory:
                          type: boolean
                          default: false
                          example: true
                          description: Set to true if the field is mandatory.
                        created_at:
                          type: string
                          example: '2022-07-05T22:38:37Z'
                          format: date-time
                          readOnly: true
                        updated_at:
                          type: string
                          example: '2022-07-05T22:38:37Z'
                          format: date-time
                          readOnly: true
                        project_id:
                          type: integer
                          example: 1534
                          description: ID of the project this task type is present in.
                          minimum: 1
                          readOnly: true
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - New Gen PM
      parameters:
        - $ref: '#/components/parameters/PaginationPerPageParam'
        - $ref: '#/components/parameters/PaginationPageParam'
    parameters:
      - name: id
        in: path
        required: true
        description: Unique ID of project
        schema:
          type: integer
      - name: type_id
        in: path
        required: true
        description: ID of the task type
        schema:
          type: integer
  '/api/v2/pm/projects/{id}/task-types':
    get:
      operationId: get-pm-project-task-types
      summary: View Project Task Types
      description: This API lists all the task types that are present in a project.
      parameters:
        - name: id
          in: path
          description: Unique ID of project
          required: true
          schema:
            type: integer
            format: int64
        - $ref: '#/components/parameters/PaginationPerPageParam'
        - $ref: '#/components/parameters/PaginationPageParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  task_types:
                    type: array
                    items:
                      title: ProjectTaskType
                      type: object
                      description: ''
                      x-tags:
                        - New Gen PM
                      properties:
                        id:
                          type: integer
                          format: int64
                          description: ID of task type.
                          example: 1001
                          minimum: 1
                          readOnly: true
                        name:
                          type: string
                          description: Name of the task type.
                          maxLength: 255
                          example: epic
                        description:
                          type: string
                          description: Description of the task type.
                          example: 'Task Types like Epic, Tasklist, Task, User Story, Sub-task, Bug, '
                          maxLength: 65536
                        project_id:
                          type: integer
                          format: int64
                          description: ID of the project.
                          minimum: 1
                          example: 10
                        created_at:
                          type: string
                          example: '2021-06-14T07:16:45Z'
                          format: date-time
                          readOnly: true
                        updated_at:
                          type: string
                          example: '2021-06-14T07:16:45Z'
                          format: date-time
                          readOnly: true
              examples:
                example-1:
                  value:
                    task_types:
                      - id: 1001
                        name: epic
                        description: 'Task Types like Epic, Tasklist, Task, User Story, Sub-task, Bug, '
                        project_id: 10
                        created_at: '2021-06-14T07:16:45Z'
                        updated_at: '2021-06-14T07:16:45Z'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - New Gen PM
  '/api/v2/pm/projects/{id}/task-priorities':
    get:
      operationId: get-pm-project-task-priorities
      summary: View Project Task Priorities
      description: This API lists all the priority levels that have been created in a project.
      parameters:
        - name: id
          in: path
          description: Unique ID of project
          required: true
          schema:
            type: integer
            format: int64
        - $ref: '#/components/parameters/PaginationPerPageParam'
        - $ref: '#/components/parameters/PaginationPageParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  task_priorities:
                    type: array
                    items:
                      title: ProjectTaskPriority
                      type: object
                      x-tags:
                        - New Gen PM
                      properties:
                        id:
                          type: integer
                          format: int64
                          description: ID of the priority level.
                          minimum: 1
                          example: 1001
                          readOnly: true
                        project_id:
                          type: integer
                          format: int64
                          minimum: 1
                          description: ID of the project.
                          example: 10
                        name:
                          type: string
                          description: Priority level.
                          maxLength: 255
                          example: high
                        description:
                          type: string
                          description: Description of the priority level.
                          example: 'Task priorities like Low, Medium, High, Urgent'
                          maxLength: 65535
                        created_at:
                          type: string
                          example: '2021-06-14T07:16:45Z'
                          format: date-time
                          readOnly: true
                        updated_at:
                          type: string
                          example: '2021-06-14T07:16:45Z'
                          format: date-time
                          readOnly: true
              examples:
                example-1:
                  value:
                    task_priorities:
                      - id: 4000010774
                        created_at: '2021-06-14T07:16:45.000Z'
                        updated_at: '2021-06-14T07:16:45.000Z'
                        name: high
                        description: This is the description for High
                        project_id: 1
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - New Gen PM
  '/api/v2/pm/projects/{id}/task-statuses':
    get:
      operationId: get-pm-project-task-statuses
      summary: View Project Task Statuses
      description: This API lists all the task statuses that have been defined in a project.
      parameters:
        - name: id
          in: path
          description: Unique ID of project
          required: true
          schema:
            type: integer
            format: int64
        - $ref: '#/components/parameters/PaginationPerPageParam'
        - $ref: '#/components/parameters/PaginationPageParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  task_statuses:
                    type: array
                    items:
                      title: ProjectTaskStatus
                      x-tags:
                        - New Gen PM
                      type: object
                      description: ''
                      properties:
                        id:
                          type: integer
                          format: int64
                          description: ID of the status.
                          minimum: 1
                          example: 1001
                          readOnly: true
                        project_id:
                          type: integer
                          format: int64
                          description: ID of the project.
                          example: 10
                        name:
                          type: string
                          description: Name of the status.
                          example: completed
                          maxLength: 255
                        description:
                          type: string
                          description: Description of the status.
                          example: 'Tasks statuses like Todo, InProgress, Completed etc.,'
                        category_id:
                          type: integer
                          example: 1
                          description: 'Category of the status. 1 = Yet to start, 2 = Work in progress, 3 = Completed.'
                          enum:
                            - 1
                            - 2
                            - 3
                          format: int32
                        created_at:
                          type: string
                          example: '2021-06-14T07:16:45Z'
                          format: date-time
                          readOnly: true
                        updated_at:
                          type: string
                          example: '2021-06-14T07:16:45Z'
                          format: date-time
                          readOnly: true
              examples:
                example-1:
                  value:
                    task_statuses:
                      - id: 1
                        created_at: '2022-06-22T11:44:55.000Z'
                        updated_at: '2022-06-22T11:44:55.000Z'
                        name: Open
                        description: This is the description for Open
                        project_id: 2
                        category_id: 1
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - New Gen PM
  '/api/v2/pm/projects/{id}/versions':
    get:
      operationId: get-pm-project-versions
      summary: View Project Versions
      description: This API lists all the versions that have been created in a project.
      parameters:
        - name: id
          in: path
          description: Unique ID of project
          required: true
          schema:
            type: integer
            format: int64
        - $ref: '#/components/parameters/PaginationPerPageParam'
        - $ref: '#/components/parameters/PaginationPageParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  versions:
                    type: array
                    items:
                      title: ProjectVersion
                      type: object
                      description: ''
                      x-tags:
                        - New Gen PM
                      properties:
                        id:
                          type: integer
                          format: int64
                          description: ID of the version.
                          example: 1001
                          minimum: 1
                          readOnly: true
                        project_id:
                          type: integer
                          format: int64
                          description: ID of the project.
                          minimum: 1
                          example: 10
                        name:
                          type: string
                          description: Name of the version.
                          example: Version Name
                          maxLength: 255
                        description:
                          type: string
                          description: Description of the version.
                          example: This version is our next major release version
                        created_at:
                          type: string
                          example: '2021-06-14T07:16:45Z'
                          format: date-time
                          readOnly: true
                        updated_at:
                          type: string
                          example: '2021-06-14T07:16:45Z'
                          format: date-time
                          readOnly: true
                        status_id:
                          type: integer
                          example: 1
                          enum:
                            - 1
                            - 2
                          default: 1
                          description: 'Status of the version. 1 = Unreleased, 2 = Released.'
                        owner_id:
                          type: integer
                          format: int64
                          example: 7682001
                          minimum: 1
                          description: ID of the user who owns the version.
                        start_date:
                          type: string
                          description: Start date of the version.
                          example: '2022-07-08T09:42:30.000Z'
                          format: date-time
                          readOnly: true
                        due_date:
                          type: string
                          description: Due date of the version.
                          example: '2022-07-20T09:42:00.000Z'
                          format: date-time
                          readOnly: true
              examples:
                example-1:
                  value:
                    versions:
                      - id: 1001
                        project_id: 10
                        name: Version Name
                        description: This version is our next major release version
                        created_at: '2021-06-14T07:16:45Z'
                        updated_at: '2021-06-14T07:16:45Z'
                        status_id: 1
                        owner_id: 7682001
                        start_date: '2022-07-08T09:42:30.000Z'
                        due_date: '2022-07-20T09:42:00.000Z'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - New Gen PM
  '/api/v2/pm/projects/{id}/sprints':
    get:
      operationId: get-pm-project-sprints
      summary: View Project Sprints
      description: This API lists all the sprints that have been created in a project.
      parameters:
        - name: id
          in: path
          description: Unique ID of project
          required: true
          schema:
            type: integer
            format: int64
        - $ref: '#/components/parameters/PaginationPerPageParam'
        - $ref: '#/components/parameters/PaginationPageParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  sprints:
                    type: array
                    items:
                      title: ProjectSprint
                      type: object
                      description: ''
                      x-tags:
                        - New Gen PM
                      properties:
                        id:
                          type: integer
                          format: int64
                          description: ID of the sprint.
                          example: 1001
                          minimum: 1
                          readOnly: true
                        project_id:
                          type: integer
                          format: int64
                          description: ID of the project.
                          minimum: 1
                          example: 10
                        title:
                          type: string
                          description: Name of the sprint.
                          example: Version Name
                          maxLength: 255
                        goal:
                          type: string
                          description: Goal of the sprint.
                          example: This sprint is planning for the next major release
                          maxLength: 65535
                        created_at:
                          type: string
                          example: '2021-06-14T07:16:45Z'
                          format: date-time
                          readOnly: true
                        updated_at:
                          type: string
                          example: '2021-06-14T07:16:45Z'
                          format: date-time
                          readOnly: true
                        state:
                          type: integer
                          enum:
                            - 1
                            - 2
                            - 3
                            - 0
                          example: 2
                          description: State of the sprint.
                          minimum: 1
                        planned_start_date:
                          type: string
                          example: '2021-06-14T07:16:45Z'
                          format: date-time
                          description: Planned start date entered for the sprint.
                        planned_end_date:
                          type: string
                          example: '2021-06-14T07:16:45Z'
                          format: date-time
                          description: Planned end date entered for the sprint.
              examples:
                example-1:
                  value:
                    sprints:
                      - id: 4000000136
                        created_at: '2021-06-14T07:16:45Z'
                        updated_at: '2021-06-14T07:16:45Z'
                        title: Sprint 2
                        planned_start_date: '2021-06-14T07:16:45Z'
                        planned_end_date: '2021-06-14T07:16:45Z'
                        goal: Sprint Goal
                        state: 2
                        project_id: 1
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - New Gen PM
  '/api/v2/pm/projects/{id}/memberships':
    get:
      operationId: get-pm-project-members
      summary: View Project Members
      description: This API lists all the members that are present in a project.
      parameters:
        - name: id
          in: path
          description: Unique ID of project
          required: true
          schema:
            type: integer
            format: int64
        - $ref: '#/components/parameters/PaginationPerPageParam'
        - $ref: '#/components/parameters/PaginationPageParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  memberships:
                    type: array
                    items:
                      title: ProjectMembership
                      description: ''
                      x-tags:
                        - New Gen PM
                      type: object
                      properties:
                        id:
                          type: integer
                          format: int64
                          example: 50653
                          minimum: 1
                          description: Memebership ID of the project.
                          readOnly: true
                        project_id:
                          type: integer
                          example: 1324
                          minimum: 1
                          description: ID of the project.
                          format: int64
                        user_id:
                          type: integer
                          example: 345
                          minimum: 1
                          description: User ID of the project member.
                          format: int64
                        access_type:
                          type: integer
                          example: 1
                          description: 'Access type of the user. 1 = Project Viewer, 2 = Project Editor.'
                        manage_settings:
                          type: boolean
                          example: true
                          description: Set to "true" if the user has the permission to manage project settings.
                        project_manager:
                          type: boolean
                          example: true
                          description: True if the user is the manager of the project.
                          readOnly: true
                        created_at:
                          type: string
                          example: '2022-06-22T13:05:52.000Z'
                          format: date-time
                          readOnly: true
                        updated_at:
                          type: string
                          example: '2022-06-22T13:05:52.000Z'
                          format: date-time
                          readOnly: true
              examples:
                memberships:
                  value:
                    id: 50653
                    project_id: 1
                    user_id: 4000010616
                    access_type: 2
                    manage_settings: true
                    project_manager: true
                    created_at: '2021-06-14T07:16:45.000Z'
                    updated_at: '2021-06-14T07:16:45.000Z'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - New Gen PM
  '/api/v2/pm/projects/{id}/members':
    post:
      operationId: import-pm-project-members
      summary: Import Project Members
      description: This API allows to bulk import members to a project.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                members:
                  type: array
                  items:
                    type: object
                    properties:
                      email:
                        type: string
                        description: Email of the user to be imported.
                        example: abc@example.com
                      role:
                        type: integer
                        example: 1
                        enum:
                          - 1
                          - 2
                          - 3
                        description: 1 - Project Viewer 2 - Project Editor 3 - Project Admin (Manage Project Settings)
                    example:
                      email: abc@example.com
                      role: 1
                  example:
                    - email: abc@example.com
                      role: 1
                    - email: bcd@example.com
                      role: 2
      parameters:
        - name: id
          in: path
          description: Unique ID of project
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  scheduled_process_status:
                    type: string
                    description: API url to check status of scheduled job
                    example: 'https://abc.freshservice.com/api/v2/pm/jobs/82b92270-0ce0-4027-8ed1-41162239833d'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - New Gen PM
  '/api/v2/pm/jobs/{id}':
    get:
      operationId: get-scheduled-job-status
      summary: Provides the status of a scheduled job
      description: This API provides the status of a scheduled job
      parameters:
        - name: id
          in: path
          description: Unique ID of request
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  members:
                    type: array
                    items:
                      type: object
                      properties:
                        http_code:
                          type: integer
                          example: 204
                          enum:
                            - 204
                            - 404
                            - 422
                          description: 204 - No Content (success) 404 - Not Found 422 - Validation Error
                        message:
                          type: string
                          description: Error message if there are any validation errors
                          example: abc@example.com
                        success:
                          type: boolean
                          example: true
                        email:
                          type: string
                          description: Email of the user to be imported.
                          example: abc@example.com
                      example:
                        http_code: 204
                        success: true
                        email: abc@example.com
                    example:
                      - http_code: 204
                        success: true
                        email: abc@example.com
                      - http_code: 204
                        success: true
                        email: abc@example.com
                  status:
                    type: string
                    description: The status of the enqueued job
                    enum:
                      - QUEUED
                      - IN_PROGRESS
                      - SUCCESS
                      - PARTIAL
                      - FAILED
                    example: SUCCESS
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - New Gen PM
  /api/v2/approvals:
    get:
      tags:
        - Approvals
      summary: Filtering ticket/change approvals through Public API
      description: Filtering ticket/change approvals through Public API
      operationId: filter-approvals
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  approvals:
                    type: array
                    items:
                      $ref: '#/components/schemas/service_request_approval'
                  total:
                    type: integer
                    description: total count of approvals
                    example: 20
                    minimum: 0
                    readOnly: true
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '429':
          $ref: '#/components/responses/RateLimitError'
      parameters:
        - name: parent
          in: query
          required: true
          schema:
            type: string
            enum:
              - ticket
              - change
          description: Filter based on parent either ticket or change.
        - name: parent_id
          in: query
          description: Indicates ticket or change id.
          required: false
          example: 13431121
          schema:
            type: integer
            format: int64
        - name: approver_id
          in: query
          description: Approver id of the approvals
          required: false
          example: 483922
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - requested
              - approved
              - rejected
              - cancelled
          description: Status of the approvals
        - name: delegatee_id
          in: query
          description: Delegatee id of the approvals
          required: false
          example: 483922
          schema:
            type: integer
            format: int64
        - name: level
          in: query
          description: Level of the approvals
          required: false
          example: 2
          schema:
            type: integer
            format: int32
  '/api/v2/tickets/{ticket_id}/approvals':
    get:
      operationId: fetch-all-approvals
      tags:
        - Approvals
      summary: Fetch all approvals for Service Request
      description: Fetches all approvals for Service Request
      parameters:
        - name: ticket_id
          in: path
          description: ID of the ticket for which the approvals are to be fetched
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  approvals:
                    type: array
                    items:
                      $ref: '#/components/schemas/service_request_approval'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/tickets/{ticket_id}/approvals/{approval_id}':
    get:
      operationId: fetch-specific-approval
      tags:
        - Approvals
      summary: Fetch specific approval for Service Request
      description: Fetches specific approval for a Service Request
      parameters:
        - name: ticket_id
          in: path
          description: ID of the ticket for which the approval is to be fetched
          required: true
          schema:
            type: integer
            format: int64
        - name: approval_id
          in: path
          description: ID of the approval
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  approval:
                    $ref: '#/components/schemas/service_request_approval'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      operationId: cancel-approval
      tags:
        - Approvals
      summary: Cancel an approval for Service Request
      description: Cancels a specific approval for a Service Request
      parameters:
        - name: ticket_id
          in: path
          description: ID of the ticket for which the approval is to be cancelled
          required: true
          schema:
            type: integer
            format: int64
        - name: approval_id
          in: path
          description: ID of the approval
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                approval_status:
                  description: Only takes value as 3(cancelled)
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 3
                  example:
                    id: 3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  approval:
                    $ref: '#/components/schemas/service_request_approval'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/tickets/{ticket_id}/approvals/{approval_id}/remind':
    put:
      operationId: send-reminder
      tags:
        - Approvals
      summary: Send reminder for an approval raised for a Service Request
      description: Sends a reminder for an approval raised for a Service Request
      parameters:
        - name: ticket_id
          in: path
          description: ID of the ticket for which the approval is to be resent as a reminder
          required: true
          schema:
            type: integer
            format: int64
        - name: approval_id
          in: path
          description: ID of the approval
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/pm/projects/{id}/tasks/filter':
    get:
      summary: Filter All Project Tasks
      description: API to filter project tasks matching a specified set of task fields.
      tags:
        - New Gen PM
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: '#/components/schemas/NewGenProjectTask'
                  total:
                    type: integer
                    description: total count of tasks
                    example: 20
                    minimum: 0
                    readOnly: true
              examples:
                example-1:
                  value:
                    tasks:
                      - id: 1
                        title: Clear backlog
                        project_id: 1
                        description: Clear backlog
                        status_id: 1
                        priority_id: 4567
                        reporter_id: 789621
                        created_at: '2021-06-14T07:16:45.000Z'
                        updated_at: '2021-06-15T07:16:45.000Z'
                        planned_start_date: '2021-06-11T07:16:45.000Z'
                        type_id: 456789
                        assignee_id: 984793
                        planned_end_date: '2021-06-20T07:16:45.000Z'
                        planned_effort: 1d
                        planned_duration: 1w 3d
                        custom_fields:
                          cf_story_link: null
                        version_id: 789271
                        parent_id: 34534
                        story_points: 5
                        sprint_id: 7892913
                    total: 20
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      operationId: filter-pm-project-tasks
      parameters:
        - $ref: '#/components/parameters/PaginationPageParam'
        - name: id
          in: path
          description: Unique ID of project
          required: true
          schema:
            type: integer
            format: int64
        - name: query
          in: query
          description: |-
            <br>
            <p>
              <b>Note:</b> 
              <br> 1. The query must be URL encoded<br> 2. Query can be framed using the task field name in snake case, which can be obtained from supported task fields . Task Fields are case sensitive<br> 3. Query string must be enclosed between a pair of double quotes and can have up to 512 characters<br> 4. Logical operators AND, OR along with parentheses () can be used to group conditions<br> 5. Relational operators greater than or equal to :&gt; and less than or equal to :&lt; can be used along with date fields<br> 6. Input for date fields should be in UTC Format<br> 7. The number of objects returned per page is 30 also the total count of the results will be returned along with the result<br> 8. To scroll through the pages add page parameter to the url<br></p><h4> Supported Task Fields</h4>
            <table>
              <thead>
                <tr>
                  <th>Field</th>
                  <th>Type</th>
                  <th>Description</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>version_id</td><td>number</td><td>ID of the version this task is a part of</td>
                </tr> 
                <tr> 
                  <td>sprint_id</td> <td>number</td> <td>ID of the sprint this task should be a part of</td>
                </tr>
                <tr>
                  <td>priority_id</td> <td>number</td> <td>Priority of the task</td> </tr> 
                <tr>
                  <td>status_id</td><td>number</td> <td>Status of the task</td>
                </tr>
                <tr>
                  <td>type_id</td> <td>number</td> <td>Id of the task type</td>
                </tr>
                <tr>
                  <td>assignee_id</td> <td>number</td> <td>User ID of the person to whom the task is assigned</td>
                </tr>
                <tr>
                  <td>reporter_id</td> <td>number</td> <td>User ID of the person who reported the task</td>
                </tr>
                <tr>
                  <td>created_at</td><td>date</td> <td>Task creation date (YYYY-MM-DD)</td> 
                </tr> 
              </tbody> 
            </table>
            <p>
              <b>Note:</b>
              <br> Queries can be combined using AND or OR.<br> https://domain.freshservice.com/api/v2/pm/project/{id}/tasks/filter?query="priority_id: 1 AND status_id: 2"<br><br> <b>Supported operators</b><br> 1. priority_id: 1 (priority_id equal to 1)<br> 2. created_at:&gt; '2023-11-01' (created_at greater than '2023-11-01')<br> 3. created_at:&lt; '2023-11-01' (created_at less than '2023-11-01')<br><br> <b>Formatting</b><br> 1. String fields to be enclosed in single quotes ('')<br> 2. Number fields to be given as number without quotes.<br> 3. Date and date_time fields to be enclosed in single quotes('yyyy-mm-dd')<br> 4. only :&gt; and :&lt; are supported for date and date_time fields. Both fields expect input in the same format as 'yyyy-mm-dd'<br> 
            </p>
          required: true
          schema:
            type: string
  /api/v2/analytics/transfer-ownership:
    post:
      tags:
        - Analytics
      operationId: post-analytics-reports-transfer-ownership
      summary: Transfer ownership of reports
      description: Transfer analytic reports from one agent to another active analytics agent.
      requestBody:
        description: Details required for reports transfer operation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportsTransfer'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Ownership transferred successfully for all reports
                required:
                  - message
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/attachments/{id}':
    get:
      operationId: download-attachment
      tags:
        - Attachments
      description: This API downloads the attachment.
      summary: Downloads the attachment
      parameters:
        - name: id
          in: path
          description: Unique ID of attachment
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '302':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  '/api/v2/itil_attachments/{id}':
    get:
      operationId: download-itil-attachment
      tags:
        - Attachments
      description: This API downloads the itil attachments.
      summary: Downloads the attachment
      parameters:
        - name: id
          in: path
          description: Unique ID of attachment
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '302':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /api/v2/problem_task_fields:
    get:
      operationId: get-api-v2-problem_task_fields
      tags:
        - Tasks
      summary: List Problem task fields
      description: To retrieve Problem task fields
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - problem_task_fields
                properties:
                  problem_task_fields:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/TaskFormField'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v2/change_task_fields:
    get:
      operationId: get-api-v2-change_task_fields
      tags:
        - Tasks
      summary: List Change task fields
      description: To retrieve Change task fields
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - change_task_fields
                properties:
                  change_task_fields:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/TaskFormField'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v2/release_task_fields:
    get:
      operationId: get-api-v2-release_task_fields
      tags:
        - Tasks
      summary: List Release task fields
      description: To retrieve Release task fields
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - release_task_fields
                properties:
                  release_task_fields:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/TaskFormField'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/tickets/{id}/reply-document':
    post:
      parameters:
        - schema:
            type: integer
          name: id
          in: path
          required: true
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/conversation'
      summary: Sends document in reply
      tags:
        - Document Template
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  conversation:
                    $ref: '#/components/schemas/conversation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
      description: Sends the generated document in a reply
      operationId: post-api-v2-tickets-id-reply-document
  /api/v2/service-catalog/items:
    post:
      summary: Create a new Service catalog item
      operationId: post-api-v2-service-catalog-items
      description: Create a new Service catalog item
      tags:
        - Service Catalog Item
      requestBody:
        required: true
        description: Service catalog item need to be created
        content:
          application/json:
            schema:
              type: object
              properties:
                service_item:
                  $ref: '#/components/schemas/service_item'
                workspace_id:
                  type: integer
                  format: int64
                  example: 2
                  description: Workspace ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  service_item:
                    $ref: '#/components/schemas/service_item'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v2/project_management/analytics/export:
    get:
      summary: Fetch Project Management Data Analytics Report
      tags:
        - Analytics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: integer
              examples:
                Schedule does not exist:
                  value:
                    message: Schedule does not exist
                    code: 404
                Internal server error:
                  value:
                    message: Internal Server Error
                    code: 500
        '302':
          description: Found
      operationId: get-api-v2-project_management-analytics-export?id=-id
      parameters:
        - schema:
            type: string
          in: query
          name: id
          description: User Token
    parameters: []
  '/api/v2/tickets/{id}/collab-note':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          example: 1234
    post:
      summary: Creates conversation note on the given ticket
      tags:
        - Conversation
        - Contextual Collaboration
      responses:
        '403':
          $ref: '#/components/responses/Forbidden'
      operationId: create-collaboration-conversation-note
      requestBody:
        content:
          application/json:
            schema:
              type: object
      description: import conversations as a note
  /api/v2/offboarding_requests/form:
    get:
      operationId: get-offboarding-request-form
      tags:
        - Employee Offboarding
      summary: Display offboarding form details
      description: Retrieve a list of all fields in initiator form.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offboarding_form'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  /api/v2/offboarding_requests:
    post:
      operationId: create-offboarding-request
      tags:
        - Employee Offboarding
      summary: Create Offboarding Request
      description: Create a new Offboarding Request in Freshservice
      requestBody:
        description: offboarding request that needs to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/offboarding_request_fields'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  offboarding_request:
                    $ref: '#/components/schemas/offboarding_request'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
    get:
      operationId: list-offboarding-requests
      tags:
        - Employee Offboarding
      summary: Get all Offboarding Requests
      description: Get all Offboarding Request for a particular user.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offboarding_request_index'
        '400':
          description: Bad data
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/offboarding_requests/{id}':
    get:
      operationId: get-offboarding-request
      tags:
        - Employee Offboarding
      summary: Get a specific Offboarding Request
      description: Get a specific Offboarding Request from freshservice
      parameters:
        - in: path
          name: id
          description: Display ID of the Offboarding Request
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  offboarding_request:
                    $ref: '#/components/schemas/offboarding_request'
        '400':
          description: Bad data
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/offboarding_requests/{id}/tickets':
    get:
      operationId: list-offboarding-request-tickets
      tags:
        - Employee Offboarding
      summary: Get the details of the FreshService Tickets associated with a specific Offboarding Request
      description: Get the details of the FreshService Tickets associated with a specific Offboarding Request
      parameters:
        - in: path
          name: id
          description: Display ID of the Offboarding Request
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offboarding_ticket'
        '400':
          description: Bad data
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
  '/api/v2/changes/{id}/pull-requests':
    get:
      summary: Get list of pullrequests associated with a Change
      tags:
        - Devops Platform
      parameters:
        - $ref: '#/components/parameters/PaginationPageParam'
        - $ref: '#/components/parameters/PaginationPerPageParam'
        - schema:
            type: integer
          name: id
          in: path
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pullrequests'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
      operationId: list-pullrequests
      description: To list pullrequests associated with a Change
  '/api/v2/changes/{id}/pull-requests/associate':
    post:
      summary: To associate pullrequests to changes
      tags:
        - Devops Platform
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                application_type:
                  type: string
                connection_id:
                  type: integer
                pull_request_urls:
                  type: array
                  items:
                    type: string
                application_config:
                  type: object
                  properties:
                    org_name:
                      type: string
                    project:
                      type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
                example: true
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
      operationId: associate_pullrequests
      description: To associate pullrequests with a Change
  '/api/v2/changes/{id}/pull-requests/disassociate':
    post:
      summary: To disassociate pullrequests to change
      tags:
        - Devops Platform
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                disassociate_ids:
                  type: array
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
                example: true
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
      operationId: disassociate_pullrequests
      description: To disassociate pullrequests from a Change
  '/api/v2/changes/{id}/work-items':
    get:
      summary: Get list of workitems associated with a Change
      tags:
        - Devops Platform
      parameters:
        - $ref: '#/components/parameters/PaginationPageParam'
        - $ref: '#/components/parameters/PaginationPerPageParam'
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workitems'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
      operationId: list-workitem
      description: To list Workitems associated with a Change
  '/api/v2/changes/{id}/work-items/associate':
    post:
      summary: To associate workitems to change
      tags:
        - Devops Platform
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                application_type:
                  type: string
                connection_id:
                  type: integer
                work_item_urls:
                  type: array
                  items:
                    type: string
                application_config:
                  type: object
                  properties:
                    org_name:
                      type: string
                    project:
                      type: string
                    repo:
                      type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
                example: true
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
      operationId: associate_workitems
      description: To associate workitems to a Change
  '/api/v2/changes/{id}/work-items/disassociate':
    post:
      summary: To disassociate workitems from a change
      tags:
        - Devops Platform
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                disassociate_ids:
                  type: array
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
                example: true
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
      operationId: disassociate_workitems
      description: To disassociate workitems from a change
  /api/v2/features/advanced-itam:
    get:
      summary: Check the advanced itam feature or flag presence
      tags:
        - Feature
      operationId: get advanced item feature presence
      description: Get to know whether the advanced itam feature is present or not
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  presence:
                    type: boolean
                    description: Denotes if the advanced itam is enabled/disabled
                    default: false
                    example: false
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/v2/tickets/{ticket_id}/status/pages/{status_page_id}/incidents':
    parameters:
      - schema:
          type: integer
          example: 1
          format: int64
        name: ticket_id
        in: path
        required: true
        description: ID of the Freshservice incident
      - schema:
          type: integer
          example: 1
          format: int64
        name: status_page_id
        in: path
        required: true
        description: ID of the status page
    post:
      summary: Create a status page incident
      tags:
        - Status page
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  incident:
                    $ref: '#/components/schemas/StatusPageIncident'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          description: Unauthorized
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      operationId: create-status-page-incident
      description: Create a status page incident
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusPageIncident'
  '/api/v2/tickets/{ticket_id}/status/pages/{status_page_id}/incidents/{id}':
    parameters:
      - schema:
          type: integer
          format: int64
          example: 1
        name: ticket_id
        in: path
        required: true
        description: ID of the Freshservice incident
      - schema:
          type: integer
          format: int64
          example: 1
        name: status_page_id
        in: path
        required: true
        description: ID of the status page
      - schema:
          type: integer
          format: int64
          example: 1
        name: id
        in: path
        required: true
        description: ID of the status page incident
    get:
      summary: Get a status page incident
      tags:
        - Status page
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  incident:
                    $ref: '#/components/schemas/StatusPageIncident'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-status-page-incident
      description: Get a status page incident
    put:
      summary: Edit a status page incident
      tags:
        - Status page
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  incident:
                    $ref: '#/components/schemas/StatusPageIncident'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      operationId: edit-status-page-incident-put
      description: Edit a status page incident
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusPageIncident'
      parameters: []
    patch:
      summary: Edit a status page incident
      tags:
        - Status page
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  incident:
                    $ref: '#/components/schemas/StatusPageIncident'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusPageIncident'
      operationId: edit-status-page-incident-patch
      description: Edit a status page incident
    delete:
      summary: Delete a status page incident
      tags:
        - Status page
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: delete-status-page-incident
      description: Delete a status page incident
  '/api/v2/maintenance-windows/{maintenance_window_id}/status/pages/{status_page_id}/maintenances':
    parameters:
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: maintenance_window_id
        in: path
        required: true
        description: ID of the maintenance window
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: status_page_id
        in: path
        required: true
        description: ID of the status page
    post:
      summary: Create a status page maintenance from a maintenance window
      tags:
        - Status page
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  maintenance:
                    $ref: '#/components/schemas/StatusPageMaintenance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Forbidden
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      operationId: create-status-page-maintenance-maintenance-window
      description: Create a status page maintenance from a maintenance window
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusPageMaintenance'
  '/api/v2/maintenance-windows/{maintenance_window_id}/status/pages/{status_page_id}/maintenances/{id}':
    parameters:
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: maintenance_window_id
        in: path
        required: true
        description: ID of the maintenance window
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: status_page_id
        in: path
        required: true
        description: ID of the status page
      - schema:
          type: integer
          format: int64
          minimum: 1
          example: 1
        name: id
        in: path
        required: true
        description: ID of the status page maintenance
    put:
      summary: Edit a maintenance from a maintenance window
      tags:
        - Status page
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  maintenance:
                    $ref: '#/components/schemas/StatusPageMaintenance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      operationId: edit-status-page-maintenance-maintenance-window-put
      description: Edit a maintenance from a maintenance window
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusPageMaintenance'
    get:
      summary: Get a maintenance from a maintenance window
      tags:
        - Status page
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  maintenance:
                    $ref: '#/components/schemas/StatusPageMaintenance'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Forbidden
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-status-page-maintenance-maintenance-window
      description: Get a maintenance from a maintenance window
    delete:
      summary: Delete a maintenance from a maintenance window
      tags:
        - Status page
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: delete-status-page-maintenance-maintenance-window
      description: Delete a maintenance from a maintenance window
    patch:
      summary: Edit a maintenance from a maintenance window
      tags:
        - Status page
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  maintenance:
                    $ref: '#/components/schemas/StatusPageMaintenance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      operationId: edit-status-page-maintenance-maintenance-window-patch
      description: Edit a maintenance from a maintenance window
  '/api/v2/changes/{change_id}/status/pages/{status_page_id}/maintenances':
    parameters:
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: change_id
        in: path
        required: true
        description: ID of the change
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: status_page_id
        in: path
        required: true
        description: ID of the status page
    post:
      summary: Create a status page maintenance from a change
      tags:
        - Status page
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  maintenance:
                    $ref: '#/components/schemas/StatusPageMaintenance'
        '400':
          description: Bad Request
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: create-status-page-maintenance-change
      description: Create a status page maintenance from a change
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusPageMaintenance'
  '/api/v2/changes/{change_id}/status/pages/{status_page_id}/maintenances/{id}':
    parameters:
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: change_id
        in: path
        required: true
        description: ID of the change
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: status_page_id
        in: path
        required: true
        description: ID of the status page
      - schema:
          type: integer
          format: int64
          minimum: 1
          example: 1
        name: id
        in: path
        required: true
        description: ID of the status page maintenance
    put:
      summary: Edit a maintenance from a change
      tags:
        - Status page
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  maintenance:
                    $ref: '#/components/schemas/StatusPageMaintenance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      operationId: edit-status-page-maintenance-change-put
      description: Edit a maintenance from a change
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusPageMaintenance'
    get:
      summary: Get a maintenance from a change
      tags:
        - Status page
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  maintenance:
                    $ref: '#/components/schemas/StatusPageMaintenance'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Forbidden
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-status-page-maintenance-change
      description: Get a maintenance from a change
    delete:
      summary: Delete a maintenance from a change
      tags:
        - Status page
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: delete-status-page-maintenance-change
      description: Delete a maintenance from a change
    patch:
      summary: Edit a maintenance from a change
      tags:
        - Status page
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  maintenance:
                    $ref: '#/components/schemas/StatusPageMaintenance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      operationId: edit-status-page-maintenance-change-patch
      description: Edit a maintenance from a change
  '/api/v2/tickets/{ticket_id}/status/pages/{status_page_id}/incidents/{incident_id}/updates':
    parameters:
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: ticket_id
        in: path
        required: true
        description: ID of the Freshservice ticket
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: status_page_id
        in: path
        required: true
        description: ID of the status page
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: incident_id
        in: path
        required: true
        description: ID of the status page incident
    get:
      summary: Get all updates of a status page incident
      tags:
        - Status page
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  incident_updates:
                    type: array
                    items:
                      $ref: '#/components/schemas/DisruptionUpdate'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-all-incident-updates
      description: Get all updates of a status page incident
      parameters:
        - $ref: '#/components/parameters/PaginationPageParam'
        - $ref: '#/components/parameters/PaginationPerPageParam'
    post:
      summary: Post an update to a status page incident
      tags:
        - Status page
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  incident_update:
                    $ref: '#/components/schemas/DisruptionUpdate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      operationId: post-incident-updates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisruptionUpdate'
      description: Post an update to a status page incident
  '/api/v2/tickets/{ticket_id}/status/pages/{status_page_id}/incidents/{incident_id}/updates/{id}':
    parameters:
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: ticket_id
        in: path
        required: true
        description: ID of the Freshservice ticket
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: status_page_id
        in: path
        required: true
        description: ID of the status page
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: incident_id
        in: path
        required: true
        description: ID of the status page incident
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: id
        in: path
        required: true
        description: ID of the incident update
    put:
      summary: Edit an update posted to a status page incident
      operationId: edit-an-incident-update-put
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  incident_update:
                    $ref: '#/components/schemas/DisruptionUpdate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      tags:
        - Status page
      description: Edit an update posted to a status page incident
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisruptionUpdate'
    patch:
      summary: Edit an update posted to a status page incident
      operationId: edit-an-incident-update-patch
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  incident_update:
                    $ref: '#/components/schemas/DisruptionUpdate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      tags:
        - Status page
      description: Edit an update posted to a status page incident
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisruptionUpdate'
    delete:
      summary: Delete an update posted to a status page incident
      operationId: delete-incident-update
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Status page
      description: Delete an update posted to a status page incident
  '/api/v2/maintenance-windows/{maintenance_window_id}/status/pages/{status_page_id}/maintenances/{maintenance_id}/updates':
    parameters:
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: maintenance_window_id
        in: path
        required: true
        description: ID of the Freshservice maintenance window
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: status_page_id
        in: path
        required: true
        description: ID of the status page
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: maintenance_id
        in: path
        required: true
        description: ID of the status page maintenance
    get:
      summary: Get all updates of a status page maintenance from a maintenance window
      tags:
        - Status page
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  maintenance_updates:
                    type: array
                    items:
                      $ref: '#/components/schemas/DisruptionUpdate'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-all-maintenance-updates-maintenance-window
      description: Get all updates of a status page maintenance
      parameters:
        - $ref: '#/components/parameters/PaginationPageParam'
        - $ref: '#/components/parameters/PaginationPerPageParam'
    post:
      summary: Post an update to a status page maintenance from a maintenance window
      tags:
        - Status page
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  maintenance_update:
                    $ref: '#/components/schemas/DisruptionUpdate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      operationId: post-maintenance-updates-maintenance-window
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisruptionUpdate'
      description: Post an update to a status page maintenance from a maintenance window
  '/api/v2/maintenance-windows/{maintenance_window_id}/status/pages/{status_page_id}/maintenances/{maintenance_id}/updates/{id}':
    parameters:
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: maintenance_window_id
        in: path
        required: true
        description: ID of the Freshservice maintenance window
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: status_page_id
        in: path
        required: true
        description: ID of the status page
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: maintenance_id
        in: path
        required: true
        description: ID of the status page maintenance
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: id
        in: path
        required: true
        description: ID of the maintenance update
    put:
      summary: Edit an update posted to a status page maintenance from a maintenance window
      operationId: edit-an-maintenance-update-put-maintenance-window
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  maintenance_update:
                    $ref: '#/components/schemas/DisruptionUpdate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      tags:
        - Status page
      description: Edit an update posted to a status page maintenance from a maintenance window
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisruptionUpdate'
    patch:
      summary: Edit an update posted to a status page maintenance from a maintenance window
      operationId: edit-an-maintenance-update-patch-maintenance-window
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  maintenance_update:
                    $ref: '#/components/schemas/DisruptionUpdate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      tags:
        - Status page
      description: Edit an update posted to a status page maintenance from a maintenance window
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisruptionUpdate'
    delete:
      summary: Delete an update posted to a status page maintenance from a maintenance window
      operationId: delete-maintenance-update-maintenance-window
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Status page
      description: Delete an update posted to a status page maintenance from a maintenance window
  '/api/v2/changes/{change_id}/status/pages/{status_page_id}/maintenances/{maintenance_id}/updates':
    parameters:
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: change_id
        in: path
        required: true
        description: ID of the Freshservice change
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: status_page_id
        in: path
        required: true
        description: ID of the status page
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: maintenance_id
        in: path
        required: true
        description: ID of the status page maintenance
    get:
      summary: Get all updates of a status page maintenance from a change
      tags:
        - Status page
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  maintenance_updates:
                    type: array
                    items:
                      $ref: '#/components/schemas/DisruptionUpdate'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-all-maintenance-updates-change
      description: Get all updates of a status page maintenance from a change
      parameters:
        - $ref: '#/components/parameters/PaginationPageParam'
        - $ref: '#/components/parameters/PaginationPerPageParam'
    post:
      summary: Post an update to a status page maintenance from a change
      tags:
        - Status page
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  maintenance_update:
                    $ref: '#/components/schemas/DisruptionUpdate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      operationId: post-maintenance-updates-change
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisruptionUpdate'
      description: Post an update to a status page maintenance from a change
  '/api/v2/changes/{change_id}/status/pages/{status_page_id}/maintenances/{maintenance_id}/updates/{id}':
    parameters:
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: change_id
        in: path
        required: true
        description: ID of the Freshservice change
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: status_page_id
        in: path
        required: true
        description: ID of the status page
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: maintenance_id
        in: path
        required: true
        description: ID of the status page maintenance
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: id
        in: path
        required: true
        description: ID of the maintenance update
    put:
      summary: Edit an update posted to a status page maintenance from a change
      operationId: edit-an-maintenance-update-put-change
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  maintenance_update:
                    $ref: '#/components/schemas/DisruptionUpdate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      tags:
        - Status page
      description: Edit an update posted to a status page maintenance from a change
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisruptionUpdate'
    patch:
      summary: Edit an update posted to a status page maintenance from a change
      operationId: edit-an-maintenance-update-patch-change
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  maintenance_update:
                    $ref: '#/components/schemas/DisruptionUpdate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      tags:
        - Status page
      description: Edit an update posted to a status page maintenance from a change
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisruptionUpdate'
    delete:
      summary: Delete an update posted to a status page maintenance from a change
      operationId: delete-maintenance-update-change
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Status page
      description: Delete an update posted to a status page maintenance from a change
  '/api/v2/status/pages/{status_page_id}/service-components':
    parameters:
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: status_page_id
        in: path
        required: true
        description: ID of the status page
    get:
      summary: Get all service components of a status page
      tags:
        - Status page
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  service_components:
                    type: array
                    items:
                      $ref: '#/components/schemas/ServiceComponent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      operationId: get-all-service-components
      description: Get all service components of a status page
  '/api/v2/status/pages/{status_page_id}/service-components/{id}':
    parameters:
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: status_page_id
        in: path
        required: true
        description: ID of the status page
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: id
        in: path
        required: true
        description: ID of the service component
    get:
      summary: Get a service component of a status page
      tags:
        - Status page
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  service_component:
                    $ref: '#/components/schemas/ServiceComponent'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-service-component
      description: Get a service component of a status page
  /api/v2/status/pages:
    get:
      summary: Get all status pages in an account
      tags:
        - Status page
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status_pages:
                    type: array
                    items:
                      $ref: '#/components/schemas/StatusPage'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      operationId: get-all-status-pages
      description: Get all status pages in an account
      parameters:
        - schema:
            type: integer
            format: int64
            example: 2
            minimum: 1
          in: query
          name: workspace_id
          description: ID of the workspace
        - $ref: '#/components/parameters/PaginationPageParam'
        - $ref: '#/components/parameters/PaginationPerPageParam'
  '/api/v2/status/pages/{id}':
    parameters:
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: id
        in: path
        required: true
        description: ID of the status page
    get:
      summary: Get a status page
      tags:
        - Status page
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status_page:
                    $ref: '#/components/schemas/StatusPage'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-api-v2-status-pages-id
      description: Get a status page
  '/api/v2/status/pages/{status_page_id}/incidents':
    parameters:
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: status_page_id
        in: path
        required: true
        description: ID of the status page
    get:
      summary: Get all incidents of a status page
      tags:
        - Status page
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  incidents:
                    type: array
                    items:
                      $ref: '#/components/schemas/StatusPageIncident'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Not Found
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      operationId: get-all-incidents
      description: Get all incidents of a status page
      parameters:
        - schema:
            type: string
            example: 'status:2'
          in: query
          name: query
          description: 'Conditions to filter incidents in a status page. Supported filters are type, time range, status, impacted service'
        - $ref: '#/components/parameters/PaginationPageParam'
        - $ref: '#/components/parameters/PaginationPerPageParam'
  '/api/v2/status/pages/{status_page_id}/maintenances':
    parameters:
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: status_page_id
        in: path
        required: true
        description: ID of the status page
    get:
      summary: Get all maintenances of a status page
      tags:
        - Status page
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  maintenances:
                    type: array
                    items:
                      $ref: '#/components/schemas/StatusPageMaintenance'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Not Found
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      operationId: get-all-maintenances
      description: Get all maintenances of a status page
      parameters:
        - schema:
            type: string
            example: 'status:0'
          in: query
          name: query
          description: 'Conditions to filter maintenances in a status page. Supported filters are type, time range, status, impacted service'
        - $ref: '#/components/parameters/PaginationPageParam'
        - $ref: '#/components/parameters/PaginationPerPageParam'
  '/api/v2/status/pages/{status_page_id}/incidents/statuses':
    parameters:
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: status_page_id
        in: path
        required: true
        description: ID of the status page
    get:
      summary: Get all incident statuses of a status page
      tags:
        - Status page
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  incident_statuses:
                    type: array
                    items:
                      $ref: '#/components/schemas/DisruptionStatus'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-all-incident-statuses
      description: Get all incident statuses of a status page
  '/api/v2/status/pages/{status_page_id}/maintenances/statuses':
    parameters:
      - schema:
          type: integer
          format: int64
          example: 1
          minimum: 1
        name: status_page_id
        in: path
        required: true
        description: ID of the status page
    get:
      summary: Get all maintenance statuses of a status page
      tags:
        - Status page
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  maintenance_statuses:
                    type: array
                    items:
                      $ref: '#/components/schemas/DisruptionStatus'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      operationId: get-all-maintenance-statuses
      description: Get all maintenance statuses of a status page
components:
  securitySchemes:
    Personal API Key:
      type: http
      scheme: basic
      description: 'Use your personal API key to authenticate the request. If you use the API key, there is no need for a password. You can use any set of characters as a dummy password.'
  parameters:
    PaginationPageParam:
      name: page
      in: query
      description: The page number to retrieve.
      schema:
        type: integer
        format: int32
        minimum: 1
        default: 1
    PaginationPerPageParam:
      name: per_page
      in: query
      description: The number of records to retrieve in each page of a paginated list.
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        default: 30
    SearchParam:
      name: q
      in: query
      description: Query param for search
      schema:
        type: string
    WorkspaceIdParam:
      name: workspace_id
      in: query
      description: Retrieves resources from a workspace.
      schema:
        type: integer
        format: int32
        minimum: 0
  schemas:
    Account:
      type: object
      title: Cloned Instance
      description: Cloned Instance payload
      properties:
        id:
          type: integer
          example: 93583
        name:
          type: string
          example: esmlocal
        description:
          type: string
          example: Clone instance created is DEV
        full_domain:
          type: string
          example: esmlocal@freshservice.com
        cname:
          type: string
          example: esmlocal
    ClonedInstance:
      type: object
      title: Cloned Instance
      description: Cloned Instance payload
      properties:
        id:
          type: integer
          example: 93583
        name:
          type: string
          example: DEV
        description:
          type: string
          example: Clone instance created is DEV
        clone_type:
          type: string
          enum:
            - uat
            - test_instance
          example: uat
        status:
          type: string
          enum:
            - in_progress
            - completed
            - active
          example: in_progress
        source_account_id:
          type: integer
          example: 13583
        created_at:
          type: string
          format: date-time
          example: '2023-05-08T18:30:00.000Z'
        last_sync_at:
          type: string
          format: date-time
          example: '2023-05-08T18:30:00.000Z'
        last_sync_by:
          type: integer
          example: 93581
        created_by:
          type: integer
          example: 93581
        updated_by:
          type: integer
          example: 93581
        cloned_account:
          $ref: '#/components/schemas/Account'
    ConfigSet:
      type: object
      title: Config Set
      description: Config Set payload
      properties:
        name:
          type: string
          example: Workflow Config Set
        description:
          type: string
          example: Workflow Config Set for export import
        status:
          type: string
          enum:
            - not_initiated
            - initiated
            - in_progress
            - completed
            - failed
            - partially_failed
          example: in_progress
        operation_type:
          type: string
          enum:
            - export_set
            - import_set
          example: export_set
        operating_account_id:
          type: integer
          example: 17809
        created_at:
          type: string
          format: date-time
          example: '2023-05-08T18:30:00.000Z'
        updated_at:
          type: string
          format: date-time
          example: '2023-05-08T18:30:00.000Z'
        created_by:
          type: integer
          example: 89
        updated_by:
          type: integer
          example: 80
        operating_account:
          $ref: '#/components/schemas/Account'
        config_set_items:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/ConfigSetItem'
    ConfigSetItem:
      type: object
      title: Config Set Item
      description: Config Set Item payload
      properties:
        title:
          type: string
          example: Approval ticket PR
        entity_id:
          type: string
          example: '2123434'
        entity_api_name:
          type: string
          example: approval_ticket_pr
        entity_type:
          type: string
          example: Event Based Ticket Workflow
        workspace_api_name:
          type: string
          example: global
        operating_account_id:
          type: integer
          example: 17809
        action_type:
          type: string
          enum:
            - addition
            - updation
            - deletion
          example: addition
        dependency:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
          example: '2023-05-08T18:30:00.000Z'
        updated_at:
          type: string
          format: date-time
          example: '2023-05-08T18:30:00.000Z'
        created_by:
          type: integer
          example: 89
        updated_by:
          type: integer
          example: 80
    ConfigSetItemMeta:
      type: object
      title: Config Set Item Meta
      description: Config Set Item Meta payload
      properties:
        module_type:
          type: string
          example: TicketEventWorkflowConfiguration
        count:
          type: integer
          example: 1
        module_group:
          type: string
          example: EventWorkflow
    ImSyncHistory:
      type: object
      title: IM Sync History
      description: Configuration Types Structurea
      properties:
        id:
          type: integer
          example: 234
        name:
          type: string
          example: Workflow Config Set
        updated_at:
          type: string
          example: Tickets
        synced_by:
          type: integer
          example: 112
        source_instance_name:
          type: string
          example: esmaccount
    ConfigurationType:
      type: object
      title: Configuration Types
      description: Configuration Types Structurea
      properties:
        module_type:
          type: string
          example: TicketEventWorkflowConfiguration
        module_group:
          type: string
          example: EventWorkflows
        module_label:
          type: string
          example: Tickets
        group_label:
          type: string
          example: Event Based Workflows
    InstanceConfiguration:
      type: object
      title: Im Configuration
      description: Im Configuration payload
      properties:
        title:
          type: string
          example: Approval ticket PR
        entity_id:
          type: string
          example: '2123434'
        entity_api_name:
          type: string
          example: approval_ticket_pr
        entity_type:
          type: string
          example: Event Based Ticket Workflow
        workspace_api_name:
          type: string
          example: global
        created_at:
          type: string
          format: date-time
          example: '2023-05-08T18:30:00.000Z'
        updated_at:
          type: string
          format: date-time
          example: '2023-05-08T18:30:00.000Z'
        created_by:
          type: integer
          example: 89
        updated_by:
          type: integer
          example: 80
    MoveWorkspace:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        workspace_id:
          type: integer
          format: int64
          example: 1
      example:
        id: 1
        workspace_id: 1
    MoveProblem:
      type: object
      title: MoveProblem
      x-tags:
        - Problems
      additionalProperties: false
      properties:
        workspace_id:
          type: integer
          format: int64
          example: 1
        group_id:
          description: ID of the group to which the problem has been assigned.
          type: number
          nullable: true
          example: 14000239432
        owner_id:
          description: ID of the agent to whom the problem has been assigned.
          type: number
          nullable: true
          example: 14000239432
      required:
        - workspace_id
    problem_form_field:
      title: ProblemField
      type: object
      properties:
        id:
          type: integer
          format: int64
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
        label:
          type: string
        description:
          type: string
        field_type:
          type: string
        required:
          type: boolean
        required_for_closure:
          type: boolean
        position:
          type: integer
        default_field:
          type: boolean
        choices:
          type: array
          items:
            title: Choice
            type: object
            properties:
              id:
                type: integer
                format: int64
              value:
                type: string
        nested_fields:
          type: array
          items:
            title: NestedField
            type: object
            properties:
              id:
                type: integer
                format: int64
              display_id:
                type: integer
              value:
                type: string
              nested_options:
                type: array
                items:
                  $ref: '#/components/schemas/problem_form_field/properties/nested_fields/items'
        workspace_id:
          type: integer
          format: int64
    UserFieldGroup:
      title: User Field Groups
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 2
          readOnly: true
        default:
          type: boolean
          description: Signifies whether the field group is default
          default: false
          example: true
        visibility:
          type: integer
          readOnly: true
          nullable: false
          enum:
            - 1
            - 2
          example: 2
        view_access_role_ids:
          type: array
          description: Will be consisting of role ids of view permissions
          items:
            type: integer
          example:
            - 1
            - 2
        edit_access_role_ids:
          type: array
          description: Will be consisting of role ids of edit permissions
          items:
            type: integer
          example:
            - 1
            - 2
            - 3
      required:
        - id
        - label
        - visibility
    role_assignment:
      type: object
      properties:
        role_id:
          type: integer
          format: int64
          description: Unique identifier of the role assigned
          example: 14000234324
        assignment_scope:
          type: string
          description: 'The scope in which the agent can use the permissions granted by this role. Possible values are entire_helpdesk (all plans), member_groups (Blossom, Garden, and Estate), specified_groups (Forest only), and assigned_items (all plans)'
          enum:
            - entire_helpdesk
            - member_groups
            - specified_groups
            - assigned_items
          example: entire_helpdesk
        groups:
          type: array
          items:
            type: integer
            format: int64
          description: 'Groups in which the permissions granted by the role applies. Returns an array of group identifiers when the assignment_scope is specified_groups, and null otherwise.'
          example:
            - 1400034334
            - 3523453453
    Department:
      description: Department
      type: object
      title: Department
      x-tags:
        - Departments
      properties:
        id:
          type: integer
          description: Unique identifier of the department
          format: int64
          example: 2
          readOnly: true
        name:
          type: string
          minLength: 1
          maxLength: 255
          description: Name of the department
          example: HR
        description:
          type: string
          nullable: true
          maxLength: 65535
          description: Description about the department
          example: HR team
        prime_user_id:
          type: integer
          nullable: true
          description: Unique identifier of the agent or requester who serves as the prime user of the department. Applicable to ITSM only.
          example: 3458
          format: int64
          minimum: 1
        head_user_id:
          type: integer
          nullable: true
          description: Unique identifier of the agent or requester who serves as the head of the department. Applicable to ITSM only.
          example: 234
          format: int64
          minimum: 1
        domains:
          type: array
          description: Array of Email domains associated with the department. Applicable to ITSM only.
          uniqueItems: true
          example:
            - creatures.ministryofmagic.gov
            - functions.ministryofmagic.gov
          items:
            type: string
        custom_fields:
          description: Custom fields that are specific to the department.
          type: object
          example:
            location: Level 3
        created_at:
          type: string
          format: date-time
          example: '2015-01-08T07:53:41Z'
          readOnly: true
        updated_at:
          type: string
          format: date-time
          example: '2015-01-08T07:53:41Z'
          readOnly: true
        workspace_id:
          type: integer
          format: int64
          minimum: 1
          example: 1
          description: ID of the workspace to which the department is mapped. Applicable to MSP only.
      required:
        - id
        - name
    Requester:
      title: Requester
      type: object
      x-tags:
        - Requesters
      description: Requester
      properties:
        id:
          type: integer
          description: Unique identifier of the requester
          format: int64
          minimum: 1
          readOnly: true
          example: 4801376812
        name:
          type: string
          description: Name of the requester
          minLength: 1
          readOnly: true
          example: Sample Test
        active:
          type: boolean
          description: Status of the requester
          readOnly: true
          example: true
        email:
          type: string
          format: email
          description: Email address of the requester
          minLength: 1
          example: sample@freshservice.com
        job_title:
          type: string
          nullable: true
          maxLength: 255
          description: Job title of the requester
          example: Manager
        language:
          type: string
          description: Language of the requester
          enum:
            - en
            - uk
            - es-LA
            - cs
            - th
            - ca
            - pt-BR
            - es
            - ko
            - hu
            - da
            - fi
            - ru-RU
            - id
            - ro
            - sk
            - he
            - hr
            - et
            - pt-PT
            - sl
            - de
            - it
            - pl
            - ja-JP
            - cy-GB
            - nb-NO
            - fr
            - zh-TW
            - ar
            - tr
            - sv-SE
            - vi
            - lv-LV
            - zh-CN
            - nl
          minLength: 2
          maxLength: 4
          example: en
        locale:
          type: string
          description: Language of the user in freshid
          example: en-US
        mobile:
          type: integer
          description: Mobile number of the requester
          format: int64
          minimum: 1
          readOnly: true
          example: 9876543210
        phone:
          type: integer
          description: Phone number of the requester
          format: int64
          minimum: 1
          readOnly: true
          example: 9183732439
        time_zone:
          type: string
          description: Time zone of the requester
          minLength: 3
          enum:
            - American Samoa
            - International Date Line West
            - Midway Island
            - Hawaii
            - Alaska
            - Pacific Time (US & Canada)
            - Tijuana
            - Arizona
            - Chihuahua
            - Mazatlan
            - Mountain Time (US & Canada)
            - Central America
            - Central Time (US & Canada)
            - Guadalajara
            - Mexico City
            - Monterrey
            - Saskatchewan
            - Bogota
            - Eastern Time (US & Canada)
            - Indiana (East)
            - Lima
            - Quito
            - Atlantic Time (Canada)
            - Caracas
            - Georgetown
            - La Paz
            - Santiago
            - Newfoundland
            - Brasilia
            - Buenos Aires
            - Greenland
            - Montevideo
            - Mid-Atlantic
            - Azores
            - Cape Verde Is.
            - Casablanca
            - Dublin
            - Edinburgh
            - Lisbon
            - London
            - Monrovia
            - UTC
            - Amsterdam
            - Belgrade
            - Berlin
            - Bern
            - Bratislava
            - Brussels
            - Budapest
            - Copenhagen
            - Ljubljana
            - Madrid
            - Paris
            - Prague
            - Rome
            - Sarajevo
            - Skopje
            - Stockholm
            - Vienna
            - Warsaw
            - West Central Africa
            - Zagreb
            - Athens
            - Bucharest
            - Cairo
            - Harare
            - Helsinki
            - Jerusalem
            - Kaliningrad
            - Kyiv
            - Pretoria
            - Riga
            - Sofia
            - Tallinn
            - Vilnius
            - Baghdad
            - Istanbul
            - Kuwait
            - Minsk
            - Moscow
            - Nairobi
            - Riyadh
            - St. Petersburg
            - Volgograd
            - Tehran
            - Abu Dhabi
            - Baku
            - Muscat
            - Samara
            - Tbilisi
            - Yerevan
            - Kabul
            - Ekaterinburg
            - Islamabad
            - Karachi
            - Tashkent
            - Chennai
            - Kolkata
            - Mumbai
            - New Delhi
            - Sri Jayawardenepura
            - Kathmandu
            - Almaty
            - Astana
            - Dhaka
            - Urumqi
            - Rangoon
            - Bangkok
            - Hanoi
            - Jakarta
            - Krasnoyarsk
            - Novosibirsk
            - Beijing
            - Chongqing
            - Hong Kong
            - Irkutsk
            - Kuala Lumpur
            - Perth
            - Singapore
            - Taipei
            - Ulaanbaatar
            - Osaka
            - Sapporo
            - Seoul
            - Tokyo
            - Yakutsk
            - Adelaide
            - Darwin
            - Brisbane
            - Canberra
            - Guam
            - Hobart
            - Melbourne
            - Port Moresby
            - Sydney
            - Vladivostok
            - Magadan
            - New Caledonia
            - Solomon Is.
            - Srednekolymsk
            - Auckland
            - Fiji
            - Kamchatka
            - Marshall Is.
            - Wellington
            - Chatham Is.
            - Nuku'alofa
            - Samoa
            - Tokelau Is.
          example: Chennai
        time_format:
          type: string
          description: |
            Time format for the agent
          enum:
            - 12h
            - 24h
          example: 12h
        avatar:
          type: string
          description: Avatar of the requester
          format: uri
          minLength: 10
          readOnly: true
          example: 'http://placehold.it/120x120&text=avatar'
        avatar_url:
          type: string
          description: URL of the avatar of the requester
          nullable: true
          format: uri
          minLength: 10
          readOnly: true
          example: 'https://freshidaccount.myfreshworks.com/api/v2/users/362550787016472284/image?variant=SMALL'
        profile_image:
          type: string
          description: Profile image of the requester
          nullable: true
          format: uri
          minLength: 10
          readOnly: true
          example: 'https://freshidaccount.myfreshworks.com/api/v2/users/362550787016472284/image?variant=SMALL'
        first_name:
          type: string
          minLength: 1
          maxLength: 255
          description: First Name of the requester
          example: Andrea
        last_name:
          type: string
          nullable: true
          maxLength: 255
          description: Last Name of the requester
          example: Smith
        primary_email:
          type: string
          format: email
          nullable: true
          maxLength: 255
          description: Primary email address of the requester
          example: andrea@freshservice.com
        secondary_emails:
          type: array
          items:
            type: string
            maxLength: 255
            format: email
          description: Secondary email addresses of the requester
          example:
            - andrea@freshservice.com
            - john.doe@freshservice.com
        work_phone_number:
          type: string
          nullable: true
          maxLength: 255
          description: Work phone number of the requester
          example: +1-567-3492
        mobile_phone_number:
          type: string
          nullable: true
          maxLength: 255
          description: Mobile phone number of the requester
          example: +1-567-3492
        department_ids:
          type: array
          items:
            type: integer
            format: int64
          description: Unique IDs of the departments associated with the requester
          example:
            - 1400043345
            - 1400046983
        can_see_all_tickets_from_associated_departments:
          type: boolean
          description: 'Set to true if the requester must be allowed to view tickets filed by other members of the department, and false otherwise'
          example: true
        reporting_manager_id:
          type: integer
          nullable: true
          format: int64
          description: Unique identifier of the requester's reporting manager
          example: 14000234324
        address:
          type: string
          nullable: true
          maxLength: 255
          description: Address of the requester
          example: '2968 D Street, Bloomfield, Michigan'
        location_id:
          type: integer
          nullable: true
          format: int64
          description: Unique identifier of the location associated with the requester
          example: 14000234324
        background_information:
          type: string
          nullable: true
          maxLength: 65535
          description: Description of the requester
          example: Done
        has_logged_in:
          type: boolean
          description: 'true if the user has logged in to Freshservice at least once, and false otherwise.'
          readOnly: true
          example: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp at which the requester was created
          example: '2021-11-24T11:30:00Z'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp at which the requester was last modified
          example: '2021-11-24T11:30:00Z'
        is_agent:
          type: boolean
          description: 'Set to true if the user is an agent, false if the user is a requester'
          readOnly: true
          example: true
        helpdesk_agent:
          type: boolean
          description: 'Set to true if the user is an agent, false if the user is a requester'
          readOnly: true
          example: true
        external_id:
          type: string
          nullable: true
          maxLength: 255
          readOnly: true
          description: Unique external id of the requester
          example: abdweo2322k
        belongs_to_workspace_ids:
          type: array
          items:
            type: integer
            format: int32
          description: Unique IDs of the workspaces that the requester belongs to. Applicable to MSP only.
          example:
            - 4
            - 5
        can_see_all_tickets_from_associated_workspaces:
          type: boolean
          description: Returns true if the requester can see all tickets from associated workspaces. Applicable to MSP only.
          example: true
        can_see_all_tickets_from_associated_workspace_ids:
          type: array
          items:
            type: integer
            format: int32
          description: Unique IDs of the workspaces that the requester can see tickets from. Applicable to MSP only.
          example:
            - 4
        custom_fields:
          type: object
          description: Custom fields that are specific to the requester.
          example:
            manager: andrea@freshservice.com
            department: IT
      example:
        id: 4801376812
        name: Sample Test
        active: true
        email: sample@freshservice.com
        job_title: Manager
        language: en
        mobile: 9183732439
        phone: 9183732439
        time_zone: Chennai
        time_format: 12h
        avatar: 'http://placehold.it/120x120&text=avatar'
        avatar_url: 'https://freshidaccount.myfreshworks.com/api/v2/users/362550787016472284/image?variant=SMALL'
        first_name: Andrea
        last_name: Smith
        primary_email: sample@freshservice.com
        secondary_emails:
          - andrea@freshservice.com
          - john.doe@freshservice.com
        work_phone_number: +1-567-3492
        mobile_phone_number: +1-567-3492
        department_ids:
          - 1400043345
          - 1400046983
        can_see_all_tickets_from_associated_departments: true
        reporting_manager_id: 31231232
        address: '2968 D Street, Bloomfield, Michigan'
        location_id: 234124213
        background_information: Done
        has_logged_in: true
        created_at: '2021-11-24T11:30:00Z'
        updated_at: '2021-11-24T11:30:00Z'
        is_agent: true
        helpdesk_agent: true
        external_id: abdweo2322k
        custom_fields:
          manager: andrea@freshservice.com
          department: IT
    RequesterGroup:
      title: Requester Groups
      description: Requester Groups
      type: object
      x-tags:
        - Requester Groups
      properties:
        id:
          type: integer
          description: Unique identifier of the requester group
          format: int64
          minimum: 1
          example: 1
          readOnly: true
        name:
          type: string
          description: Name of the requester group
          minLength: 1
          maxLength: 255
          example: Branch Managers
        description:
          type: string
          nullable: true
          maxLength: 65535
          description: Description about the requester group
          example: Requester group for branch managers across all locations
        type:
          type: string
          readOnly: true
          description: Description of the requester group.
          enum:
            - manual
            - rule_based
          example: rule_based
        workspace_id:
          type: integer
          format: int64
          minimum: 1
          example: 1
          description: ID of the workspace to which the requester group is mapped. Applicable to MSP only.
      required:
        - id
        - name
        - description
        - type
    Workspace:
      title: Workspace
      description: Workspace schema attributes. Applicable to ITSM only.
      type: object
      x-tags:
        - Workspaces
      properties:
        id:
          type: number
          description: Unique identifier of the workspace
          format: int64
          minimum: 1
          example: 12
          readOnly: true
        name:
          type: string
          description: Name of the workspace
          minLength: 1
          example: HR Team
        description:
          type: string
          minLength: 1
          example: Best for managing HR cases including employee onboarding and offboarding
        primary:
          type: boolean
          description: Indicates if the workspace is the primary workspace
          example: true
        preferences:
          type: object
          description: Metadata about the workspace
          example:
            tempflag: true
        state:
          type: string
          description: State of the workspace
          example: active
          enum:
            - active
            - draft
            - archived
        logo:
          type: string
          minLength: 1
          format: uri
          description: Logo of the workspace
          example: 'http://localhost.freshservice-dev.com:3000/assets/logos/misc/workspace_logo.ico'
        created_at:
          type: string
          minLength: 1
          format: date-time
          readOnly: true
          description: Date and time when the workspace was created
          example: '2022-05-23T19:36:47+05:30'
        updated_at:
          type: string
          minLength: 1
          format: date-time
          readOnly: true
          description: Date and time when the workspace was updated
          example: '2022-05-23T19:36:47+05:30'
    Client:
      title: Client
      description: Client schema attributes. Applicable to MSP only.
      type: object
      x-tags:
        - Clients
      properties:
        id:
          type: number
          format: int64
          description: Unique identifier of the client
          minimum: 1
          example: 12
          readOnly: true
        name:
          type: string
          minLength: 1
          description: Name of the client
          example: HR Team
        description:
          type: string
          minLength: 1
          description: Description of the client
          example: Best for managing HR cases including employee onboarding and offboarding
        preferences:
          type: object
          description: Metadata of the client.
          example:
            tempflag: true
        state:
          type: string
          description: State of the client
          example: active
          enum:
            - active
            - inactive
            - archived
        email_domains:
          type: array
          items:
            type: string
            description: Domains of the email addresses of the client
          example:
            - example.com
            - example.org
        metadata:
          type: object
          properties:
            location:
              type: object
              properties:
                contact_name:
                  type: string
                  description: Name of the contact person for the location
                  example: John Doe
                name:
                  type: string
                  description: Name of the location
                  example: New York
                phone:
                  type: string
                  format: phone
                  description: Phone number of the location
                  example: +1-567-3492
                address:
                  type: object
                  properties:
                    line1:
                      type: string
                      description: First line of the address
                      example: 123 Main St
                    city:
                      type: string
                      description: City of the location
                      example: New York
                    state:
                      type: string
                      description: State of the location
                      example: NY
                    country:
                      type: string
                      description: Country of the location
                      example: United States
                    zipcode:
                      type: string
                      description: Zipcode of the location
                      example: '10001'
            primary_contact:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Email of the primary contact
                  example: john.doe@example.com
                first_name:
                  type: string
                  description: First name of the primary contact
                  example: John
                last_name:
                  type: string
                  description: Last name of the primary contact
                  example: Doe
                phone:
                  type: string
                  format: phone
                  description: Phone number of the primary contact
                  example: +1-567-3492
        logo:
          type: string
          minLength: 1
          format: uri
          example: 'http://localhost.freshservice-dev.com:3000/assets/logos/misc/client_logo.ico'
        logo_url:
          type: string
          minLength: 1
          format: uri
          example: 'http://localhost.freshservice-dev.com:3000/assets/logos/misc/client_logo.ico'
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
          description: Custom fields that are specific to the client.
        created_at:
          type: string
          format: date-time
          minLength: 1
          example: '2022-05-23T19:36:47+05:30'
        updated_at:
          type: string
          format: date-time
          minLength: 1
          example: '2022-05-23T19:36:47+05:30'
    Group:
      description: Groups
      type: object
      title: Groups
      x-tags:
        - Agent Groups
      properties:
        id:
          type: integer
          description: Unique identifier of the group
          format: int64
          example: 2
          readOnly: true
        name:
          type: string
          minLength: 1
          maxLength: 255
          description: Name of the group
          example: Linux Support
        description:
          type: string
          nullable: true
          maxLength: 65535
          description: Description about the group
          example: 'Support team for Linux VMs, workstations, and servers'
        business_hours_id:
          type: integer
          nullable: true
          description: Unique ID of the business hours configuration associated with the group
          example: 3458
          format: int64
          minimum: 1
        escalate_to:
          type: integer
          nullable: true
          description: 'The Unique ID of the user to whom an escalation email is sent if a ticket in this group is unassigned. To create/update a group with an escalate_to value of ‘none’, please set the value of this parameter to ‘null’.'
          example: 2
          format: int64
          minimum: 1
        unassigned_for:
          type: string
          nullable: true
          enum:
            - 30m
            - 1h
            - 2h
            - 4h
            - 12h
            - 1d
            - 2d
            - 3d
          example: 30m
        agent_ids:
          type: array
          description: Array of user IDs of agents who belong to the group.
          uniqueItems: true
          example:
            - 1
            - 16
          items:
            type: integer
            format: int64
            minimum: 1
        members:
          type: array
          description: Array of user IDs of agents who are members of the group.
          uniqueItems: true
          example:
            - 1
            - 16
          items:
            type: integer
            format: int64
            minimum: 1
        observers:
          type: array
          description: Array of user IDs of agents who are observers of the group.
          uniqueItems: true
          example:
            - 3457384
            - 9827342
          items:
            type: integer
            format: int64
            minimum: 1
        restricted:
          type: boolean
          description: Signifies whether the group is a resricted group
          default: false
          example: true
        approval_required:
          type: boolean
          description: Signifies whether the restricted group requires approvals for membership changes.
          default: false
          example: true
        leaders:
          type: array
          description: Array of user IDs of agents who are leaders of the group.
          example:
            - 4785820
            - 5672910
          uniqueItems: true
          items:
            type: integer
            format: int64
            minimum: 1
        members_pending_approval:
          type: array
          description: A comma-separated array of user IDs of agents whose member access to the group is pending approval by a group leader
          readOnly: true
          uniqueItems: true
          example:
            - 1
            - 16
          items:
            type: integer
            format: int64
            minimum: 1
        observers_pending_approval:
          type: array
          description: A comma-separated array of user IDs of agents whose observer access to the group is pending approval by a group leader.
          uniqueItems: true
          readOnly: true
          example:
            - 1
            - 16
          items:
            type: integer
            format: int64
            minimum: 1
        leaders_pending_approval:
          type: array
          description: A comma-separated array of user IDs of agents whose leader access to the group is pending approval by an existing group leader.
          uniqueItems: true
          readOnly: true
          example:
            - 1
            - 16
          items:
            type: integer
            format: int64
            minimum: 1
        auto_ticket_assign:
          type: boolean
          description: 'Describes the automatic ticket assignment type. Will not be supported if the "Round Robin" feature is disabled for the account. Set to true if automatic ticket assignment is enabled, and false otherwise.'
          default: false
          example: true
        created_at:
          type: string
          description: Timestamp at which the group was created
          format: date-time
          example: '2015-01-08T07:53:41Z'
          readOnly: true
        updated_at:
          type: string
          description: Timestamp at which the group was updated
          format: date-time
          example: '2015-01-08T07:53:41Z'
          readOnly: true
        workspace_id:
          type: integer
          format: int64
          minimum: 1
          example: 1
          description: 'Applicable to both ITSM and MSP. For MSP: It specifies global workspace ID. For ITSM: It specifies workspace ID to which the group is mapped.'
      required:
        - id
        - name
    custom_fields:
      title: Custom Fields
      type: object
      additionalProperties: true
      description: Custom fields that are associated with a Freshservice entity
      example:
        field1: Value 1
    field_definition:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          description: Unique identifier of the field
          example: 14000234324
        name:
          type: string
          readOnly: true
          description: Name of the field
          example: name
        label:
          type: string
          readOnly: true
          description: Label of the field as displayed on the user interface
          example: Department Name
        field_type:
          type: string
          readOnly: true
          description: The data type of the value that can be stored in the field
          example: text
        mandatory:
          type: boolean
          readOnly: true
          description: Mandatoriness of this field when an agent is creating or updating the corresponding entity
          example: true
        is_default_field:
          type: boolean
          readOnly: true
          description: Signifies if this field is a default field that is always applicable for the entity in Freshservice
          example: true
        created_time:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp at which the field was created
          example: '2021-11-24T11:30:00Z'
        updated_time:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp at which the field was last modified
          example: '2021-11-24T11:30:00Z'
    error:
      type: object
      properties:
        field:
          type: string
          readOnly: true
          description: The request field that triggered this error. Applicable to HTTP 400 errors only.
          example: email
        code:
          type: string
          readOnly: true
          example: invalid_value
          enum:
            - missing_field
            - invalid_value
            - duplicate_value
            - datatype_mismatch
            - invalid_field
            - invalid_json
            - invalid_credentials
            - access_denied
            - require_feature
            - account_suspended
            - ssl_required
            - readonly_field
            - password_lockout
            - password_expired
            - no_content_required
            - inaccessible_field
            - incompatible_field
          description: Custom error code that is machine-parseable.
        message:
          type: string
          readOnly: true
          description: Detailed error message.
          example: Value cannot be blank
    product:
      title: Product
      type: object
      x-tags:
        - Products
      properties:
        id:
          type: integer
          description: Unique ID of the Product
          format: int64
          example: 14000234324
          minimum: 1
          readOnly: true
        name:
          type: string
          description: Name of the Product
          example: Apple MacBook Air 13
          minLength: 1
          maxLength: 255
        asset_type_id:
          type: integer
          description: Asset Type id of the Product
          format: int64
          example: 14000234243
          minimum: 1
        manufacturer:
          type: string
          nullable: true
          description: Manufacturer Name - Free Text
          example: Apple
          minLength: 0
          maxLength: 255
        status:
          type: string
          description: |
            status can be 'In Production', 'In Pipeline' or 'Retired'
          enum:
            - In Production
            - In Pipeline
            - Retired
          example: In Production
          default: In Production
        mode_of_procurement:
          type: string
          description: |
            mode of procurement can be 'Buy', 'Lease' or 'Both'
          enum:
            - Buy
            - Lease
            - Both
          default: Both
          example: Both
        depreciation_type_id:
          type: integer
          nullable: true
          format: int64
          example: 140009854
          description: Unique identifier for the depreciation type used
        description:
          type: string
          example: <div>Apple</div>
          description: Description of the product in HTML format
        description_text:
          type: string
          example: Apple
          description: Description of the product in text format
          readOnly: true
        created_at:
          type: string
          format: date-time
          example: '2022-01-05T18:34:46Z'
          description: Timestamp at which the product was created
          readOnly: true
        updated_at:
          type: string
          format: date-time
          example: '2022-01-05T18:34:46Z'
          description: Timestamp at which the product was modified
          readOnly: true
    business_hours:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          description: Unique identifier of the business hours configuration
          example: 14000234324
        name:
          type: string
          readOnly: true
          description: Name of the business hours configuration
          example: Default
        description:
          type: string
          readOnly: true
          description: Description about the business hours configuration
          example: Default
        is_default:
          type: boolean
          readOnly: true
          description: True if the business hours configuration is the default present in Freshservice
          example: true
        time_zone:
          type: string
          readOnly: true
          description: 'Time zone that the business hours configuration functions in. For more information, refer to https://support.freshservice.com/support/solutions/articles/232302-list-of-time-zones-supported-in-freshservice'
          example: Eastern Time (US & Canada)
        service_desk_hours:
          type: object
          properties:
            monday:
              type: object
              properties:
                beginning_of_workday:
                  type: string
                  description: 'Start time for the day in the ISO 8601 hh:mm format.'
                  example: '08:00'
                end_of_workday:
                  type: string
                  description: 'End time for the day in the ISO 8601 hh:mm format.'
                  example: '17:00'
              example:
                beginning_of_workday: '08:00'
                end_of_workday: '17:00'
            tuesday:
              type: object
              properties:
                beginning_of_workday:
                  type: string
                  description: 'Start time for the day in the ISO 8601 hh:mm format.'
                  example: '08:00'
                end_of_workday:
                  type: string
                  description: 'End time for the day in the ISO 8601 hh:mm format.'
                  example: '17:00'
              example:
                beginning_of_workday: '08:00'
                end_of_workday: '17:00'
            wednesday:
              type: object
              properties:
                beginning_of_workday:
                  type: string
                  description: 'Start time for the day in the ISO 8601 hh:mm format.'
                  example: '08:00'
                end_of_workday:
                  type: string
                  description: 'End time for the day in the ISO 8601 hh:mm format.'
                  example: '17:00'
              example:
                beginning_of_workday: '08:00'
                end_of_workday: '17:00'
            thursday:
              type: object
              properties:
                beginning_of_workday:
                  type: string
                  description: 'Start time for the day in the ISO 8601 hh:mm format.'
                  example: '08:00'
                end_of_workday:
                  type: string
                  description: 'End time for the day in the ISO 8601 hh:mm format.'
                  example: '17:00'
              example:
                beginning_of_workday: '08:00'
                end_of_workday: '17:00'
            friday:
              type: object
              properties:
                beginning_of_workday:
                  type: string
                  description: 'Start time for the day in the ISO 8601 hh:mm format.'
                  example: '08:00'
                end_of_workday:
                  type: string
                  description: 'End time for the day in the ISO 8601 hh:mm format.'
                  example: '17:00'
              example:
                beginning_of_workday: '08:00'
                end_of_workday: '17:00'
            saturday:
              type: object
              properties:
                beginning_of_workday:
                  type: string
                  description: 'Start time for the day in the ISO 8601 hh:mm format.'
                  example: '08:00'
                end_of_workday:
                  type: string
                  description: 'End time for the day in the ISO 8601 hh:mm format.'
                  example: '17:00'
              example:
                beginning_of_workday: '08:00'
                end_of_workday: '17:00'
            sunday:
              type: object
              properties:
                beginning_of_workday:
                  type: string
                  description: 'Start time for the day in the ISO 8601 hh:mm format.'
                  example: '08:00'
                end_of_workday:
                  type: string
                  description: 'End time for the day in the ISO 8601 hh:mm format.'
                  example: '17:00'
              example:
                beginning_of_workday: '08:00'
                end_of_workday: '17:00'
          example:
            monday:
              beginning_of_workday: '08:00'
              end_of_workday: '17:00'
            tuesday:
              beginning_of_workday: '08:00'
              end_of_workday: '17:00'
            wednesday:
              beginning_of_workday: '08:00'
              end_of_workday: '17:00'
            thursday:
              beginning_of_workday: '08:00'
              end_of_workday: '17:00'
            friday:
              beginning_of_workday: '08:00'
              end_of_workday: '17:00'
            saturday:
              beginning_of_workday: '08:00'
              end_of_workday: '17:00'
            sunday:
              beginning_of_workday: '08:00'
              end_of_workday: '17:00'
        list_of_holidays:
          type: array
          description: List of holidays for the year.
          items:
            type: object
            properties:
              holiday_date:
                type: string
                description: Date the holiday falls in the ISO --MM-DD format.
                example: 12-25
              holiday_name:
                type: string
                description: Name of the holiday.
                example: Christmas Day
            example:
              holiday_date: 12-25
              holiday_name: Christmas Day
          example:
            - holiday_date: 05-28
              holiday_name: Memorial Day
            - holiday_date: 12-25
              holiday_name: Christmas Day
        created_time:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp at which the business hours configuration was created
          example: '2021-11-24T11:30:00Z'
        updated_time:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp at which the business hours configuration was last modified
          example: '2021-11-24T11:30:00Z'
    location:
      title: Location
      type: object
      x-tags:
        - Location
      additionalProperties: false
      properties:
        address:
          type: object
          example:
            line1: 1250 Bayhill Drive
            line2: Suite 315
            city: San Bruno
            state: California
            country: US
            zipcode: '9501'
            workspace_id: 1
          properties:
            line1:
              description: Address Line 1
              type: string
              nullable: true
              example: 1250 Bayhill Drive
              maxLength: 255
            line2:
              description: Address Line 2. Applicable to ITSM only.
              type: string
              nullable: true
              example: Suite 315
              maxLength: 255
            city:
              description: City
              type: string
              nullable: true
              example: San Bruno
              maxLength: 255
            state:
              description: State
              type: string
              nullable: true
              example: California
              maxLength: 255
            country:
              description: Country
              type: string
              nullable: true
              example: US
              maxLength: 255
            zipcode:
              description: Zip Code of the Location
              type: string
              nullable: true
              example: '95014'
              maxLength: 255
        contact_name:
          type: string
          nullable: true
          example: Mike
          description: Name of the Contact person of the location
          minLength: 1
          maxLength: 511
        created_at:
          type: string
          format: date-time
          description: Timestamp at which Location was created
          example: '2019-06-18T13:45:11Z'
          readOnly: true
        email:
          type: string
          nullable: true
          format: email
          example: mike@email.com
          description: Email id of the Contact person of the location. Applicable to ITSM only.
          maxLength: 255
        id:
          description: Unique ID of the location
          type: integer
          format: int64
          minimum: 1
          example: 14000234324
          readOnly: true
        name:
          description: Name of the location
          type: string
          example: Apple Campus
          minLength: 1
          maxLength: 255
        parent_location_id:
          description: Unique ID of the parent location. Applicable to ITSM only.
          type: integer
          nullable: true
          format: int64
          minimum: 1
          example: 14000234324
        phone:
          type: string
          nullable: true
          format: phone
          example: '77762443'
          description: Phone Number of the Contact person of the location
          maxLength: 255
        primary_contact_id:
          description: Unique ID of the primary contact. It is deprecated. Applicable to ITSM only.
          type: integer
          nullable: true
          format: int64
          minimum: 1
          example: 14000234324
        updated_at:
          type: string
          format: date-time
          description: Timestamp at which Location was last updated
          example: '2019-06-18T13:45:11Z'
          readOnly: true
        workspace_id:
          type: integer
          format: int64
          minimum: 1
          example: 1
          description: ID of the workspace to which the location is mapped. Applicable to MSP only.
      required:
        - name
    vendor:
      title: Vendor
      type: object
      x-tags:
        - Vendors
      properties:
        id:
          description: Unique ID of the vendor
          type: integer
          format: int64
          readOnly: true
          minimum: 1
          example: 14000234324
        name:
          description: Name of the vendor
          type: string
          example: Apple
          minLength: 1
          maxLength: 255
        description:
          description: Description of the vendor
          type: string
          nullable: true
          example: Apple
          minLength: 0
        primary_contact_id:
          description: Unique ID of the primary contact.It is deprecated
          type: integer
          nullable: true
          format: int64
          minimum: 0
          example: 14000234324
        contact_name:
          description: Contact Name of the vendor
          type: string
          nullable: true
          example: Apple
          minLength: 0
          maxLength: 511
        email:
          description: Email of the vendor
          type: string
          nullable: true
          format: email
          example: andrea@freshservice.com
        mobile:
          description: Mobile number of the Vendor
          type: string
          nullable: true
          example: '14000234324'
          minLength: 0
          maxLength: 255
        phone:
          description: Phone number of the Vendor
          type: string
          nullable: true
          example: '14000234324'
          minLength: 0
          maxLength: 255
        created_at:
          type: string
          format: date-time
          description: Date at which the vendor is created
          example: '2021-11-24T11:30:00Z'
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: Date at which the vendor is last updated
          example: '2021-11-24T11:30:00Z'
          readOnly: true
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
        address:
          description: Address of the Vendor
          type: object
          properties:
            line1:
              description: Detailed Address of the vendor
              type: string
              nullable: true
              example: Cupertino
              minLength: 0
              maxLength: 255
            city:
              description: City of the vendor
              type: string
              nullable: true
              example: Cupertino
              minLength: 0
              maxLength: 255
            state:
              description: State of the vendor
              type: string
              nullable: true
              example: California
              minLength: 0
              maxLength: 255
            country:
              description: Country of the vendor
              type: string
              nullable: true
              example: US
              minLength: 0
              maxLength: 255
            zipcode:
              description: zipcode of the vendor
              type: string
              nullable: true
              example: '1234'
              minLength: 0
              maxLength: 255
          example:
            line1: Cupertino
            city: Cupertino
            state: California
            country: US
            zipcode: '1234'
    asset_type:
      title: AssetType
      type: object
      x-tags:
        - AssetType
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
          readOnly: true
          description: Unique ID of the asset type.
          example: 1400623
        name:
          description: Name of the asset type.
          type: string
          example: Hardware
          minLength: 1
          maxLength: 255
        description:
          description: Short description of the asset type.
          type: string
          nullable: true
          example: Computer or Laptop Hardware
          maxLength: 255
        parent_asset_type_id:
          description: ID of the parent asset type and it cannot be updated.
          type: integer
          nullable: true
          format: int64
          minimum: 1
          example: 14000234324
        visible:
          type: boolean
          description: This is applicable only for default asset types and it indicates the enablement/disablement of the type.
          example: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp at which Asset Type was created
          example: '2019-06-18T13:45:11Z'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp at which Asset Type was last updated
          example: '2019-06-18T13:45:11Z'
    software:
      title: Software
      type: object
      x-tags:
        - Software
      properties:
        id:
          description: Unique identifier of the Software
          type: integer
          format: int64
          readOnly: true
          example: 14000234324
        name:
          type: string
          description: Name of the Software
          example: Google Analytics
          minLength: 1
          maxLength: 255
        installation_count:
          type: integer
          format: int64
          description: Count of the number of devices where the Software is installed
          readOnly: true
          example: 534
        status:
          type: string
          description: Status of the Software (can be ignored/blacklisted/managed)
          enum:
            - Ignored
            - Blacklisted
            - Managed
          default: Managed
          example: Ignored
        managed_by_id:
          type: integer
          format: int64
          description: ID of the user managing the Software(must be a user in Freshservice)
          example: 14000234324
        application_type:
          description: Type of the softwares
          type: string
          enum:
            - desktop
            - saas
            - mobile
          example: desktop
        user_count:
          type: integer
          format: int64
          description: Number of users using this software
          minimum: 1
          example: 678
          readOnly: true
        created_at:
          type: string
          format: date-time
          description: Date at which the software is created
          example: '2021-11-24T11:30:00Z'
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: Date at which the software is last updated
          example: '2021-11-24T11:30:00Z'
          readOnly: true
        publisher_id:
          type: integer
          format: int64
          description: Id of the vendor
          minimum: 1
          example: 56757
        description:
          type: string
          minLength: 1
          maxLength: 2000
          description: Description of the software
          example: Description of the software
        notes:
          type: string
          minLength: 1
          maxLength: 2000
          description: Notes about the software
          example: Notes
        category:
          description: Category of the software
          type: string
          minLength: 1
          maxLength: 255
          example: Analytics
        source:
          type: string
          description: Source of the software
          example: okta
          minLength: 1
          maxLength: 255
      required:
        - id
        - name
    survey_option:
      description: Response Options of the Customer Satisfaction Survey
      type: object
      properties:
        text:
          type: string
          description: 'Option text that will be displayed to the requester. E.g. Fantastic, Neutral, Awful.'
          example: Fantastic
        follow_up_question:
          type: string
          description: Follow-up question that will asked when the requester responds with the current option.
          example: How do you rate overall experience?
      example:
        text: Fantastic
        follow_up_question: How do you rate overall experience?
    survey:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          description: Unique identifier of the Customer Satisfaction Survey
          example: 14000234324
        name:
          type: string
          description: Name of the Survey
          example: Buyer satisfaction
        active:
          type: boolean
          description: 'State of the survey. For an activated survey, active = true. For a deactivated survey, active = false.'
          example: true
        survey_trigger_event:
          type: string
          enum:
            - Ticket Closure
            - Ticket Resolution
            - All Replies
            - Agent Specified Emails
          description: Field to capture when the survey should be sent.
          example: Ticket Closure
        question:
          type: string
          description: Question that will be asked to the requester to capture the service experience
          example: How do you rate the buying experience?
        order_of_options:
          type: string
          enum:
            - Good to Bad
            - Bad to Good
          description: Gradient order of the options displayed
          example: Good to Bad
        options:
          type: object
          properties:
            option_1:
              $ref: '#/components/schemas/survey_option'
            option_2:
              $ref: '#/components/schemas/survey_option'
            option_3:
              $ref: '#/components/schemas/survey_option'
            option_4:
              $ref: '#/components/schemas/survey_option'
            option_5:
              $ref: '#/components/schemas/survey_option'
          example:
            option_1:
              text: Fantastic
            option_2:
              text: Fantastic
        thank_you_message:
          type: string
          description: The final \"Thank you\" message that gets displayed to the requester upon completion of the survey
          example: Thanks for taking the survey
        user_id:
          type: integer
          format: int64
          description: Unique identifier of the agent who last modified this survey
          example: 14000234324
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp at which the survey was created
          example: '2021-11-22T16:58:45Z'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp at which the survey was last modified
          example: '2021-11-22T16:58:45Z'
    asset_type_field:
      title: AssetTypeField
      type: object
      x-tags:
        - AssetType
      additionalProperties: false
      properties:
        field_header:
          type: string
          description: section header that is used to group fields
          example: General
          minimum: 1
          maxLength: 255
        fields:
          type: array
          example:
            - id: 14000234324
              created_at: '2021-11-24T11:30:00Z'
              updated_at: '2021-11-24T11:30:00Z'
              asset_type_id: 14000234324
              name: impact
              label: Impact
              required: true
              is_unique: true
              field_type: dropdown
              data_type: string
              default_field: true
              choices:
                - - low
                  - 1
                - - medium
                  - 2
                - - high
                  - 3
          items:
            type: object
            properties:
              id:
                type: integer
                nullable: true
                format: int64
                description: Unique identifier of the asset type field
                example: 14000234324
                minimum: 1
                readOnly: true
              created_at:
                type: string
                nullable: true
                format: date-time
                description: Timestamp at which the asset field was created
                example: '2021-11-24T11:30:00Z'
                readOnly: true
              updated_at:
                type: string
                nullable: true
                format: date-time
                description: Timestamp at which the asset field was last modified
                example: '2021-11-24T11:30:00Z'
                readOnly: true
              asset_type_id:
                type: integer
                nullable: true
                format: int64
                description: 'the asset type to which this field is belongs to (for example, Product belongs to Hardware asset type)'
                example: 14000234324
                minimum: 1
              name:
                type: string
                description: Name of the asset type field
                example: impact
                minLength: 1
                maxLength: 255
                readOnly: true
              label:
                type: string
                description: Label of the field as displayed on the user interface
                example: Impact
                minLength: 1
                maxLength: 255
              required:
                type: boolean
                description: Mandatoriness of this field when creating or updating an asset
                example: true
              is_unique:
                type: boolean
                description: 'Indicates whether a field is unique. This is applicable only for Asset Display Name, Asset Tag and Serial Number fields.'
                example: true
              field_type:
                type: string
                description: Field type of the asset type field
                example: dropdown
                enum:
                  - bigint
                  - checkbox
                  - date
                  - dropdown
                  - integer
                  - text
                  - paragraph
                  - number
                  - nested_field
                readOnly: true
              data_type:
                type: string
                description: The data type of the value that can be stored in the field
                example: string
                enum:
                  - string
                  - integer
                  - text
                  - datetime
                  - decimal
                  - boolean
                readOnly: true
              default_field:
                type: boolean
                description: Indicates whether the field is a default field or a custom field for the asset type.
                example: true
                readOnly: true
              choices:
                type: array
                example:
                  - - low
                    - 1
                  - - medium
                    - 2
                  - - high
                    - 3
                description: Options available for selection for the field (available only for dropdown and nested fields)
                items:
                  type: array
                  items: {}
            required:
              - id
              - created_at
              - updated_at
              - asset_type_id
              - name
              - label
              - required
              - is_unique
              - field_type
              - data_type
              - default_field
    pullrequests:
      type: object
      properties:
        pull_requests:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              pull_request_url:
                type: string
                example: 'https://github.com/18227'
              created_at:
                type: string
                format: date-time
              reporter:
                type: string
              repo:
                type: string
              organisation_name:
                type: string
              source_branch:
                type: string
              target_branch:
                type: string
              status:
                type: string
              source:
                type: string
        meta:
          type: object
          properties:
            count:
              type: integer
              format: int64
              example: 1
    workitems:
      type: object
      properties:
        pull_requests:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              work_item_url:
                type: string
                example: 'https://dummy.in/work-items/13765'
              title:
                type: string
                example: workitem1
              description:
                type: string
              created_at:
                type: string
                format: date-time
              assignee:
                type: string
              project:
                type: string
              organisation_name:
                type: string
              reporter:
                type: string
              status:
                type: string
              type:
                type: string
        meta:
          type: object
          properties:
            count:
              type: integer
              format: int64
              example: 1
    field_choices:
      description: Options available for selection for the field (available only for dropdown and nested fields)
      additionalProperties: true
      example:
        field1: Value 1
    asset:
      title: Asset
      type: object
      x-tags:
        - Assets
      properties:
        id:
          description: Unique ID of the asset
          type: integer
          format: int64
          minimum: 1
          example: 14000234324
          readOnly: true
        display_id:
          description: Display ID of the asset.
          type: integer
          format: int64
          minimum: 1
          example: 1453
          readOnly: true
        name:
          type: string
          description: Name of the asset.
          example: Hardware-Monitor
          minLength: 1
          maxLength: 255
        description:
          type: string
          nullable: true
          description: Description of the asset.
          example: 28-inch Hardware-Monitor
          maxLength: 65535
        asset_type_id:
          type: integer
          description: Id of the asset type.
          format: int64
          minimum: 1
          example: 14000284324
        impact:
          description: Impact of the asset.
          type: string
          enum:
            - low
            - medium
            - high
          default: low
          example: low
        author_type:
          type: string
          description: Asset created by source
          example: User
          enum:
            - Discovery Probe
            - User
            - Discovery Agent
            - Chrome Connector
            - Jamf Connector
            - Azure Discovery
            - AWS Discovery
            - VMware VCenter Discovery
          readOnly: true
        usage_type:
          description: Usage type of the asset.
          type: string
          enum:
            - permanent
            - loaner
          default: permanent
          example: permanent
        asset_tag:
          type: string
          description: Asset tag of the asset
          example: FDLMC-1234
          maxLength: 255
        user_id:
          description: ID of the associated user (Used By).
          type: integer
          nullable: true
          format: int64
          example: 14000234324
        department_id:
          description: ID of the associated department.
          type: integer
          nullable: true
          format: int64
          example: 14000232343
        location_id:
          description: ID of the associated location.
          type: integer
          nullable: true
          format: int64
          example: 140006394857
        agent_id:
          description: ID of the associated agent (Managed By).
          type: integer
          nullable: true
          format: int64
          example: 14000234324
        group_id:
          description: ID of the associated agent group (Managed By Group).
          type: integer
          nullable: true
          format: int64
          example: 14000234939
        assigned_on:
          description: Date and time when the asset was assigned
          type: string
          nullable: true
          format: date-time
          example: '2021-11-24T11:30:00Z'
        discovery_enabled:
          type: boolean
          description: Denotes if asset discovery is enabled/disabled
          default: true
          example: false
        created_at:
          description: Timestamp at which the asset was created
          type: string
          format: date-time
          example: '2021-11-24T11:30:00Z'
          readOnly: true
        updated_at:
          description: Timestamp at which the asset was last modified
          type: string
          format: date-time
          example: '2021-11-24T11:30:00Z'
          readOnly: true
        end_of_life:
          type: string
          nullable: true
          description: End of life of the asset
          example: '2021-11-24'
          format: date
        type_fields:
          type: object
          nullable: true
          example:
            field1: Value 1
            field2: 1234
            field3: null
          description: Key value pairs containing the names and values of type fields
      required:
        - name
        - asset_type_id
    relationship_type:
      title: Relationship type
      type: object
      x-tags:
        - Assets
      properties:
        id:
          description: id of the Relationship
          type: integer
          format: int64
          minimum: 1
          example: 14000234324
          readOnly: true
        is_default:
          type: boolean
          description: Indicates whether the type is a default type or a custom type
          example: true
        description:
          type: string
          description: Description of the relationship
          example: 28-inch Hardware-Monitor
          maxLength: 65535
        created_at:
          description: Timestamp at which the relationship was created
          type: string
          format: date-time
          example: '2021-11-24T11:30:00Z'
          readOnly: true
        updated_at:
          description: Timestamp at which the relationship was last modified
          type: string
          format: date-time
          example: '2021-11-24T11:30:00Z'
          readOnly: true
        downstream_relation:
          type: string
          minLength: 1
          maxLength: 255
          example: Depends On
        upstream_relation:
          type: string
          minLength: 1
          maxLength: 255
          example: Used By
    asset_requests:
      title: AssociatedRequest
      type: object
      x-tags:
        - Assets
      properties:
        id:
          description: Unique identifier of the association
          type: integer
          format: int64
          example: 14000253453
          readOnly: true
        created_at:
          type: string
          format: date-time
          description: Timestamp at which the request was created
          example: '2021-11-24T11:30:00Z'
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: Timestamp at which the request was last modified
          example: '2021-11-24T11:30:00Z'
          readOnly: true
        request_type:
          type: string
          description: 'type of the association (ticket, problem, change, release or project)'
          example: Ticket
          enum:
            - Ticket
            - Problem
            - Change
            - Release
            - Project
        request_id:
          description: 'ID of associated request (ticket, problem, change, release or project ID)'
          type: integer
          format: int64
          example: 140002088473
        request_details:
          type: string
          description: name/subject of the request
          example: External Monitor
          minLength: 1
          maxLength: 255
        request_status:
          type: string
          description: status of the request
          minLength: 1
          maxLength: 50
          example: Open
    assignment_history_asset:
      title: Assignment
      description: User assignment history of an asset
      type: object
      x-tags:
        - Assignment History
      additionalProperties: false
      properties:
        assets:
          type: array
          minItems: 0
          maxItems: 100
          description: List of items
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
                minimum: 1
                example: 1
                readOnly: true
                description: Unique identifier of the Assignment
              assigned_by:
                type: integer
                format: int64
                minimum: 1
                example: 2
                description: User ID who made this unassignment
              assigned_by_name:
                type: string
                minLength: 1
                example: Saranya
                description: Name of the user who made this assignment
              unassigned_by:
                type: integer
                format: int64
                minimum: 1
                example: 3
                description: User ID who made this assignment
              unassigned_by_name:
                type: string
                minLength: 1
                example: Saranya
                description: Name of the user who unassigned the assignment
              assigned_on:
                type: string
                format: date-time
                example: '2023-01-01T10:00:00Z'
                description: Timestamp at which the assignment was assigned
              unassigned_on:
                type: string
                format: date-time
                example: '2023-01-02T10:00:00Z'
                description: Timestamp until which the assignment is assigned
              user_id:
                type: integer
                format: int64
                minimum: 1
                example: 123
                description: User ID of the assigned user
              created_at:
                type: string
                format: date-time
                example: '2023-01-01T12:00:00Z'
                readOnly: true
                description: Timestamp at which the assignment was created
              updated_at:
                type: string
                format: date-time
                example: '2023-01-01T14:30:00Z'
                readOnly: true
                description: Timestamp at which the assignment was last updated
              user_name:
                type: string
                minLength: 1
                example: Saranya
                description: Name of the assigned user
    assignment_history_user:
      title: AssetAssignment
      description: Model to represent asset assignment history
      type: object
      x-tags:
        - Asset Assignment History
      additionalProperties: false
      properties:
        assignment_history:
          type: array
          minItems: 0
          maxItems: 100
          description: List of items
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
                minimum: 1
                example: 1
                readOnly: true
                description: Unique identifier of the Assignment
              assigned_by:
                type: integer
                format: int64
                minimum: 1
                example: 2
                description: The ID of the user who made this assignment
              assigned_by_name:
                type: string
                minLength: 1
                example: Saranya
                description: The name of the user who made this assignment
              unassigned_by:
                type: integer
                format: int64
                minimum: 1
                example: 3
                description: The ID of the user who revoked this assignment
              unassigned_by_name:
                type: string
                minLength: 1
                example: Saranya
                description: The name of the user who revoked this assignment
              assigned_on:
                type: string
                format: date-time
                example: '2023-01-01T10:00:00Z'
                description: Timestamp at which the assignment was made
              unassigned_on:
                type: string
                format: date-time
                example: '2023-01-02T10:00:00Z'
                description: Timestamp until which the assignment was there
              asset_id:
                type: integer
                format: int64
                minimum: 1
                example: 123
                description: Unique identifier of the associated asset
              created_at:
                type: string
                format: datetime
                example: '2023-01-01T12:30:00Z'
                readOnly: true
                description: Timestamp at which the assignment was created
              updated_at:
                type: string
                format: datetime
                example: '2023-01-01T15:00:00Z'
                readOnly: true
                description: Timestamp at which the assignment was last updated
              asset_name:
                type: string
                minLength: 1
                example: Macbook
                description: Name of the associated asset
              managed_by_name:
                type: string
                minLength: 1
                example: User1
                description: Name of the user managing the asset
              managed_by_id:
                type: integer
                format: int64
                example: 456
                description: User ID of the user managing the asset
    asset_contracts:
      title: AssociatedContract
      type: object
      x-tags:
        - Assets
      properties:
        id:
          type: integer
          format: int64
          description: Unique ID of the contract
          example: 14000234324
          minimum: 1
          readOnly: true
        contract_id:
          type: string
          description: User entered ID for the contract. This has to be unique.
          example: ADB12
          minLength: 1
          maxLength: 255
        contract_type:
          type: string
          minLength: 1
          maxLength: 255
          example: Maintenance
        contract_name:
          type: string
          description: Name of the Contract
          example: Adobe contract
          minLength: 1
          maxLength: 255
        contract_status:
          type: string
          enum:
            - Draft
            - Pending Approval
            - Approved
            - Active
            - Expired
            - Rejected
            - Terminated
            - Pending Signature
            - Signed
            - Declined to sign
          description: Status of the contract
          example: Active
          default: Draft
          readOnly: true
    component:
      title: Component
      type: object
      x-tags:
        - Assets
      properties:
        id:
          description: Unique identifier of the component
          type: integer
          format: int64
          example: 14000879232
          readOnly: true
        created_at:
          type: string
          format: date-time
          description: Timestamp at which the component was created
          example: '2021-11-24T11:30:00Z'
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: Timestamp at which the component was last modified
          example: '2021-11-24T11:30:00Z'
          readOnly: true
        component_type:
          type: string
          description: Unique identifier of the component type
          format: int64
          enum:
            - Processor
            - Memory
            - Logical Drive
            - Network Adapter
            - Hard Disk
            - Datastore
          example: Processor
        component_data:
          type: array
          description: Fields specific to every component type (Every component will have different fields)
          items:
            type: object
            additionalProperties:
              type: string
          example:
            - field1: Value 1
              field2: Value 2
    software_installations:
      title: SoftwareInstallations
      type: object
      x-tags:
        - Software
      properties:
        id:
          type: integer
          description: Unique ID of the installation
          example: 673532
          format: int64
          readOnly: true
        created_at:
          type: string
          format: date-time
          description: Date and time when the installation was created.
          example: '2021-11-24T11:30:00Z'
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: Date and time when the installation was last updated.
          example: '2021-11-24T11:30:00Z'
          readOnly: true
        installation_path:
          type: string
          nullable: true
          description: Path where the Software is installed
          example: a/applications/1
          minLength: 1
          maxLength: 255
        version:
          type: string
          nullable: true
          description: Version of the installed Software
          example: 13.93.0
          minLength: 1
          maxLength: 255
        installation_machine_id:
          type: integer
          description: Display ID of device where the software is installed in
          example: 4563
          format: int64
        user_id:
          type: integer
          format: int64
          description: ID of the User using the Device
          example: 364
          readOnly: true
        department_id:
          type: integer
          description: ID of the department the device belongs to.
          example: 345
          format: int64
          readOnly: true
        installation_date:
          type: string
          nullable: true
          format: date
          description: Date when the software was installed.
          example: '2021-11-24'
      required:
        - installation_machine_id
    software_licenses:
      title: SoftwareLicense
      type: object
      x-tags:
        - Software
      properties:
        id:
          description: Unique identifier of the license (contract) linked to a software
          type: integer
          format: int64
          readOnly: true
          example: 14000239234
        contract_id:
          description: ID of the contract linked to the software
          type: integer
          format: int64
          example: 1400023984902
        created_time:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp at which the application license was created
          example: '2021-11-24T11:30:00Z'
        updated_time:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp at which the application license was last modified
          example: '2021-11-24T11:30:00Z'
    software_users:
      title: SoftwareUsers
      type: object
      x-tags:
        - Software
      properties:
        id:
          type: integer
          description: Unique ID of the Software user.
          example: 6434538
          format: int64
          readOnly: true
        created_at:
          type: string
          description: Date and time when the user was created.
          format: date-time
          example: '2021-11-24T11:30:00Z'
          readOnly: true
        updated_at:
          type: string
          example: '2021-11-24T11:30:00Z'
          format: date-time
          description: Date and time when the user was last updated.
          readOnly: true
        user_id:
          type: integer
          description: ID of the User using the Software.
          example: 6434538
          format: int64
        license_id:
          type: integer
          nullable: true
          description: Display ID of the allocated Software License Contract.
          example: 6434538
          format: int64
        allocated_date:
          type: string
          nullable: true
          description: Date and time when the user was allocated.
          format: date-time
          example: '2021-11-24T11:30:00Z'
        first_used:
          type: string
          nullable: true
          description: Date and time when the software was first used by the user.
          example: '2021-11-24T11:30:00Z'
          format: date-time
          readOnly: true
        last_used:
          type: string
          nullable: true
          description: Date and time when the software was last used by the user.
          format: date-time
          example: '2021-11-24T11:30:00Z'
          readOnly: true
        source:
          type: string
          nullable: true
          description: 'Source from where the user details are updated (API, Okta, Google...etc).'
          example: Okta
      required:
        - user_id
    service_item:
      title: CatalogItem
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier of the service item
          example: 14000239432
          readOnly: true
        display_id:
          type: integer
          format: int64
          description: Unique identifier of the service item
          example: 103
          readOnly: true
        category_id:
          type: integer
          format: int64
          description: Unique identifier of the service item
          example: 140002039234
        product_id:
          type: integer
          format: int64
          description: The ID of the product mapped to the item
          example: 1400022384
          readOnly: true
        name:
          type: string
          description: Name of the item
          example: Apple Macbook Pro 13
        short_description:
          type: string
          description: 'Short description about the item, should be less than 255 characters'
          example: Apple Macbook Pro 13 inch
        description:
          type: string
          description: Description about the item
          example: Apple Macbook Pro 13 inch - 8 GB
        cost:
          type: number
          description: Cost of the item
          example: 1599
        allow_attachments:
          type: boolean
          description: Set to true if requester is allowed to attach a file
          example: true
        cost_visibility:
          type: boolean
          description: Set to true if cost should be visible to the requester
          example: true
        delivery_time:
          type: number
          description: Estimated delivery time of the item
          example: 3600
        deleted:
          type: boolean
          description: Set to True if the item is deleted
          example: true
        delivery_time_visibility:
          type: boolean
          description: Set to True if delivery time of the item should be visible to the requester
          example: true
        create_child:
          type: boolean
          description: Applicable to bundles. Set to True if additional items needs to be created as child tickets.
          example: true
        allow_quantity:
          type: boolean
          description: Set as True to allow the requester to request for more than 1 quantity
          example: true
        is_bundle:
          type: boolean
          description: Set as True for if this service item contains child items.
          example: true
        child_items:
          type: array
          description: Unique identifiers of all the child items of the bundle.
          example:
            - 234
            - 432
          items:
            type: integer
        group_visibility:
          description: Set ‘1’ for visibility to all requesters. Set ‘2’ for restricted visibility.
          example: 1
        visibility:
          description: number   Set ‘1’ for draft and ‘2’ for published.
          example: 1
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
        created_at:
          type: string
          format: date-time
          description: Timestamp at which the service item was created
          example: '2021-11-22T16:58:45Z'
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: Timestamp at which the service item was last modified
          example: '2021-11-22T16:58:45Z'
          readOnly: true
        botified:
          type: boolean
          description: Set as True to Make it Bot Ready
          example: true
        quantity:
          type: integer
          description: Quantity of service item
          example: 1
        agent_group_visibility:
          type: integer
          example: 1
          description: Set '1' for visibility to all agent. Set '2' for restricted visibility.
        item_type:
          type: integer
          description: Set '1' for permanent item. Set '2' for loaner item.
          example: 1
        ci_type_id:
          type: integer
          description: Unique id of the asset type associated with the product
          example: 41
        configs:
          type: object
          description: configs of service item
          properties:
            attachment_mandatory:
              type: boolean
              description: Set as True to make attachment mandatory
              example: true
              readOnly: true
            subject:
              type: string
              example: 'Requested for {{requested_for}}'
              description: Customize the service request subject by adding default and custom fields as placeholders.
          example:
            attachment_mandatory: true
            subject: 'Requested for {{requested_for}}'
        icon_name:
          type: string
          description: Icon name of the service item
          example: service-catalog-apple-mac-new
        icon_url:
          type: string
          description: Icon url of the service item
          example: 'https://assets4.freshgenie.com/assets/cdn-ignored/sprites/service-catalog/apple-mac-new-1d5020ed9cfcc8f8491ae7631cde08411921c0026af4548440b7dc9641ea5775.png'
    service_catalog_item:
      title: ServiceCatalogItem
      description: Create a new Service catalog item
      type: object
      properties:
        service_item:
          type: object
          properties:
            name:
              type: string
              description: Name of the item
              minLength: 1
              maxLength: 255
              example: Apple Macbook Pro 13
            category_id:
              type: integer
              format: int64
              description: Unique identifier of the service item
              minimum: 1
              example: 10000028112
            short_description:
              type: string
              description: Short description about the item
              maxLength: 255
              minLength: 1
              example: Apple Macbook Pro 13 inch
            description:
              type: string
              description: Description about the item
              example: Apple Macbook Pro 13 inch - 8 GB
              minLength: 1
            cost:
              type: number
              description: Cost of the item
              minimum: 0
              example: 1200
            cost_visibility:
              type: boolean
              description: Set to true if cost should be visible to the requester
              example: true
            delivery_time:
              type: number
              description: Estimated delivery time of the item
              example: 3600
            delivery_time_visibility:
              type: boolean
              description: Set to True if delivery time of the item should be visible to the requester
              example: true
            visibility:
              type: number
              description: Set ‘1’ for draft and ‘2’ for published
              minimum: 1
              maximum: 2
              example: 2
            agent_group_visibility:
              type: integer
              description: Set '1' for visibility to all agent. Set '2' for Agent Group. Set '3' for workspace ids.
              minimum: 1
              maximum: 2
              example: 2
            agent_group_visibilities:
              type: object
              description: 'Agent Group Visibilities, value should be passed if agent_group_visibility is 2'
              example:
                group_id:
                  - 1
              properties:
                group_id:
                  type: array
                  items:
                    type: integer
                    format: int64
                  example:
                    - 1
                    - 2
            group_visibility:
              type: integer
              description: Set ‘1’ for visibility to all requesters. Set ‘2’ for restricted visibility.
              example: 2
              minimum: 1
              maximum: 2
            requester_group_visibilities:
              type: object
              description: 'Requester Group Visibilities, value is passed if group_visibility is 2'
              example:
                group_id:
                  - 1
              properties:
                group_id:
                  type: array
                  items:
                    type: integer
                    format: int64
                  example:
                    - 1
                    - 2
            agent_workspace_visibilities:
              type: object
              description: 'Workspace Visibilities, value is set if agent_group_visibility is 3'
              example:
                workspace_ids:
                  - 5
                  - 12
              properties:
                workspace_ids:
                  type: array
                  items:
                    type: integer
                    format: int64
                  example:
                    - 3
                    - 4
            custom_fields:
              type: array
              uniqueItems: true
              description: custom fields of service item
              example:
                - label: Date field
                  required: true
                  field_options:
                    date_only: true
                    displayed_to_requester: true
                    requester_can_edit: true
                  field_type: custom_date_time
                - label: Location
                  placeholder: Location Details
                  required: false
                  field_options:
                    displayed_to_requester: true
                    requester_can_edit: false
                  choices:
                    - value: Canada
                  field_type: custom_dropdown
                - label: <h1>ABC</h1><p><b>ABC Bold</b></p>
                  placeholder: content details
                  required: true
                  field_options:
                    visible_in_portal: true
                    content_name: Content Name
                  field_type: custom_static_rich_text
              items:
                properties:
                  label:
                    type: string
                    minLength: 1
                    description: Label of the field that requesters will see
                  placeholder:
                    type: string
                    minLength: 1
                    description: Placeholder text of the custom field
                  required:
                    type: boolean
                    description: Set True if custom field is required field
                  field_options:
                    type: object
                    description: Options available for selection for the field
                    properties:
                      visible_in_portal:
                        type: boolean
                        description: Set true if the field should be visible in portal.
                      date_only:
                        type: boolean
                        description: Set True if time information is needed in custom field Date and Time
                      requester_can_edit:
                        type: boolean
                        description: Set True if Requester can view and edit item if displayed_to_requester is true
                      displayed_to_requester:
                        type: boolean
                        description: Set True if Requester can view item
                      content_name:
                        type: string
                        description: 'Name of the content field to be given, if field type is custom_static_rich_text'
                  choices:
                    type: array
                    description: Choices displayed for a dropdown field
                    uniqueItems: true
                    items:
                      properties:
                        value:
                          type: string
                          minLength: 1
                  field_type:
                    type: string
                    description: custom field type
                    enum:
                      - custom_text
                      - custom_dropdown
                      - custom_checkbox
                      - custom_paragraph
                      - custom_date_time
                      - custom_number
                      - custom_decimal
                      - custom_big_number
                      - custom_url
                      - custom_static_rich_text
                      - custom_multi_select_dropdown
          required:
            - name
            - category_id
            - short_description
            - description
            - visibility
        workspace_id:
          type: number
          description: ID of the workspace to which the service item needs to be created (ESM accounts).
          example: 3
      required:
        - service_item
    solution_folder:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier of the solution folder
          example: 14000234234
        category_id:
          type: integer
          format: int64
          description: Unique identifier of the solution category
          example: 140009808
        name:
          type: string
          description: Name of the solution folder
          example: Network FAQ
        description:
          type: string
          description: Description of the solution folder
          example: Solution Articles for Network related queries
        position:
          type: integer
          format: int32
          description: 'The position of the solution folder in the folder listing. When there are more than 1 folders in a category, then this will determine the position.'
          example: 1
        managed_by_group:
          type: integer
          format: int32
          description: Agent group ID who can edit the articles in the folder
          example: 938453
        managed_by_agent:
          type: integer
          format: int32
          description: The agent ID who can edit the articles in the folder
          example: 349583
        visibility:
          type: object
          description: Users who can view this folder
          properties:
            requester_groups:
              type: array
              items:
                type: integer
                format: int32
              description: Requester group IDs that have access to view this folder
              example:
                - 234234
                - 543444
            agent_groups:
              type: array
              items:
                type: integer
                format: int32
              description: Agent group IDs that have access to view this folder
              example:
                - 234234
                - 543444
            departments:
              type: array
              items:
                type: integer
                format: int32
              description: The department IDs whose members will be able to view the folder
              example:
                - 234234
                - 543444
            all_agents:
              type: boolean
              description: Is True if all agents can view this folder
              example: true
            everyone:
              type: boolean
              description: Is True if all users can view this folder
              example: true
            logged_in_users:
              type: boolean
              description: Is True if all logged in users can view this folder
              example: true
          example:
            requester_groups:
              - 234234
              - 543444
            agent_groups:
              - 498034
              - 349534
            departments:
              - 485792
              - 298732
            all_agents: false
            everyone: false
            logged_in_users: false
        default_folder:
          type: boolean
          description: If this is a default folder shipped with the product. You can create or rename a default folder.
          example: true
    solution_category:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier of the solution category
          example: 1400092834723
        name:
          type: string
          description: Name of the solution category
          example: FAQ
        description:
          type: string
          description: Description of the solution category
          example: Employee FAQ
        position:
          type: integer
          format: int32
          description: 'The position of the solution category in the category listing. When there are more than 1 categories, then this will determine the position.'
          example: 1
        default_category:
          type: boolean
          description: If this is a default category shipped with the product. You cannot add folders to the default category. You cannot delete or rename this category
          example: true
    service_request:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: the id of the item that needs to requested
          example: 140002398473
        quantity:
          type: integer
          format: int32
          description: The number of units of the item needed by the requester. By default it is 1.
          example: 1
        requester_email:
          type: string
          description: the email id of the requester
          example: andrea@freshservice.com
        requested_for_email:
          type: string
          description: the email id of the user for whom this is requested.
          example: andrea@freshservice.com
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
      required:
        - id
        - requester_email
    service_request_update:
      type: object
      properties:
        requester_email:
          type: string
          description: the email id of the requester
          example: andrea@freshservice.com
        requested_for_email:
          type: string
          description: the email id of the user for whom this is requested.
          example: andrea@freshservice.com
        subject:
          type: string
          description: the subject of the ticket
          example: Request for VPN access
        status:
          type: integer
          format: int32
          description: the status of the ticket
          example: 2
        priority:
          type: integer
          format: int32
          description: the priority of the ticket
          example: 2
        description:
          type: string
          description: the description/body of the ticket
          example: Request for VPN access
        agent_id:
          type: integer
          format: int32
          description: the agent ID to whom the ticket is assigned
          example: 19234923
        due_by:
          type: string
          format: date-time
          description: Timestamp that denotes when the ticket is due to be resolved
          example: '2021-11-24T22:15:23'
        group_id:
          type: number
          format: int32
          description: ID of the group to which the ticket has been assigned. The default value is the ID of the group that is associated with the given email_config_id.
          example: 12938743
        source:
          type: number
          format: int32
          description: The channel through which the ticket was created. The default value is 2.
          example: 2
        tags:
          type: array
          items:
            type: string
          description: Tags that have been associated with the ticket.
          example:
            - VPN
            - Network
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
    requester_field:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          description: Unique identifier of the requester field
          example: 140002938423
        editable_in_signup:
          type: boolean
          readOnly: true
          description: Signifies whether the requester can provide a value for the field while signing up.
          example: true
        label:
          type: string
          readOnly: true
          description: Field label shown to agents and admins when editing a requester's profile
          example: Email
        name:
          type: string
          readOnly: true
          description: Name of the requester field
          example: email
        position:
          type: integer
          format: int64
          description: Relative display position of the requester field
          example: 3
        type:
          type: string
          description: 'For custom fields, this signifies the type of value associated with the field (custom_date, custom_text)'
          example: custom_text
        user_field_group_id:
          type: integer
          format: int64
          readOnly: true
          description: Unique identifier of the field group
          example: 101
        requesters_can_edit:
          type: boolean
          readOnly: true
          description: Signifies whether the requester can modify the value for the field while editing their profile
          example: true
        label_for_requesters:
          type: string
          readOnly: true
          description: Field label shown to requesters when viewing their own profile
          example: Email
        required_for_requesters:
          type: boolean
          readOnly: true
          description: Signifies whether the field is mandatory for requesters to complete during sign up or while editing their own profile
          example: true
        displayed_for_requesters:
          type: boolean
          readOnly: true
          description: Signifies whether the field is visible to requesters while editing their own profile
          example: true
        required_for_agents:
          type: boolean
          readOnly: true
          description: Signifies whether the field is mandatory for agents to complete when they create or modify a requester's profile
          example: true
        choices:
          $ref: '#/components/schemas/field_choices'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp at which the department was created
          example: '2021-11-22T16:58:45Z'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp at which the department was last modified
          example: '2021-11-22T16:58:45Z'
    agent_field:
      type: object
      properties:
        name:
          type: string
          readOnly: true
          description: Name of the requester field
          example: first_name
        label_for_admins:
          type: string
          readOnly: true
          description: Field label shown to admins when editing an agent's profile
          example: Employee First Name
        placeholder_for_admins:
          type: string
          readOnly: true
          description: Placeholder text shown to admins when editing an agent's profile
          example: Employee First Name
        mandatory_for_admins:
          type: boolean
          readOnly: true
          description: 'Signifies whether the field is mandatory for an admin when they are creating an agent, or editing an agent''s profile'
          example: true
        label_for_agents:
          type: string
          readOnly: true
          description: Field label shown to agents when editing their own profile
          example: First Name
        placeholder_for_agents:
          type: string
          readOnly: true
          description: Placeholder text shown to agents when editing their own profile
          example: First Name
        visible_to_agents:
          type: boolean
          readOnly: true
          description: Signifies whether the field is visible to agents when they are editing their own profile
          example: true
        editable_by_agents:
          type: boolean
          readOnly: true
          description: Signifies whether the field is editable by agents when they are editing their own profile
          example: true
        mandatory_for_agents:
          type: boolean
          readOnly: true
          description: Signifies whether the field is mandatory for agents when they are editing their own profile
          example: true
        position:
          type: integer
          format: int64
          description: Relative display position of the agent field
          example: 2
        type:
          type: string
          description: 'For custom fields, this signifies the type of value associated with the field (custom_date, custom_text)'
          example: custom_text
        user_field_group_id:
          type: integer
          format: int64
          readOnly: true
          description: Unique identifier of the field group
          example: 101
        choices:
          $ref: '#/components/schemas/field_choices'
    service_item_field:
      properties:
        id:
          type: integer
          format: int64
          description: ID of the field
          example: 1400023987423
        name:
          type: string
          description: blaml
          example: employee_id
        label:
          type: string
          description: Label of the field that requesters will see
          example: Employee ID
        service_item_id:
          type: number
          format: int64
          description: ID of the item
          example: 14000283742
        field_type:
          type: string
          description: Type of field
          example: text
        position:
          type: number
          format: int64
          description: Position of the field in the form
          example: 1
        required:
          type: boolean
          description: Set to true if this field is madatory for requesters to fill
          example: true
        visible_in_the_portal:
          type: boolean
          description: Set to true if this field is visible to requesters
          example: true
        field_choices:
          $ref: '#/components/schemas/field_choices'
    ticket:
      title: Ticket
      type: object
      x-tags:
        - Ticket
      additionalProperties: false
      properties:
        cc_emails:
          description: Email addresses added in the 'cc' field of the incoming ticket email
          readOnly: false
          type: array
          items:
            type: string
          example:
            - andrea@freshservice.com
            - john.doe@freshservice.com
        fwd_emails:
          description: Email addresses added while forwarding a ticket
          readOnly: true
          type: array
          items:
            type: string
          example:
            - andrea@freshservice.com
            - john.doe@freshservice.com
        reply_cc_emails:
          description: Email addresses added while replying to a ticket
          readOnly: true
          type: array
          items:
            type: string
          example:
            - andrea@freshservice.com
            - john.doe@freshservice.com
        to_emails:
          description: Email addresses to which the ticket was originally sent.
          readOnly: true
          type: array
          items:
            type: string
          example:
            - andrea@freshservice.com
            - john.doe@freshservice.com
        bcc_emails:
          description: Email address added in the 'bcc' field of the outgoing ticket email.
          readOnly: true
          type: array
          items:
            type: string
          example:
            - andrea@freshservice.com
            - john.doe@freshservice.com
        fr_escalated:
          description: Set to 'true' if the ticket has been escalated as a result of the first response time being breached
          readOnly: true
          type: boolean
          example: true
        spam:
          description: Set to 'true' if the ticket has been marked as spam
          readOnly: true
          type: boolean
          example: true
        priority:
          description: Priority of the Freshservice Ticket. Low -> 1. Medium -> 2. High -> 3. Urgent -> 4.
          readOnly: false
          type: number
          example: 2
        urgency:
          description: Ticket urgency.
          readOnly: false
          type: number
          example: 2
        impact:
          description: Ticket impact.
          readOnly: false
          type: number
          example: 2
        deleted:
          description: true if ticket is moved to trash
          readOnly: true
          type: boolean
          example: true
        requester_id:
          description: User ID of the requester.
          readOnly: false
          type: number
          example: 1400023894234
        source:
          description: The channel through which the ticket was created. Email -> 1 Portal -> 2 Phone -> 3 Chat -> 4 Feedback widget -> 5 Yammer -> 6 AWS Cloudwatch -> 7 Pagerduty -> 8 Walkup -> 9 Slack -> 10
          readOnly: false
          type: number
          example: 1
        status:
          description: Status of the Ticket. Open -> 2 Pending -> 3 Resolved -> 4 Closed -> 5
          readOnly: false
          type: number
          example: 2
        subject:
          description: Subject of the Ticket
          readOnly: false
          type: string
          example: Printer not connected
        category:
          description: Ticket category
          readOnly: false
          type: string
          nullable: true
          example: Hardware
        sub_category:
          description: Ticket sub category
          readOnly: false
          type: string
          nullable: true
          example: Peripherals
        item_category:
          description: Ticket item category
          readOnly: false
          type: string
          nullable: true
          example: Router
        id:
          description: Unique ID of the ticket
          readOnly: true
          type: number
          example: 14000239432
        type:
          description: 'Helps categorize the ticket according to the different kinds of issues your support team deals with. [Support for only type ‘incident’ as of now]'
          type: string
          example: Incident
        email_config_id:
          description: 'ID of email config which is used for this ticket. (i.e., helpdesk@yourcompany.com/support@yourcompany.com)'
          type: number
          example: 14000239432
        group_id:
          description: ID of the group to which the ticket has been assigned.
          type: number
          nullable: true
          example: 14000239432
        requested_for_id:
          description: Requested for ID
          readOnly: true
          type: number
          example: 14000239432
        responder_id:
          description: ID of the agent to whom the ticket has been assigned.
          type: number
          nullable: true
          example: 14000239432
        sla_policy_id:
          description: ID of the SLA policy for this ticket
          type: number
          readOnly: true
          example: 14000239432
        department_id:
          description: ID of the department to which this ticket belongs.
          type: number
          example: 14000239432
        due_by:
          type: string
          format: date-time
          readOnly: false
          description: Timestamp that denotes when the ticket is due to be resolved
          example: '2021-11-22T16:58:45Z'
        fr_due_by:
          type: string
          format: date-time
          readOnly: false
          description: Timestamp that denotes when the first response is due
          example: '2021-11-22T16:58:45Z'
        is_escalated:
          readOnly: true
          type: boolean
          example: true
        description:
          type: string
          example: <div>How do I connect printer?</div>
        description_text:
          description: Content of the ticket in plain text
          readOnly: true
          type: string
          example: How do I connect printer?
        custom_fields:
          type: object
          nullable: true
          description: Key value pairs containing the names and values of custom fields
          example:
            choice: First Choice
            employee_id: 1234
            department: null
            resigned: false
            workdays:
              - Monday
              - Tuesday
              - Wednesday
              - Thursday
              - Friday
        created_at:
          description: The timestamp at which the ticket was created
          type: string
          readOnly: false
          format: date-time
          example: '2021-11-22T16:58:45Z'
        updated_at:
          description: The timestamp at which the ticket was updated
          type: string
          readOnly: false
          format: date-time
          example: '2021-11-22T16:58:45Z'
        resolved_at:
          type: string
          format: date-time
          readOnly: false
          description: The timestamp at which the ticket was resolved
          example: '2021-11-22T16:58:45Z'
        closed_at:
          type: string
          format: date-time
          readOnly: false
          description: The timestamp at which the ticket was closed
          example: '2021-11-22T16:58:45Z'
        tags:
          type: array
          description: Tags that have been associated with the ticket
          items:
            type: string
          example:
            - Hardware
            - Network
            - VPN
        attachments:
          type: array
          description: Ticket attachments. The total size of these attachments cannot exceed 15MB
          items:
            $ref: '#/components/schemas/attachment'
          example:
            - id: 14000884384
              content_type: application/pdf
              size: 1024
              name: doc1.pdf
              attachment_url: 'https://s3.amazonaws.com/fs/doc1.pdf'
        change_initiating_ticket:
          description: Display id of the change cause which is to be associated with the ticket
          type: object
          properties:
            display_id:
              type: integer
          example:
            display_id: 23
        change_initiated_by_ticket:
          description: Display id of the change which is to be associated with the ticket
          type: object
          properties:
            display_id:
              type: integer
          example:
            display_id: 12
        changes_initiating_ticket:
          description: Array of Display Ids of the change causes which are to be associated with the ticket
          type: object
          properties:
            display_id:
              type: array
              items:
                type: integer
          example:
            display_id:
              - 1
              - 2
              - 3
        changes_initiated_by_ticket:
          description: Array of Display Ids of the changes which are to be associated with the ticket
          type: object
          properties:
            display_id:
              type: array
              items:
                type: integer
          example:
            display_id:
              - 4
              - 5
              - 6
        email:
          description: 'Email address of the requester. If no contact exists with this email address in Freshservice, it will be added as a new contact.'
          type: string
          example: andrea@freshservice.com
        phone:
          description: 'Phone number of the requester. If no contact exists with this phone number in Freshservice, it will be added as a new contact. If the phone number is set and the email address is not, then the name attribute is mandatory.'
          type: string
          example: '1234567890'
    move_ticket:
      type: object
      title: MoveTicket
      x-tags:
        - Tickets
      additionalProperties: false
      properties:
        workspace_id:
          type: integer
          format: int64
          example: 1
        group_id:
          description: ID of the group to which the ticket has been assigned.
          type: number
          nullable: true
          example: 14000239432
        responder_id:
          description: ID of the agent to whom the ticket has been assigned.
          type: number
          nullable: true
          example: 14000239432
      required:
        - workspace_id
    ticket_form_fields:
      title: TicketFormFields
      type: object
      x-tags:
        - Ticket
      additionalProperties: false
      properties:
        id:
          type: integer
          example: 54281
        label:
          type: string
          example: Workspace
        description:
          type: string
          example: Default Workspace
        field_type:
          type: string
          example: default_workspace
        created_at:
          type: string
          format: date-time
          example: '2023-01-19T17:25:21Z'
        updated_at:
          type: string
          format: date-time
          example: '2023-01-27T16:35:34Z'
        position:
          type: integer
          example: 0
        required_for_closure:
          type: boolean
          example: true
        name:
          type: string
          example: workspace_id
        default_field:
          type: boolean
          example: true
        required_for_agents:
          type: boolean
          example: true
        customers_can_edit:
          type: boolean
          example: true
        label_for_customers:
          type: string
          example: Issue related to
        required_for_customers:
          type: boolean
          example: false
        displayed_to_customers:
          type: boolean
          example: true
        belongs_to_section:
          type: boolean
          example: false
        choices:
          type: array
          items:
            type: string
          example: []
        nested_fields:
          type: array
          items:
            type: object
          example: []
        sections:
          type: array
          items:
            type: object
          example: []
        workspace_id:
          type: integer
          nullable: true
          example: null
    ticket_activities:
      title: TicketFormFields
      type: object
      x-tags:
        - Ticket
      additionalProperties: false
      properties:
        activities:
          type: array
          items:
            type: object
            properties:
              actor:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1434
                  name:
                    type: string
                    example: Rubeus Hagrid
              content:
                type: string
                example: restored this ticket from trash
              sub_contents:
                type: array
                items:
                  type: string
                example:
                  - set Department as Development and set Group as Capacity Management Team
                  - Workflow Ends
              created_at:
                type: string
                format: date-time
                example: '2021-06-15T05:28:10Z'
    place_request:
      type: object
      title: PlaceRequest
      x-tags:
        - Tickets
      additionalProperties: false
      properties:
        email:
          description: Email id of the requester
          type: string
          example: andrea@freshservice.com
        quantity:
          description: Quantity needed by the requested
          type: integer
          example: 1
        parent_ticket_id:
          description: Display ID of the parent Service Request/Case/Query/Issue/Request/Incident/Major Incident
          type: integer
          example: 1234
        requested_for:
          description: Email id of the requester on whose behalf the service request is created
          type: string
          example: andrea@freshservice.com
        child_items:
          description: Service items that are included as child items. Provide the display id as service_item_id for each child item.
          type: array
        custom_fields:
          description: Values of custom fields present in the service item form
          type: array
    place_request_response:
      title: PlaceRequestResponse
      type: object
      x-tags:
        - Ticket
      additionalProperties: false
      properties:
        cc_emails:
          type: array
          items:
            type: string
          example:
            - sample@freshservice.com
        fwd_emails:
          type: array
          items:
            type: string
          example: []
        reply_cc_emails:
          type: array
          items:
            type: string
          example: []
        fr_escalated:
          type: boolean
          example: false
        spam:
          type: boolean
          example: false
        email_config_id:
          type: integer
          nullable: true
          example: null
        group_id:
          type: integer
          nullable: true
          example: null
        priority:
          type: integer
          example: 2
        requester_id:
          type: integer
          example: 14000044687
        responder_id:
          type: integer
          nullable: true
          example: null
        source:
          type: integer
          example: 2
        status:
          type: integer
          example: 2
        subject:
          type: string
          example: 'Request for  : xx xx'
        to_emails:
          type: array
          items:
            type: string
          nullable: true
          example: null
        sla_policy_id:
          type: integer
          example: 14000001854
        department_id:
          type: integer
          example: 14000015070
        id:
          type: integer
          example: 49
        type:
          type: string
          example: Service Request
        due_by:
          type: string
          format: date-time
          example: '2020-03-23T21:00:00Z'
        fr_due_by:
          type: string
          format: date-time
          example: '2020-03-23T20:00:00Z'
        is_escalated:
          type: boolean
          example: false
        description:
          type: string
          example: ''
        description_text:
          type: string
          example: ''
        custom_fields:
          type: object
          properties:
            reach:
              type: string
              nullable: true
              example: null
        created_at:
          type: string
          format: date-time
          example: '2020-03-22T15:31:39Z'
        updated_at:
          type: string
          format: date-time
          example: '2020-03-22T15:31:39Z'
        urgency:
          type: integer
          example: 1
        impact:
          type: integer
          example: 1
        category:
          type: string
          nullable: true
          example: null
        sub_category:
          type: string
          nullable: true
          example: null
        item_category:
          type: string
          nullable: true
          example: null
        deleted:
          type: boolean
          example: false
        attachments:
          type: array
          items:
            type: object
          example: []
        approval_status:
          type: string
          nullable: true
          example: null
        approval_status_name:
          type: string
          example: Not Requested
        workspace_id:
          type: integer
          example: 2
    requested_item:
      title: RequestedItem
      type: object
      x-tags:
        - Ticket
      additionalProperties: false
      properties:
        custom_fields:
          type: object
          additionalProperties:
            type: string
        id:
          type: integer
          example: 1
        created_at:
          type: string
          format: date-time
          example: '2020-03-10T11:45:47Z'
        updated_at:
          type: string
          format: date-time
          example: '2020-03-10T11:45:47Z'
        quantity:
          type: integer
          example: 1
        loaned:
          type: boolean
          example: false
        cost_per_request:
          type: number
          format: float
          example: 0
        remarks:
          type: string
          nullable: true
          example: null
        delivery_time:
          type: string
          format: date-time
          nullable: true
          example: null
        is_parent:
          type: boolean
          example: true
        service_item_id:
          type: integer
          example: 30
        item_id:
          type: integer
          example: 1
        from_date:
          type: string
          format: date-time
          example: '2021-11-26T11:30:00Z'
        to_date:
          type: string
          format: date-time
          example: '2021-11-29T11:30:00Z'
        service_request_id:
          type: integer
          example: 1
        stage:
          type: object
          properties:
            id:
              type: integer
              example: 2
            name:
              type: string
              example: Delivered
        fulfilled:
          type: boolean
          example: false
        cost:
          type: number
          format: float
          nullable: true
          example: null
        item:
          $ref: '#/components/schemas/service_item'
    csat_response:
      title: CSATResponse
      type: object
      properties:
        id:
          type: integer
          example: 1
        overall_rating:
          type: integer
          example: 101
        overall_rating_text:
          type: string
          example: Awesome
        primary_question:
          type: string
          example: Share your experience working with us.
        questionnaire_responses:
          type: array
          items:
            type: object
            properties:
              question:
                type: object
                properties:
                  question_text:
                    type: string
                    example: Were we able to resolve your issue?
              answers:
                type: array
                items:
                  type: object
                  properties:
                    answer_text:
                      type: string
                      example: 'Yes'
        created_at:
          type: string
          format: date-time
          example: '2021-02-01T12:22:22.343Z'
        updated_at:
          type: string
          format: date-time
          example: '2021-02-01T12:22:29.343Z'
      required:
        - id
        - overall_rating
        - overall_rating_text
        - primary_question
        - questionnaire_responses
        - created_at
        - updated_at
    change:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          description: Unique identifier of the change
          example: 140002342342
        requester_id:
          type: integer
          format: int64
          readOnly: false
          description: Unique identifier of the initiator of the change
          example: 14000234234
        agent_id:
          type: integer
          format: int64
          readOnly: false
          description: Unique identifier of the agent to whom the change is assigned
          example: 1400023498
        group_id:
          type: integer
          format: int64
          readOnly: false
          description: Unique identifier of the agent group to which the change is assigned
          example: 1400097572
        priority:
          type: integer
          format: string
          readOnly: false
          example: 2
          enum:
            - 1
            - 2
            - 3
            - 4
          description: 'Priority of the change 1-Low, 2-Medium, 3-High, 4-Urgent'
        impact:
          type: integer
          format: string
          readOnly: false
          example: 1
          enum:
            - 1
            - 2
            - 3
          description: 'Impact of the change 1-Low, 2-Medium, 3-High'
        status:
          type: integer
          format: int32
          readOnly: false
          example: 1
          description: 'Status identifier of the change. Open -> 1, Planning -> 2, Approval -> 3, Pending Release -> 4, Pending Review -> 5, closed -> 6'
        risk:
          type: integer
          format: string
          readOnly: false
          example: 1
          enum:
            - 1
            - 2
            - 3
            - 4
          description: 'Risk of the change 1-Low, 2-Medium, 3-High, 4-Very High'
        change_type:
          type: integer
          format: string
          readOnly: false
          enum:
            - 1
            - 2
            - 3
            - 4
          description: 'Type of the change 1-minor, 2-standard, 3-major, 4-emergency'
          example: 1
        approval_status:
          type: integer
          format: string
          readOnly: true
          enum:
            - 1
            - 2
            - 3
            - 4
          description: 'Approval status of the change 1-Requested, 2-Approved, 3-Rejected 4-Not_Requested'
          example: 1
        subject:
          type: string
          readOnly: false
          description: Subject of the change
          example: Replace Macbook
        description:
          description: Short description of the change in HTML format
          type: string
          example: <p>Replace damaged Macbook</p>
        description_text:
          description: Short description of the change in plain text format
          type: string
          readOnly: true
          example: Replace damaged Macbook
        planned_start_date:
          type: string
          format: date-time
          readOnly: false
          description: Timestamp at which change is starting
          example: '2021-11-24T11:30:00Z'
        planned_end_date:
          type: string
          format: date-time
          readOnly: false
          description: Timestamp at which change is ending
          example: '2021-11-24T11:30:00Z'
        project_id:
          type: integer
          format: int64
          readOnly: false
          description: Unique ID of the associated project
          example: 1400023894
        department_id:
          type: integer
          format: int64
          readOnly: false
          description: Unique ID of the department initiating the change
          example: 14000495482
        category:
          type: string
          readOnly: false
          description: Category of the change
          example: Hardware
        sub_category:
          type: string
          readOnly: false
          description: Sub-category of the change
          example: Computer
        item_category:
          type: string
          readOnly: false
          description: Item of the change
          example: Mac
        created_at:
          type: string
          format: date-time
          readOnly: false
          description: Timestamp at which change was created
          example: '2021-11-22T16:58:45Z'
        updated_at:
          type: string
          format: date-time
          readOnly: false
          description: Timestamp at which change was last updated
          example: '2021-11-22T16:58:45Z'
        associated_release:
          type: integer
          format: int64
          readOnly: true
          description: Unique ID of the associated release
          example: 140004343
        assets:
          type: array
          description: Assets associated with the Ticket
          items:
            $ref: '#/components/schemas/asset'
          example:
            - id: 14000234324
              display_id: 1453
              name: Hardware-Monitor
              asset_type_id: 14000284324
        associated_problems:
          type: array
          readOnly: true
          description: Unique IDs of the problems associated with the change request
          items:
            type: integer
            format: int64
          example:
            - 140002394874
            - 140003948543
        incidents_caused_by_change:
          type: array
          readOnly: true
          description: Unique IDs of the incidents caused by this change request
          items:
            type: integer
            format: int64
          example:
            - 1400034598
            - 1400039485
        tickets_initiating_change:
          type: array
          readOnly: true
          description: Unique IDs of the tickets initiating this change request
          items:
            type: integer
            format: int64
          example:
            - 1400023984
            - 1400034984
        associated_project:
          type: integer
          format: int64
          readOnly: true
          description: Id of the associated release
          example: 140002394874
        custom_fields:
          type: object
          additionalProperties:
            type: string
          description: Key value pairs containing the names and values of custom fields
          example:
            change_choices: First Choice
            state: TX
        email:
          description: Email id of the requester
          type: string
          example: andrea@freshservice.com
        planning_fields:
          $ref: '#/components/schemas/planning_fields'
        maintenance_window:
          $ref: '#/components/schemas/change_window'
        black_out_window:
          $ref: '#/components/schemas/change_window'
        attachments:
          type: array
          description: URLs of attachments attached to the Change request
          items:
            $ref: '#/components/schemas/note/properties/attachments/items'
    planning_fields:
      type: object
      properties:
        reason_for_change:
          type: object
          properties:
            description:
              type: string
              readOnly: false
              description: Reason for change
              example: <p>Reason for change</p>
            description_text:
              description: Reason for change in plain text format
              type: string
              readOnly: true
              example: Reason for Change
          example:
            description: <div>Reason for change</div>
            description_text: Reason for change
        impact:
          type: object
          properties:
            description:
              type: string
              readOnly: false
              description: Impact
              example: <p>Impact</p>
            description_text:
              description: Impact in plain text format
              type: string
              readOnly: true
              example: Impact
          example:
            description: <div>Impact</div>
            description_text: Impact
        rollout_plan:
          type: object
          properties:
            description:
              type: string
              readOnly: false
              description: Rollout Plan
              example: <div>Rollout plan</div>
            description_text:
              description: Rollout plan in plain text format
              type: string
              readOnly: true
              example: Rollout Plan
          example:
            description: <div>Rollout plan</div>
            description_text: Rollout Plan
        backout_plan:
          type: object
          properties:
            description:
              type: string
              readOnly: false
              description: Backout Plan
              example: <div>Backout plan</div>
            description_text:
              description: Backout plan in plain text format
              type: string
              readOnly: true
              example: Backout Plan
          example:
            description: <div>Backout plan</div>
            description_text: Backout Plan
      example:
        reason_for_change:
          description: <div>Reason for change</div>
          description_text: Reason for change
        impact:
          description: <div>Impact</div>
          description_text: Impact
        rollout_plan:
          description: <div>Rollout plan</div>
          description_text: Rollout Plan
        backout_plan:
          description: <div>Backout plan</div>
          description_text: Backout Plan
    change_window:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: false
          description: Unique identifier of the Change Window
          example: 140009348572
        name:
          type: string
          readOnly: true
          description: Name of the Change Window
          example: Router firmware upgrade
        description:
          type: string
          readOnly: true
          description: Description of the Change Window
          example: Router firmware upgrade
        window_start_date:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp at which Change Window is starting
          example: '2021-11-24T11:30:00Z'
        window_end_date:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp at which Change Window is ending
          example: '2021-11-25T11:30:00Z'
      example:
        id: 140009348572
        name: Router firmware upgrade
        description: Router firmware upgrade
        window_start_date: '2021-11-24T11:30:00Z'
        window_end_date: '2021-11-25T11:30:00Z'
    conversation:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          description: Unique ID of the conversatoin
          example: 140003948573
        user_id:
          type: integer
          format: int64
          readOnly: true
          description: Unique ID of the user who created the note
          example: 14000495822
        source:
          type: integer
          format: int32
          readOnly: true
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
          description: 'Source of the note, 0-email, 1-form, 2-note, 3-status, 4-meta, 5-feedback, 6-forward_email)'
          example: 1
        incoming:
          type: boolean
          readOnly: false
          description: 'Set to true if a particular conversation should appear as being created from the outside (i.e., not through the web portal)'
          example: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Date time at which the conversation is created
          example: '2021-11-22T16:58:45Z'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Date time at which the conversation is updated
          example: '2021-11-22T16:58:45Z'
        body:
          type: string
          readOnly: false
          example: <p>Thanks for swift response</p>
        body_text:
          type: string
          readOnly: false
          example: Thanks for swift response
        attachments:
          type: array
          readOnly: true
          items:
            required:
              - id
              - content_type
              - size
              - name
              - attachment_url
            allOf:
              - $ref: '#/components/schemas/attachment'
          example:
            - id: 14000884384
              content_type: application/pdf
              size: 1024
              name: doc1.pdf
              attachment_url: 'https://s3.amazonaws.com/fs/doc1.pdf'
        change_id:
          type: integer
          format: int64
          readOnly: false
          description: Unique ID of the change to which the note belongs
          example: 140003498
        ticket_id:
          type: integer
          format: int64
          readOnly: false
          description: Unique ID of the ticket to which the note belongs
          example: 140002938232
        from_email:
          type: string
          readOnly: false
          example: andrea@freshservice.com
        to_emails:
          type: array
          readOnly: false
          items:
            type: string
          description: Addresses to which the conversation must be sent
          example:
            - andrea@freshservice.com
            - john.doe@freshservice.com
        cc_emails:
          type: array
          readOnly: false
          items:
            type: string
          description: Addresses which must be copied on while sending the conversation
          example:
            - andrea@freshservice.com
            - john.doe@freshservice.com
        bcc_emails:
          type: array
          readOnly: false
          items:
            type: string
          description: Addresses to which a blind copy must be sent
          example:
            - andrea@freshservice.com
            - john.doe@freshservice.com
    ticket_note:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          description: Unique ID of the note
          example: 14000398432
        user_id:
          type: integer
          format: int64
          readOnly: true
          description: Unique ID of the user who created the note
          example: 1400034853
        private:
          type: boolean
          readOnly: false
          description: Set to true if the note is private. The default value is true.
          example: true
        incoming:
          type: boolean
          readOnly: false
          description: 'Set to true if the note should appear as being created from the outside (i.e., not through the web portal)'
          example: true
        notify_emails:
          type: array
          readOnly: false
          items:
            type: string
          description: Addresses to which the note must be notified to
          example:
            - andrea@freshservice.com
            - john.doe@freshservice.com
        body:
          type: string
          readOnly: false
          description: The body of the note in HTML format
          example: <p>Developers debugging the isue</p>
        body_text:
          type: string
          readOnly: false
          description: The body of the note in plain text format
          example: Developers debugging the issue
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Date time at which the note was created
          example: '2021-11-22T16:58:45Z'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Date time at which the note was updated
          example: '2021-11-22T16:58:45Z'
        attachments:
          type: array
          items:
            required:
              - id
              - content_type
              - size
              - name
              - attachment_url
            allOf:
              - $ref: '#/components/schemas/attachment'
          example:
            - id: 14000884384
              content_type: application/pdf
              size: 1024
              name: doc1.pdf
              attachment_url: 'https://s3.amazonaws.com/fs/doc1.pdf'
    note:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          description: Unique ID of the note
          example: 14000345353
        user_id:
          type: integer
          format: int64
          readOnly: true
          description: Unique ID of the user who created the note
          example: 140004534
        notify_emails:
          type: array
          readOnly: false
          items:
            type: string
          description: Addresses to which the note must be notified to
          example:
            - andrea@freshservice.com
            - john.doe@freshservice.com
        body:
          type: string
          readOnly: false
          description: The body of the note in HTML format
          example: <p>Assigned to IT team</p>
        body_text:
          type: string
          readOnly: false
          description: The body of the note in plain text format
          example: Assigned to IT team
        created_at:
          type: string
          format: date-time
          readOnly: false
          description: Date time at which the note was created
          example: '2021-11-22T16:58:45Z'
        updated_at:
          type: string
          format: date-time
          readOnly: false
          description: Date time at which the note was updated
          example: '2021-11-22T16:58:45Z'
        attachments:
          type: array
          description: URLs of attachments attached to the notes
          items:
            title: Attachment
            type: object
            additionalProperties: false
            properties:
              id:
                type: integer
                format: int64
                readOnly: true
                description: Auto increment value
                example: 14000884384
              content_type:
                type: string
                readOnly: true
                enum:
                  - /doc
                  - /docx
                  - /pdf
                  - /txt
                  - /pps
                  - /ppsx
                  - /ppt
                  - /pptx
                  - /jpeg
                  - /jpg
                  - /png
                  - /tif
                  - /tiff
                  - /xls
                  - /xlsx
                  - /mp3
                  - /mp4
                  - /wav
                  - /zip
                  - /csv
                  - /msg
                  - /oft
                  - /json
                description: Supported formats of attachment
                example: /pdf
              size:
                type: number
                maximum: 41943040
                readOnly: true
                description: Size of the attached files should not exceed 40MB (41943040 Bytes)
                example: 1024
              name:
                type: string
                readOnly: true
                description: Name of the attachment
                example: doc1.pdf
              attachment_url:
                type: string
                readOnly: true
                description: URL of the attachment
                example: 'https://s3.amazonaws.com/fs/doc1.pdf'
              created_at:
                description: Timestamp at which the attachment was created
                type: string
                readOnly: true
                format: date-time
                example: '2021-11-22T16:58:45Z'
              updated_at:
                description: Timestamp at which the attachment was updated
                type: string
                readOnly: true
                format: date-time
                example: '2021-11-22T16:58:45Z'
              canonical_url:
                description: Canonical URL of the attachment
                type: string
                readOnly: true
                example: 'https://example.com/attachments/14000884384'
    release_note:
      allOf:
        - $ref: '#/components/schemas/note'
        - type: object
          properties:
            created_at:
              type: string
              format: date-time
              readOnly: true
              description: Date time at which the note was created
              example: '2021-11-22T16:58:45Z'
            updated_at:
              type: string
              format: date-time
              readOnly: true
              description: Date time at which the note was updated
              example: '2021-11-22T16:58:45Z'
    reply:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          description: Unique ID of the reply
          example: 14000982343
        user_id:
          type: integer
          format: int64
          readOnly: true
          description: Unique ID of the user who created the reply
          example: 1400023423
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp at which the note is created
          example: '2021-11-22T16:58:45Z'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp at which the note is updated
          example: '2021-11-22T16:58:45Z'
        body:
          type: string
          readOnly: false
          description: The body of the note in HTML format.
          example: <p>Thanks for resolving the issue</p>
        body_text:
          type: string
          readOnly: false
          description: The body of the note in plain text format
          example: Thanks for resolving the issue
        attachments:
          type: array
          items:
            required:
              - id
              - content_type
              - size
              - name
              - attachment_url
            allOf:
              - $ref: '#/components/schemas/attachment'
          example:
            - id: 14000884384
              content_type: application/pdf
              size: 1024
              name: doc1.pdf
              attachment_url: 'https://s3.amazonaws.com/fs/doc1.pdf'
        ticket_id:
          type: integer
          format: int64
          readOnly: false
          description: Unique ID of the ticket to which the reply belongs
          example: 1012
        from_email:
          type: string
          readOnly: false
          example: andrea@freshservice.com
        to_emails:
          type: array
          readOnly: false
          items:
            type: string
          description: Addresses to which the conversation must be sent
          example:
            - john.doe@freshservice.com
            - david@freshservice.com
        cc_emails:
          type: array
          readOnly: false
          items:
            type: string
          description: Addresses which must be copied on while sending the conversation
          example:
            - andrea@freshservice.com
            - john.doe@freshservice.com
        bcc_emails:
          type: array
          readOnly: false
          items:
            type: string
          description: Addresses to which a blind copy must be sent
          example:
            - andrea@freshservice.com
            - david@freshservice.com
    attachment:
      title: Attachment
      type: object
      x-tags:
        - Ticket
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          description: Auto increment value
          example: 14000884384
        content_type:
          type: string
          readOnly: false
          example: application/pdf
        size:
          type: number
          readOnly: true
          description: Size of the attached file
          example: 1024
        name:
          type: string
          readOnly: false
          description: Name of the attachment
          example: doc1.pdf
        attachment_url:
          type: string
          readOnly: false
          description: URL of the attachment
          example: 'https://s3.amazonaws.com/fs/doc1.pdf'
        created_at:
          description: Timestamp at which the attachment was created
          type: string
          readOnly: true
          format: date-time
          example: '2021-11-22T16:58:45Z'
        updated_at:
          description: Timestamp at which the attachment was updated
          type: string
          readOnly: true
          format: date-time
          example: '2021-11-22T16:58:45Z'
        application_id:
          type: integer
          format: int64
          description: Application id of the provider
          example: 20
        provider:
          type: string
          description: Provider of the attachment
          example: dropbox
    task:
      type: object
      properties:
        created_by:
          type: integer
          format: int64
          description: Unique ID of the user who created the task
          example: 14000048691
          readOnly: true
        agent_id:
          type: integer
          format: int64
          description: Id of the agent to whom the task is assigned
          example: 14000043616
          readOnly: true
        id:
          type: integer
          format: int64
          description: Unique ID of the task
          example: 48
          readOnly: true
        status:
          type: integer
          format: int64
          enum:
            - 1
            - 2
            - 3
            - 4
          description: 'Status of the task, 1-Open, 2-In Progress, 3-Completed'
          example: 1
          readOnly: true
        parent_id:
          type: integer
          format: int64
          description: Unique ID of the parent entity to which the task belongs
          example: 589
          readOnly: true
        parent_type:
          type: string
          readOnly: false
          description: 'Type of the parent entity - [Ticket, Problem, Change, Release, Project]'
          example: Ticket
        due_date:
          type: string
          format: date-time
          readOnly: false
          description: Due date of the task
          example: '2021-11-24T11:30:00Z'
        notify_before:
          type: integer
          format: int64
          readOnly: false
          description: Time in seconds before which notification is sent prior to due date
          example: 3600
        title:
          type: string
          readOnly: false
          description: Title of the task
          example: Renew license
        description:
          type: string
          readOnly: false
          description: Description of the task
          example: Renew Software license
        created_at:
          type: string
          format: date-time
          description: Timestamp at which the task was created
          example: '2021-11-22T16:58:45Z'
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: Timestamp at which the task was updated
          example: '2021-11-22T16:58:45Z'
          readOnly: true
        closed_at:
          type: string
          format: date-time
          description: Timestamp at which the task was closed
          example: '2021-11-22T16:58:45Z'
          readOnly: true
        group_id:
          type: integer
          format: int64
          description: Unique ID of the group to which the task is assigned
          example: 14000184589
          readOnly: true
        start_date:
          type: string
          format: date-time
          readOnly: false
          description: Timestamp at which the task is started
          example: '2021-11-22T16:58:45Z'
      title: ''
    time_entry:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          description: Unique ID of the time entry
          example: 14702899
        task_id:
          type: integer
          format: int64
          readOnly: false
          description: Unique ID of the task associated with the time entry
          example: 45
        parent_id:
          type: integer
          format: int64
          readOnly: true
          description: Unique ID of the parent entity to which the time entry belongs
          example: 500
        parent_type:
          type: string
          readOnly: false
          description: 'Type of the parent entity - [Ticket, Problem, Change, Release, Project]'
          example: Ticket
        start_time:
          type: string
          format: date-time
          readOnly: false
          description: Time at which the timer started
          example: '2021-10-15T12:31:42Z'
        time_spent:
          type: string
          readOnly: false
          description: Duration of time spent in seconds
          example: '10:15'
        timer_running:
          type: boolean
          readOnly: false
          description: 'true if timer is running, false otherwise'
          example: true
        billable:
          type: boolean
          readOnly: false
          description: 'true if billable, false otherwise'
          example: true
        agent_id:
          type: integer
          format: int64
          readOnly: false
          description: Unique ID of the user who created the time entry
          example: 14007423
        note:
          type: string
          format: text
          readOnly: false
          description: Description note of the time entry
          example: Spent time on task
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp at which the time entry is created
          example: '2021-10-15T12:31:42Z'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Time stamp at which the time entry is updated
          example: '2021-10-15T12:31:42Z'
        executed_at:
          type: string
          format: date-time
          readOnly: true
          description: Date time at which the time entry is executed
          example: '2021-10-15T12:31:00Z'
        custom_fields:
          type: object
          additionalProperties:
            type: string
          description: Key value pairs containing the names and values of custom fields
          example:
            field1: Value 1
            field2: Value 2
    project:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          description: Unique identifier of the project
          example: 13298
        title:
          type: string
          description: Name of the project
          example: Solution Articles for Ticket
        description:
          type: string
          description: Description about the project in HTML format
          example: <div>Publish solution articles for Ticket</div>
        description_text:
          type: string
          readOnly: true
          description: Description about the project in text format
          example: Publish solution articles for Ticket
        status:
          type: integer
          format: int32
          description: Status of the project
          example: 2
        priority:
          type: integer
          format: int32
          description: Priority of the project
          example: 1
        owner_id:
          type: integer
          format: int64
          description: Owner of the project
          example: 43423
        user_id:
          type: integer
          format: int64
          readOnly: true
          description: User who created the project
          example: 123123
        start_date:
          type: string
          format: date-time
          description: Start date of the project
          example: '2021-04-01T07:16:45Z'
        end_date:
          type: string
          format: date-time
          description: End date of the project
          example: '2021-06-30T07:16:45Z'
        archived:
          type: boolean
          readOnly: true
          description: Project archived status
          example: true
        closed_at:
          type: string
          format: date-time
          readOnly: true
          description: Closed time of the project
          example: '2021-06-11T07:16:45Z'
    project_task:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          description: Unique identifier of the task
          example: 1001
        project_id:
          type: integer
          format: int64
          readOnly: true
          description: Unique identifier of the project
          example: 10
        title:
          type: string
          description: Name of the task
          example: Clear backlog
        description:
          type: string
          description: Description about the task
          example: Clear backlog
        status:
          type: integer
          format: int32
          description: Status of the task
          example: 1
        owner_id:
          type: integer
          format: int64
          description: Owner of the task
          example: 984793
        user_id:
          type: integer
          format: int64
          readOnly: true
          description: Agent who created the task
          example: 23423423
        closed_at:
          type: string
          format: date-time
          readOnly: true
          description: Closed time of the task
          example: '2021-06-14T07:16:45Z'
        start_date:
          type: string
          format: date-time
          description: Start date of the task
          example: '2021-06-14T07:16:45Z'
        end_date:
          type: string
          format: date-time
          description: End date of the task
          example: '2021-06-11T07:16:45Z'
        parent_id:
          type: integer
          format: int64
          description: Immediate parent of the task
          example: 34534
        root_id:
          type: integer
          format: int64
          readOnly: true
          description: Root parent of the task
          example: 12312
        has_subtasks:
          type: boolean
          readOnly: true
          description: States if the task has subtasks
          example: true
        notification_needed:
          type: boolean
          description: Specify if needed to be notified
          readOnly: false
          example: true
        notify:
          type: object
          description: Task notification details. Allowed range - 15 minutes to 4 weeks
          properties:
            type:
              type: string
              enum:
                - BEFORE_START_DATE
                - BEFORE_END_DATE
              description: Specify whether notification should be sent before start or before end date
              example: BEFORE_START_DATE
            value:
              type: integer
              description: Time period of notification
              example: 2
            time_unit:
              type: string
              enum:
                - minutes
                - hours
                - days
                - weeks
              description: Time unit
              example: hours
          example:
            type: BEFORE_START_DATE
            value: 2
            time_unit: hours
    ticket_source:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier of the source
          readOnly: true
          example: 124324
        name:
          type: string
          description: Name of the source
          example: Email
        position:
          type: integer
          format: int64
          description: Position of the source value in the source list
          example: 1
        default:
          type: boolean
          description: True if the source value is present by default in Freshservice
          readOnly: true
          example: true
        visible:
          type: boolean
          description: True if the source value is visible for selection in Freshservice
          readOnly: true
          example: true
        created_at:
          type: string
          format: date-time
          description: Timestamp at which the source was created
          readOnly: true
          example: '2019-06-11T07:16:45Z'
        updated_at:
          type: string
          format: date-time
          description: Timestamp at which the source was last modified
          readOnly: true
          example: '2019-06-11T07:16:45Z'
    field:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          description: Unique ID of the Field
          example: 14022381
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Date time at which the note was created
          example: '2019-06-11T07:16:45Z'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Date time at which the note was updated
          example: '2019-06-11T07:16:45Z'
        name:
          type: string
          readOnly: false
          example: release_description
        label:
          type: string
          readOnly: false
          example: Release Description
        description:
          type: string
          readOnly: false
          example: Release Description
        field_type:
          type: string
          readOnly: false
          example: custom_text
        required:
          type: boolean
          readOnly: false
          example: true
        required_for_closure:
          type: boolean
          readOnly: false
          example: true
        default_field:
          type: boolean
          readOnly: false
          example: true
        choices:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int32
                example: 1
              value:
                type: string
                example: First Choice
              nested_options:
                type: array
                items:
                  $ref: '#/components/schemas/field/properties/choices'
                example:
                  - id: 1
                    value: Option 1
                  - id: 2
                    value: Option 2
          example:
            - id: 1
              value: First Choice
            - id: 2
              value: Second Choice
    Announcement:
      title: Announcement
      type: object
      x-tags:
        - Announcements
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
          readOnly: true
          description: Unique identifier of the Announcement
          example: 1400623
        created_by:
          type: integer
          format: int64
          minimum: 1
          readOnly: true
          description: Unique identifier of the agent to created this Announcement
          example: 1407423
        state:
          type: string
          enum:
            - active
            - scheduled
            - archived
          readOnly: true
          description: 'State of the Announcement active, archived, scheduled'
          example: active
        title:
          type: string
          readOnly: false
          description: Title of the Announcement
          example: Welcome to Freshservice
          minLength: 1
          maxLength: 255
        body:
          description: Body of the Announcement in plain text
          type: string
          readOnly: true
          example: 'Your Freshservice account is now ready.Here are a few quick links to get you started : Getting Started with Freshservice Implementing ITIL Workflows and Best Practices Setting up your Self Service Portal If you have any questions, just shoot out an email to support@freshservice.com or call us at +1-(877)-485-0317. Thanks, Freshservice Team. P.S.: This is a default announcement and can be removed whenever you want.'
        body_html:
          description: Body of the Announcement in HTML format
          type: string
          readOnly: false
          example: '<div>Your Freshservice account is now ready.<br>Here are a few quick links to get you started : <ol> <li> <a href="http://support.freshservice.com/support/solutions/folders/251426">Getting Started with Freshservice</a> </li><li> <a href="http://support.freshservice.com/support/solutions/folders/253208">Implementing ITIL Workflows and Best Practices</a> </li><li> <a href="http://support.freshservice.com/support/solutions/folders/254554">Setting up your Self Service Portal</a> </li> </ol>If you have any questions, just shoot out an email to support@freshservice.com or call us at +1-(877)-485-0317.<br>Thanks, <br> Freshservice Team. <br> P.S.: This is a default announcement and can be removed whenever you want.</div>'
          minLength: 1
          maxLength: 65535
        visible_from:
          type: string
          format: date-time
          readOnly: false
          description: Timestamp at which Announcement becomes active
          example: '2019-06-11T07:16:43Z'
        visible_till:
          type: string
          nullable: true
          format: date-time
          readOnly: false
          description: Timestamp until which Announcement is active
          example: '2019-06-18T07:16:43Z'
        visibility:
          type: string
          readOnly: false
          description: 'Who can see the announcement. Values - everyone, agents_only, agents_and_groups'
          example: everyone
          enum:
            - everyone
            - agents_only
            - grouped_visibility
        departments:
          type: array
          nullable: true
          readOnly: false
          description: Array of Department IDs that can view this Announcement. Applicable to ITSM only.
          items:
            type: integer
            format: int64
            minimum: 1
          example:
            - 1001
            - 1003
        groups:
          type: array
          nullable: true
          readOnly: false
          description: Array of Group IDs that can view this Announcement
          items:
            type: integer
            format: int64
            minimum: 1
          example:
            - 2002
            - 2004
        agent_groups:
          type: array
          nullable: true
          readOnly: false
          description: Array of Agent Group IDs that can view this Announcement
          items:
            type: integer
            format: int64
            minimum: 1
        is_read:
          type: boolean
          readOnly: true
          description: 'True if the logged-in-user has read the announcement. False, otherwise'
          example: true
        send_email:
          type: boolean
          readOnly: false
          description: 'True if the announcement needs to be sent via email as well. False, otherwise'
          example: true
        additional_emails:
          description: Additional email addresses to which the announcement needs to be sent
          readOnly: false
          type: array
          items:
            type: string
            format: email
            maxLength: 255
          example:
            - john.doe@acmecorp.com
            - alice@acmecorp.com
        visible_to_workspace_ids:
          type: array
          nullable: true
          readOnly: false
          description: Array of Workspace IDs that the announcement is visible to. Applicable to MSP only.
          items:
            type: integer
            format: int64
            minimum: 1
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp at which Announcement was created
          example: '2019-06-18T13:45:11Z'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp at which Announcement was last updated
          example: '2019-06-18T13:45:11Z'
    analysis_fields:
      type: object
      properties:
        problem_cause:
          type: object
          properties:
            description:
              type: string
              readOnly: false
              description: Cause of the Problem
              example: Router malfunction
            attachments:
              type: array
              readOnly: false
              description: URLs of attachments attached for Problem Cause
              items:
                type: string
                format: URL
              example:
                - 'https://s3.amazonaws.com/fs/doc1.pdf'
                - 'https://s3.amazonaws.com/fs/doc2.pdf'
          example:
            description: Router malfunction
        problem_symptoms:
          type: object
          properties:
            description:
              type: string
              readOnly: false
              description: Symptoms of the Problem
              example: Cannot connect mobile devices to Wi-fi
            attachments:
              type: array
              readOnly: false
              description: URLs of attachments attached for Problem Symptom
              items:
                type: string
                format: URL
              example:
                - 'https://s3.amazonaws.com/fs/doc1.pdf'
                - 'https://s3.amazonaws.com/fs/doc2.pdf'
          example:
            description: Cannot connect mobile devices to Wi-fi
        problem_impact:
          type: object
          properties:
            description:
              type: string
              readOnly: false
              description: Impact of the Problem
              example: Affects Wi-fi connectivity in Block A
            attachments:
              type: array
              readOnly: false
              description: URLs of attachments attached for Problem Impact
              items:
                type: string
                format: URL
              example:
                - 'https://s3.amazonaws.com/fs/doc1.pdf'
                - 'https://s3.amazonaws.com/fs/doc2.pdf'
          example:
            description: Affects Wi-fi connectivity in Block A
      example:
        problem_cause:
          description: Router malfunction
        problem_symptoms:
          description: Cannot connect mobile devices to Wi-fi
        problem_impact:
          description: Affects Wi-fi connectivity in Block A
    problem:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          description: Unique identifier of the Problem
          example: 1001
        agent_id:
          type: integer
          format: int64
          readOnly: false
          description: Unique identifier of the agent to whom the Problem is assigned
          example: 34523423
        requester_id:
          type: integer
          format: int64
          readOnly: false
          description: Unique identifier of the user who raised the Problem
          example: 193845793
        group_id:
          type: integer
          format: int64
          readOnly: false
          description: Unique identifier of the agent group to which the Problem is assigned
          example: 12943209
        priority:
          type: integer
          format: int64
          readOnly: false
          enum:
            - 1
            - 2
            - 3
            - 4
          description: 'Priority of the Problem 1-Low, 2-Medium, 3-High, 4-Urgent'
          example: 1
        impact:
          type: integer
          format: int64
          readOnly: false
          enum:
            - 1
            - 2
            - 3
          description: 'Impact of the Problem 1-Low, 2-Medium, 3-High'
          example: 1
        status:
          type: integer
          format: int32
          readOnly: false
          description: 'Status identifier of the Problem. Open -> 1, Change Requested -> 2, Closed -> 3'
          example: 1
        subject:
          type: string
          readOnly: false
          description: Subject of the Problem
          example: Unable to reach email server
        due_by:
          type: string
          format: date-time
          readOnly: false
          description: Timestamp at which Problem's resolution is due
          example: '2021-06-25T07:16:00Z'
        department_id:
          type: integer
          format: int64
          readOnly: false
          description: Unique ID of the department initiating the Problem
          example: 14002384
        category:
          type: string
          readOnly: false
          description: Category of the Problem
          example: Customer Support
        sub_category:
          type: string
          readOnly: false
          description: Sub-category of the Problem
          example: Multi-DRM and Rights Management
        item_category:
          type: string
          readOnly: false
          description: Item of the Problem
          example: Media Manager
        known_error:
          type: boolean
          readOnly: false
          description: 'true if the Problem is a known error, false otherwise'
          example: true
        created_at:
          type: string
          format: date-time
          readOnly: false
          description: Timestamp at which Problem was created
          example: '2021-10-12T15:01:27Z'
        updated_at:
          type: string
          format: date-time
          readOnly: false
          description: Timestamp at which Problem was last updated
          example: '2021-10-12T15:01:27Z'
        assets:
          type: array
          description: Assets associated with the Ticket
          items:
            $ref: '#/components/schemas/asset'
          example: []
        attachments:
          type: array
          description: URLs of attachments attached to the Problem request
          items:
            $ref: '#/components/schemas/note/properties/attachments/items'
        custom_fields:
          type: object
          additionalProperties:
            type: string
          description: Key value pairs containing the names and values of custom fields
          example:
            field1: Sample value
        analysis_fields:
          $ref: '#/components/schemas/analysis_fields'
        email:
          type: string
          readOnly: false
          description: Email of the requester
          example: andrea@freshservice.com
        description:
          type: string
          readOnly: false
          description: Description of the Problem
          example: Unable to reach email server
    onboarding_request_fields:
      type: object
      required:
        - fields
      properties:
        fields:
          type: object
          additionalProperties:
            type: string
          example:
            cf_employee_name: Sample
            cf_department_name: Customer Support
            cf_job_title: it user
            cf_date_of_joining: '2019-06-15'
    onboarding_request:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          example: 1
          description: Unique identifier of the Onboarding Request created
        status:
          type: integer
          format: int64
          readOnly: true
          description: Status of the onboarding request
          example: 2
        subject:
          type: string
          readOnly: true
          example: Employee Onboarding Request
          description: subject of the onboarding request
        ticket_id:
          type: integer
          format: int64
          readOnly: true
          example: 25
          description: Unique identifier of the Ticket created
        actors:
          type: object
          additionalProperties:
            type: object
          example:
            HR Manager:
              email: sample@freshservice.com
              name: Support
              response_status: Completed
        fields:
          type: object
          additionalProperties:
            anyOf:
              - type: string
              - type: integer
              - type: boolean
          nullable: true
          example:
            cf_employee_name: Sample
            cf_job_title: it user
            cf_date_of_joining: 15-06-2019
            cf_department: 5
            cf_requesters: 3
        lookup_values:
          type: object
          additionalProperties:
            type: object
          example:
            cf_department:
              id: 3
              name: Customer Support
              description: Customer Support Team
            cf_requesters:
              id: 2
              first_name: Andrea
              last_name: rachel
              email: andrea@freshservice.com
              mobile: 1234567890
              phone: 1234567
    onboarding_form:
      type: object
      properties:
        fields:
          type: array
          items:
            type: object
            properties:
              placeholder:
                type: string
                example: Enter name here
                readOnly: true
                description: Placeholder text for the field
              label:
                type: string
                example: Employee Name
                readOnly: true
                description: Label for the field
              name:
                type: string
                example: cf_dec
                readOnly: true
                description: Name of the field
              default:
                type: boolean
                example: true
                readOnly: true
                description: Indicates if it is a default field
              required:
                type: boolean
                example: true
                readOnly: true
                description: Indicates if it is a mandatory field
              position:
                type: integer
                example: 1
                readOnly: true
                description: Position of the field in the form
              field_type:
                type: string
                example: custom_decimal
                readOnly: true
                description: Data type of the field
              choices:
                type: array
                items:
                  type: string
                example:
                  - First Choice
                  - Second Choice
                readOnly: true
                description: Choices displayed for a dropdown field
              nested_field_choices:
                type: object
                readOnly: true
                example:
                  category 1:
                    subcategory 1:
                      - item 1
                      - item 2
                    subcategory 2: []
                  category 2:
                    subcategory 1: []
                description: Choices for a nested field
              nested_fields:
                type: array
                items:
                  type: object
                  properties:
                    label:
                      type: string
                      example: nested2
                      readOnly: true
                      description: Label for the field
                    name:
                      type: string
                      example: cf_nested2
                      readOnly: true
                      description: Name of the field
                    level:
                      type: integer
                      description: Hierarchical level of the nested field
                      readOnly: true
                      example: 2
                example:
                  - label: Category
                    name: cf_category_2
                    level: 2
                  - label: Sub Category
                    name: cf_sub_category_2
                    level: 3
          example:
            - placeholder: Enter employee name
              label: Employee Name
              name: employee_name
              position: 1
              required: true
              default: false
              field_type: custom_text
    onboarding_request_index:
      type: object
      properties:
        onboarding_requests:
          type: array
          items:
            properties:
              id:
                type: integer
                format: int64
                readOnly: true
                example: 1
                description: Unique identifier of the Onboarding Request created
              status:
                type: integer
                format: int64
                readOnly: true
                description: Status of the onboarding request
                example: 1
              subject:
                type: string
                readOnly: true
                example: Employee Onboarding Request
                description: subject of the onboarding request
              fields:
                type: object
                additionalProperties:
                  anyOf:
                    - type: string
                    - type: integer
                    - type: boolean
                nullable: true
                example:
                  cf_employee_name: Sample
                  cf_job_title: it user
                  cf_date_of_joining: 15-06-2019
                  cf_department: 5
                  cf_requesters: 3
          example:
            - id: 1
              status: 1
              subject: Employee Onboarding Request for Andrea
              fields:
                employee_name: Andrea
                employee_email_address: andrea@example.com
                doj: 22-05-2020
    onboarding_ticket:
      type: object
      properties:
        onboarding_tickets:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
                readOnly: true
                example: 1
                description: Unique identifier of the Onboarding Request created
              created_at:
                type: string
                readOnly: true
                example: '2020-07-01T15:14:17Z'
              updated_at:
                type: string
                readOnly: true
                example: '2020-07-01T15:14:17Z'
              subject:
                type: string
                readOnly: true
                example: Subject of the Ticket
                description: subject of the onboarding request
              responder_email:
                type: string
                readOnly: true
                example: sample@freshservice.com
              status:
                type: integer
                format: int64
                readOnly: true
                example: 2
              parent:
                type: boolean
                readOnly: true
                description: parent template check
                example: true
          example:
            - id: 205
              created_at: '2021-02-17T15:52:35Z'
              updated_at: '2021-06-23T17:09:30Z'
              subject: Employee Onboarding Request for Andrea
              responder_email: ''
              status: 5
              parent: true
    canned_response:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          example: 14006643
        title:
          type: string
          readOnly: false
          example: Common L2 response
        folder_id:
          type: integer
          format: int32
          readOnly: false
          example: 14022945
        content:
          type: string
          readOnly: true
          example: Raise a support ticket
        content_html:
          type: string
          readOnly: false
          example: <div>Raise a support ticket</div>
        created_at:
          type: string
          format: date-time
          readOnly: true
          example: '2021-08-12T10:10:20Z'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          example: '2021-08-12T10:10:20Z'
        attachments:
          type: array
          items:
            required:
              - id
              - content_type
              - size
              - name
              - attachment_url
            allOf:
              - $ref: '#/components/schemas/attachment'
          example:
            - id: 14000884384
              content_type: application/pdf
              size: 1024
              name: doc1.pdf
              attachment_url: 'https://s3.amazonaws.com/fs/doc1.pdf'
    canned_response_folder:
      type: object
      properties:
        id:
          type: integer
          format: int32
          readOnly: true
          example: 10
        name:
          type: string
          readOnly: false
          example: Auto Response
        type:
          type: string
          readOnly: true
          example: General
        responses_count:
          type: integer
          format: int32
          readOnly: true
          example: 10
        created_at:
          type: string
          format: date-time
          readOnly: true
          example: '2021-08-12T10:10:20Z'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          example: '2021-08-12T10:10:20Z'
    release:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          description: Unique identifier of the Release
          example: 10
        agent_id:
          type: integer
          format: int64
          readOnly: false
          description: Unique identifier of the agent to whom the Release is assigned
          example: 14043616
        group_id:
          type: integer
          format: int64
          readOnly: false
          description: Unique identifier of the agent group to which the Release is assigned
          example: 10184589
        priority:
          type: integer
          format: string
          readOnly: false
          enum:
            - 1
            - 2
            - 3
            - 4
          description: 'Priority of the Release 1-Low, 2-Medium, 3-High, 4-Urgent'
          example: 1
        status:
          type: integer
          format: int32
          readOnly: false
          description: 'Status identifier of the Release. Open -> 1, On hold -> 2, In Progress -> 3, Incomplete -> 4, Completed -> 5'
          example: 1
        release_type:
          type: integer
          format: string
          readOnly: false
          enum:
            - 1
            - 2
            - 3
            - 4
          description: 'Type of the Release 1-minor, 2-standard, 3-major, 4-emergency'
          example: 1
        subject:
          type: string
          readOnly: false
          description: Subject of the Release
          example: Security Patch Deployment
        planned_start_date:
          type: string
          format: date-time
          readOnly: false
          description: Timestamp at which release is starting
          example: '2021-08-01T18:30:00Z'
        planned_end_date:
          type: string
          format: date-time
          readOnly: false
          description: Timestamp at which release is ending
          example: '2021-08-08T18:45:00Z'
        work_start_date:
          type: string
          format: date-time
          readOnly: false
          description: Timestamp at which release work started
          example: '2021-08-01T18:30:00Z'
        work_end_date:
          type: string
          format: date-time
          readOnly: false
          description: Timestamp at which release work ended
          example: '2021-08-08T18:45:00Z'
        department_id:
          type: integer
          format: int64
          readOnly: false
          description: Unique ID of the department initiating the Release
          example: 10143312
        category:
          type: string
          readOnly: false
          description: Category of the Release
          example: Security
        sub_category:
          type: string
          readOnly: false
          description: Sub-category of the Release
          example: Deployment
        item_category:
          type: string
          readOnly: false
          description: Item of the Release
          example: Security
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp at which Release was created
          example: '2021-08-12T10:10:20Z'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp at which Release was last updated
          example: '2021-08-12T10:10:20Z'
        associated_assets:
          type: array
          readOnly: true
          description: Unique IDs of the assets associated with the Release request
          items:
            type: integer
            format: int64
          example:
            - 1001
            - 1002
        assets:
          type: array
          description: Assets associated with the Ticket
          items:
            $ref: '#/components/schemas/asset'
          example: []
        associated_changes:
          type: array
          readOnly: true
          description: Unique IDs of the Changes associated with the Release
          items:
            type: integer
            format: int64
          example:
            - 1001
            - 1002
        custom_fields:
          type: object
          additionalProperties:
            type: string
          description: Key value pairs containing the names and values of custom fields
          example:
            field1: Some Value
        planning_fields:
          $ref: '#/components/schemas/planning_fields'
        attachments:
          type: array
          description: URLs of attachments attached to the release request
          items:
            $ref: '#/components/schemas/note/properties/attachments/items'
    purchase_order_without_items:
      title: PurchaseOrder
      type: object
      x-tags:
        - Purchase Orders
      properties:
        id:
          type: integer
          format: int64
          description: ID of the purchase order
          minimum: 1
          readOnly: true
          example: 10
        vendor_id:
          type: integer
          format: int64
          description: ID of the vendor with whom the order is placed
          minimum: 1
          example: 100001633
        name:
          type: string
          description: Title of the purchase order
          example: Procure Adobe License
        po_number:
          type: string
          description: Purchase order number
          example: PO-10
        vendor_details:
          type: string
          description: Details of the vendor with whom the order is placed
          example: 1 Infinite Loop Cupertino California United States 95014
        expected_delivery_date:
          type: string
          format: date-time
          description: Expected delivery date of the purchase order
          example: '2020-01-01T05:00:01Z'
        created_at:
          type: string
          format: date-time
          description: Created date and time of the purchase order
          readOnly: true
          example: '2021-08-30T04:22:14Z'
        updated_at:
          type: string
          format: date-time
          description: Updated date and time of the purchase order
          readOnly: true
          example: '2021-08-30T04:22:14Z'
        created_by:
          type: integer
          description: ID of the agent who created purchase order
          format: int64
          minimum: 1
          readOnly: true
          example: 1001001256
        status:
          type: number
          description: Status of the purchase order
          example: 20
          enum:
            - 5
            - 10
            - 15
            - 20
            - 25
            - 30
            - 35
            - 40
            - 45
        shipping_address:
          type: string
          description: Address to which the order should be shipped
          example: 1 Infinite Loop Cupertino California
        billing_same_as_shipping:
          type: boolean
          readOnly: false
          description: True if Billing address is same as Shipping address
          example: true
        billing_address:
          type: string
          description: Address to which the order should be billed
          example: 1 Infinite Loop Cupertino California
        currency_code:
          type: string
          description: Currency unit used in the transaction
          example: USD
          enum:
            - AUD
            - THB
            - CAD
            - CNY
            - DKK
            - AED
            - USD
            - EGP
            - EUR
            - HUF
            - CHF
            - HKD
            - IDR
            - ILS
            - CZK
            - ISK
            - TRL
            - MYR
            - MXN
            - NOK
            - OMR
            - PHP
            - PLN
            - GBP
            - BWP
            - QAR
            - ZAR
            - BRL
            - RUB
            - INR
            - SAR
            - SGD
            - SEK
            - TWD
            - VND
            - KRW
            - JPY
            - NZD
            - JOD
        conversion_rate:
          type: number
          description: Conversion rate to convert selected currency unit to helpdesk currency
          format: float
          example: 1
        department_id:
          type: integer
          format: int64
          description: Unique ID of the department
          minimum: 1
          example: 10123
        discount_percentage:
          type: number
          format: float
          description: Percentage of discount on the order
          minimum: 0
          maximum: 100
          example: 2
        tax_percentage:
          type: number
          format: float
          description: Percentage of tax on the order
          minimum: 0
          example: 5
        shipping_cost:
          type: number
          format: float
          description: Total cost of shipping the order
          minimum: 0
          example: 10
        custom_fields:
          type: object
          example:
            manager: andrea@freshservice.com
            department: IT
    purchase_order:
      allOf:
        - $ref: '#/components/schemas/purchase_order_without_items'
        - type: object
          properties:
            purchase_items:
              type: array
              items:
                title: PurchaseItem
                type: object
                x-tags:
                  - Purchase Orders
                properties:
                  item_type:
                    type: integer
                    format: int64
                    description: Type of item to be ordered
                    example: 2
                    enum:
                      - 1
                      - 2
                      - 3
                  item_name:
                    type: string
                    readOnly: false
                    description: Name of the items to be ordered
                    example: Macbook Air
                  description:
                    type: string
                    readOnly: false
                    description: Item description
                    example: Macbook Air
                  cost:
                    type: number
                    readOnly: false
                    description: Cost of the item
                    minimum: 0
                    example: 2
                  quantity:
                    type: integer
                    readOnly: false
                    description: Quantity of item to be ordered
                    minimum: 1
                    example: 1
                  tax_percentage:
                    type: number
                    readOnly: false
                    description: Percentage of tax on item cost
                    minimum: 0
                    example: 5
              example:
                - item_type: 2
                  item_name: Macbook Air
                  description: Macbook Air
                  cost: 2
                  quantity: 1
                  tax_percentage: 5
    relationship:
      title: Relationship
      type: object
      x-tags:
        - Relationships
      additionalProperties: false
      properties:
        id:
          type: number
          format: int64
          readOnly: true
          description: Unique Identifier of the relationship
          example: 1000060824
        relationship_type_id:
          type: number
          format: int64
          example: 10023
          description: Unique Identifier of the relationship type
        primary_id:
          type: number
          format: int64
          example: 100006
          description: Unique Identifier of the primary entity in the relationship
        primary_type:
          type: string
          minLength: 1
          maxLength: 255
          enum:
            - asset
            - requester
            - agent
            - department
            - software
          example: software
          description: Type of the primary entity in the relationship
        secondary_id:
          type: number
          format: int64
          example: 1003421
          description: Unique Identifier of the secondary entity in the relationship
        secondary_type:
          type: string
          minLength: 1
          maxLength: 255
          enum:
            - asset
            - requester
            - agent
            - department
            - software
          example: asset
          description: Type of the secondary entity in the relationship
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp at which relationship was created
          example: '2019-06-18T13:45:11Z'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp at which relationship was updated
          example: '2019-06-18T13:45:11Z'
    merge_ticket:
      type: object
      properties:
        target:
          type: object
          required:
            - ticket_id
          properties:
            ticket_id:
              type: integer
              format: int64
              minimum: 1
              description: Display id of the target ticket
              example: 1400043345
          example:
            ticket_id: 1400043345
        source:
          type: object
          required:
            - ticket_ids
          properties:
            ticket_ids:
              type: array
              description: Display ids of the source tickets
              minItems: 1
              maxItems: 29
              items:
                type: integer
                format: int64
                minimum: 1
              example:
                - 1400034334
                - 3523453453
          example:
            ticket_ids:
              - 1400034334
              - 3523453453
      required:
        - target
        - source
    offboarding_request_fields:
      type: object
      required:
        - fields
      properties:
        fields:
          type: object
          additionalProperties:
            type: string
          example:
            cf_employee_name: Sample
            cf_department_name: Customer Support
            cf_job_title: it user
            cf_date_of_joining: '2019-06-15'
    offboarding_request:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          example: 1
          description: Unique identifier of the Offboarding Request created
        status:
          type: integer
          format: int64
          readOnly: true
          description: Status of the offboarding request
          example: 2
        subject:
          type: string
          readOnly: true
          example: Employee Offboarding Request
          description: subject of the offboarding request
        ticket_id:
          type: integer
          format: int64
          readOnly: true
          example: 25
          description: Unique identifier of the Ticket created
        actors:
          type: object
          additionalProperties:
            type: object
          example:
            HR Manager:
              email: sample@freshservice.com
              name: Support
              response_status: Completed
        fields:
          type: object
          additionalProperties:
            anyOf:
              - type: string
              - type: integer
              - type: boolean
          nullable: true
          example:
            cf_employee_name: Sample
            cf_job_title: it user
            cf_date_of_joining: 15-06-2019
            cf_department: 5
            cf_requesters: 3
        lookup_values:
          type: object
          additionalProperties:
            type: object
          example:
            cf_department:
              id: 3
              name: Customer Support
              description: Customer Support Team
            cf_requesters:
              id: 2
              first_name: Andrea
              last_name: rachel
              email: andrea@freshservice.com
              mobile: 1234567890
              phone: 1234567
    offboarding_form:
      type: object
      properties:
        fields:
          type: array
          items:
            type: object
            properties:
              placeholder:
                type: string
                example: Enter name here
                readOnly: true
                description: Placeholder text for the field
              label:
                type: string
                example: Employee Name
                readOnly: true
                description: Label for the field
              name:
                type: string
                example: cf_dec
                readOnly: true
                description: Name of the field
              default:
                type: boolean
                example: true
                readOnly: true
                description: Indicates if it is a default field
              required:
                type: boolean
                example: true
                readOnly: true
                description: Indicates if it is a mandatory field
              position:
                type: integer
                example: 1
                readOnly: true
                description: Position of the field in the form
              field_type:
                type: string
                example: custom_decimal
                readOnly: true
                description: Data type of the field
              choices:
                type: array
                items:
                  type: string
                example:
                  - First Choice
                  - Second Choice
                readOnly: true
                description: Choices displayed for a dropdown field
              nested_field_choices:
                type: object
                readOnly: true
                example:
                  category 1:
                    subcategory 1:
                      - item 1
                      - item 2
                    subcategory 2: []
                  category 2:
                    subcategory 1: []
                description: Choices for a nested field
              nested_fields:
                type: array
                items:
                  type: object
                  properties:
                    label:
                      type: string
                      example: nested2
                      readOnly: true
                      description: Label for the field
                    name:
                      type: string
                      example: cf_nested2
                      readOnly: true
                      description: Name of the field
                    level:
                      type: integer
                      description: Hierarchical level of the nested field
                      readOnly: true
                      example: 2
                example:
                  - label: Category
                    name: cf_category_2
                    level: 2
                  - label: Sub Category
                    name: cf_sub_category_2
                    level: 3
          example:
            - placeholder: Enter employee name
              label: Employee Name
              name: employee_name
              position: 1
              required: true
              default: false
              field_type: custom_text
    offboarding_request_index:
      type: object
      properties:
        offboarding_requests:
          type: array
          items:
            properties:
              id:
                type: integer
                format: int64
                readOnly: true
                example: 1
                description: Unique identifier of the Offboarding Request created
              status:
                type: integer
                format: int64
                readOnly: true
                description: Status of the offboarding request
                example: 1
              subject:
                type: string
                readOnly: true
                example: Employee Offboarding Request
                description: subject of the offboarding request
              fields:
                type: object
                additionalProperties:
                  anyOf:
                    - type: string
                    - type: integer
                    - type: boolean
                nullable: true
                example:
                  cf_employee_name: Sample
                  cf_job_title: it user
                  cf_date_of_joining: 15-06-2019
                  cf_department: 5
                  cf_requesters: 3
          example:
            - id: 1
              status: 1
              subject: Employee Offboarding Request for Andrea
              fields:
                employee_name: Andrea
                employee_email_address: andrea@example.com
                doj: 22-05-2020
    offboarding_ticket:
      type: object
      properties:
        offboarding_tickets:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
                readOnly: true
                example: 1
                description: Unique identifier of the Offboarding Request created
              created_at:
                type: string
                readOnly: true
                example: '2020-07-01T15:14:17Z'
              updated_at:
                type: string
                readOnly: true
                example: '2020-07-01T15:14:17Z'
              subject:
                type: string
                readOnly: true
                example: Subject of the Ticket
                description: subject of the offboarding request
              responder_email:
                type: string
                readOnly: true
                example: sample@freshservice.com
              status:
                type: integer
                format: int64
                readOnly: true
                example: 2
              parent:
                type: boolean
                readOnly: true
                description: parent template check
                example: true
          example:
            - id: 205
              created_at: '2021-02-17T15:52:35Z'
              updated_at: '2021-06-23T17:09:30Z'
              subject: Employee Offboarding Request for Andrea
              responder_email: ''
              status: 5
              parent: true
    custom_mailbox_lambda:
      title: CustomMailboxLambda
      type: object
      properties:
        pod_info:
          type: string
          enum:
            - us
            - euc
            - au
            - ind
          example: us
        account_id:
          type: integer
          format: int64
          minimum: 0
          example: 24241
        folder:
          type: string
          example: inbox
        status:
          type: string
          example: failed
        type:
          type: string
          example: IMAP
        user_name:
          type: string
          example: Custom
        to_email:
          type: string
          format: email
          example: sample@freshservice.com
        mailbox_id:
          type: integer
          minimum: 0
          example: 1
        message:
          type: string
          example: Unable to fetch
        error:
          type: object
          properties:
            code:
              type: integer
              example: 547
            message:
              type: string
              example: Unable to fetch
          example:
            code: 547
            message: Unable to fetch
      x-tags:
        - Email
    spam_watcher:
      type: object
      title: SpamWatcher
      x-tags:
        - Spam Watcher
      properties:
        results:
          type: array
          items:
            type: object
            properties:
              count:
                type: integer
                example: 100
              account_id:
                type: string
                example: '24241'
              model_name:
                type: string
                example: helpdesk_notes
                enum:
                  - helpdesk_notes
                  - helpdesk_tickets
              user_id:
                type: string
                example: '14'
              parent_id:
                type: string
                example: '1'
          example:
            - count: 100
              account_id: '24241'
              model_name: helpdesk_notes
              user_id: '14'
              parent_id: '1'
        type:
          type: string
          example: Spam
          enum:
            - Spam
            - AbnormalLoad
            - NewAccountSpam
            - ControllerIpSpam
            - BGBlacklistOnError
            - SpikeInJobResponse
            - TicketCreateSpam
        pod:
          type: string
          enum:
            - US
            - EUC
            - IND
            - AU
          example: US
    haystack_spam_watcher:
      title: HaystackSpamWatcher
      type: object
      x-tags:
        - Spam Watcher
      properties:
        alerts:
          type: array
          items:
            type: object
            properties:
              labels:
                type: object
                properties:
                  query_key:
                    type: string
                    example: '1,1,helpdesk_tickets'
                  query_key_fields:
                    type: string
                    example: 'a,u,m'
                  region:
                    type: string
                    example: us-east-1
                  custom_type:
                    type: string
                    example: Spam
                    enum:
                      - Spam
                      - AbnormalLoad
                      - NewAccountSpam
                      - ControllerIpSpam
                      - BGBlacklistOnError
                      - SpikeInJobResponse
                      - TicketCreateSpam
              annotations:
                type: object
                properties:
                  description:
                    type: string
                    example: description
          example:
            - labels:
                query_key: '1,1,helpdesk_tickets'
                query_key_fields: 'a,u,m'
                region: us-east-1
                custom_type: Spam
              annotations:
                description: description
    Agent:
      type: object
      title: Agent
      x-tags:
        - Agents
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier of the agent
          example: 14000234324
          readOnly: true
        first_name:
          type: string
          description: First Name of the agent
          example: Andrea
        occasional:
          type: boolean
          description: 'True if the agent is an occasional agent, and false if full-time agent.'
          example: true
        last_name:
          type: string
          description: Last Name of the agent
          example: Smith
        name:
          type: string
          description: Name of the Agent
          minLength: 1
          example: Andrea Smith
        job_title:
          type: string
          description: Job Title of the agent
          example: Product Manager
        email:
          type: string
          description: Email address of the agent
          example: andrea@freshservice.com
        work_phone_number:
          type: string
          description: Work phone number of the agent
          example: +1-567-3492
        mobile_phone_number:
          type: string
          description: Mobile phone number of the agent
          example: +1-567-3492
        reporting_manager_id:
          type: integer
          format: int64
          description: Unique identifier of the agent's reporting manager
          example: 14000234324
        time_zone:
          type: string
          description: Time zone of the agent
          example: Eastern Time (US & Canada)
        language:
          type: string
          description: Language used by the agent
          example: en
        location_id:
          type: integer
          format: int64
          description: Unique identifier of the location associated with the agent
          example: 14000234324
        scoreboard_level_id:
          type: integer
          format: int64
          example: 2
          description: |
            Unique ID of the level of the agent in the Arcade. Possible values: * 1 - Beginner * 2 - Intermediate * 3 - Professional * 4 - Expert * 5 - Master * 6 - Guru
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
        scope:
          description: Access level of the agent in various modules
          type: object
          example:
            ticket: Global Access
            problem: Global Access
            change: Global Access
            release: Global Access
            asset: Global Access
          properties:
            ticket:
              type: string
              example: Global Access
              enum:
                - Global Access
                - Group Access
                - Restricted Access
            problem:
              type: string
              example: Group Access
              enum:
                - Global Access
                - Group Access
                - Restricted Access
            change:
              type: string
              example: Restricted Access
              enum:
                - Global Access
                - Group Access
                - Restricted Access
            release:
              type: string
              example: Group Access
              enum:
                - Global Access
                - Group Access
                - Restricted Access
            asset:
              type: string
              example: Global Access
              enum:
                - Global Access
                - Group Access
          readOnly: true
        group_ids:
          type: array
          description: <DEPRECATED> Unique IDs of the agent groups associated with the agent
          example:
            - 1400023424
            - 1400023423
          items:
            type: integer
            format: int64
        member_of:
          type: array
          description: Unique IDs of the agent groups that the agent is a member of
          example:
            - 140002533
            - 140009834
          items:
            type: integer
            format: int64
        observer_of:
          type: array
          description: Unique IDs of the agent groups that the agent is an observer of
          example:
            - 1300045345
            - 1300049484
          items:
            type: integer
            format: int64
        role_ids:
          type: array
          description: (DEPRECATED) Unique IDs of the agent roles associated with the agent
          example:
            - 1300034059
            - 1300094583
          items:
            type: integer
            format: int64
        roles:
          type: array
          example:
            - role_id: 14000234324
          items:
            $ref: '#/components/schemas/role_assignment'
        last_login_at:
          type: string
          format: date-time
          description: Timestamp of the agent's last successful login
          example: '2021-11-22T16:58:45Z'
          readOnly: true
        active:
          type: boolean
          description: 'true if the user is active, and false if the user account has been deactivated.'
          example: true
        has_logged_in:
          type: boolean
          description: 'true if the user has logged in to Freshservice at least once, and false otherwise.'
          example: true
        created_at:
          type: string
          format: date-time
          description: Timestamp at which the agent was created
          example: '2021-11-22T16:58:45Z'
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: Timestamp at which the agent was last modified
          example: '2021-11-22T16:58:45Z'
          readOnly: true
    CAB:
      type: object
      title: CABs
      x-tags:
        - CABs
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier of the CAB
          example: 102030
        name:
          type: string
          description: Name of the CAB
          example: ITSM
        description:
          type: string
          description: Description about the CAB
          example: This CAB is specific to changes regarding ITSM
        created_at:
          type: string
          description: Creation time of the CAB
          example: '2024-04-15T10:51:36Z'
        updated_at:
          type: string
          description: Time of most recent update of the CAB
          example: '2024-04-15T10:51:36Z'
        members:
          type: array
          items:
            type: integer
            format: int64
            description: Unique identifier of members of the CAB
            example: 178
    cab_create:
      type: object
      properties:
        name:
          type: string
          description: Name of the CAB
          example: Change Planning
        description:
          type: string
          description: Description of the CAB
          example: Change Plan Acceptance Board
        add_members:
          type: array
          items:
            type: integer
            format: int64
          description: Array of IDs of members to be added as part of the CAB
          example:
            - 1
            - 2
    cab_update:
      type: object
      properties:
        name:
          type: string
          description: Name of the CAB
          example: Change Planning
        description:
          type: string
          description: Description of the CAB
          example: Change Plan Acceptance Board
        add_members:
          type: array
          items:
            type: integer
            format: int64
          description: Array of IDs of members to be added as part of the CAB
          example:
            - 1
            - 2
        remove_members:
          type: array
          items:
            type: integer
            format: int64
          description: Array of IDs of members to be removed from the CAB
          example:
            - 1
            - 2
    SolutionArticle:
      title: SolutionArticle
      type: object
      x-tags:
        - Solution Articles
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier of the solution article
          minimum: 1
          example: 1400020394823
          readOnly: true
        created_at:
          type: string
          format: date-time
          description: Timestamp at which solution article was created
          example: '2021-11-22T16:58:45Z'
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: Timestamp at which solution article was last modified
          example: '2021-11-22T16:58:45Z'
          readOnly: true
        folder_id:
          type: integer
          format: int64
          minimum: 1
          description: ID of the folder under which the article is listed
          example: 140000394234
        category_id:
          type: integer
          format: int64
          minimum: 1
          description: Unique identifier of the solution category
          example: 1400023423
        title:
          type: string
          description: Title of the solution article
          example: Unable to connect VPN
        description:
          type: string
          description: Content of the solution article in HTML format
          example: <div>Login with AD credentials for VPN</div>
        description_text:
          type: string
          description: Content of the solution article in plain-text format
          example: Login with AD credentials for VPN
          minLength: 0
          maxLength: 2147483647
        position:
          type: integer
          format: int32
          description: The rank of the solution article in the article listing
          example: 1
        article_type:
          type: integer
          format: int32
          description: 'The type of the article. ( 1 - permanent, 2 - workaround )'
          example: 1
        status:
          type: integer
          format: int32
          description: 'Status of the article. ( 1 - draft, 2 - published )'
          example: 1
        thumbs_up:
          type: integer
          format: int64
          description: Number of upvotes for the article
          example: 34534
          readOnly: true
        thumbs_down:
          type: integer
          format: int64
          description: Number of downvotes for the article
          example: 43
          readOnly: true
        views:
          type: integer
          format: int64
          description: number of views for the article
          example: 140004343
          readOnly: true
        keywords:
          type: array
          description: Keywords for which this article should be mapped
          example:
            - VPN
            - WiFi
            - Network
          items:
            type: string
        tags:
          type: array
          description: The tags associated to the article
          example:
            - VPN
            - WiFi
            - Network
          items:
            type: string
        approvals:
          type: array
          items:
            title: Approval
            type: object
            description: ''
            properties:
              id:
                type: integer
                format: int64
                minimum: 1
                example: 11098665467
                description: Auto increment value
                readOnly: true
              created_at:
                type: string
                description: Timestamp at which approval was created
                example: '2021-08-12T10:10:20Z'
                readOnly: true
              updated_at:
                type: string
                description: Timestamp at which approval was updated
                example: '2021-08-12T10:10:20Z'
                readOnly: true
              member_id:
                type: integer
                format: int64
                minimum: 1
                description: Id of the approver
                example: 110989865
              user_id:
                type: integer
                format: int64
                minimum: 1
                example: 1109866
                description: Id of the author requesting for approval
              member_name:
                type: string
                description: Name of the approver
                example: Jack
              approval_status:
                $ref: '#/components/schemas/service_request_approval/properties/approval_status'
              delegatee:
                required:
                  - id
                  - name
                allOf:
                  - title: User
                    type: object
                    x-tags:
                      - Users
                    properties:
                      id:
                        type: integer
                        format: int64
                        description: Unique identifier of the User
                        example: 1109866
                        minimum: 1
                        readOnly: true
                      first_name:
                        type: string
                        description: First Name of the User
                        example: Andrea
                      last_name:
                        type: string
                        description: Last Name of the User
                        example: Smith
                      email:
                        type: string
                        description: Email address of the User
                        format: email
                        example: andrea@freshservice.com
                      name:
                        type: string
                        description: Name of the User
                        example: Andrea Smith
                    example:
                      id: 1
                      name: Andrea Smith
                      first_name: Andrea
                      last_name: Smith
                      email: andrea@freshservice.com
                example:
                  id: 1
                  name: Andrea
              latest_remark:
                type: string
                description: Latest Remark
                example: edit required
          example:
            - id: 11098665467
              created_at: '2021-08-12T10:10:20Z'
              updated_at: '2021-08-12T10:10:20Z'
              member_id: 110989865
              user_id: 110989865
              member_name: Jack
              approval_status:
                id: 0
                name: requested
              delegatee:
                id: 110989865
                name: Andrea
              latest_remark: Edit required for solution article
        user_id:
          type: integer
          format: int64
          minimum: 1
          description: Id of the author requesting for approval
          example: 1109866
        approval_status:
          type: integer
          description: Approval status of the article
          example: 1
        modified_by:
          type: integer
          format: int64
          minimum: 1
          description: Article modified by user id
          example: 1000036510
        modified_at:
          type: string
          description: Timestamp at which article was modified
          example: '2022-02-02T17:12:14Z'
        inserted_into_tickets:
          type: integer
          description: No of times article was inserted into tickets
          example: 1
        url:
          type: string
          description: External article url
          example: google.com
        review_date:
          type: string
          description: Review date of the article
          example: '2022-02-10T00:00:00Z'
          format: date-time
        language:
          type: string
          description: Language of the article
          example: en
        author:
          allOf:
            - $ref: '#/components/schemas/Agent'
          example:
            id: 1
            name: Sample Agent
        parent_id:
          type: integer
          description: Parent id of the article
          example: 12345
        outdated:
          type: boolean
          description: Outdated article
          example: true
          default: false
        category_name:
          type: string
          description: Category name of the article
          example: FAQ
        folder_name:
          type: string
          description: Folder name of the article
          example: FAQ folder
        translated_folder_name:
          type: string
          description: Translated Folder name of the article
          example: FAQ folder
        translated_category_name:
          type: string
          description: Translated Category name of the article
          example: FAQ
        group_id:
          type: array
          description: Managed by Group ids of the article
          example:
            - 1000024897
          items:
            type: integer
        attachments:
          example:
            - id: 14000884384
              content_type: application/pdf
              size: 1024
              name: doc1.pdf
              attachment_url: 'https://s3.amazonaws.com/fs/doc1.pdf'
          description: Attachments
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/attachment'
        folder_visibility:
          type: integer
          description: Folder visibility of the articles
          example: 1
        group_folder_group_ids:
          type: array
          description: Group folder grou
          example:
            - 100059
            - 100058
            - 100057
          items:
            type: integer
        folder_department_ids:
          type: array
          description: Folder department ids
          example:
            - 100051
            - 100052
            - 100053
          items:
            type: number
        group_folder_requester_group_ids:
          type: array
          description: Group folder requester group ids
          example:
            - 10000056651
            - 10000056652
            - 10000056653
          items:
            type: integer
        group_folder_department_ids:
          type: array
          description: group folder department ids
          example:
            - 10000056659
            - 10000056658
            - 10000056657
          items:
            type: integer
        cloud_files:
          example:
            - id: 1400020394823
              created_at: '2021-11-22T16:58:45Z'
              updated_at: '2021-11-22T16:58:45Z'
              application_id: 20
              name: doc1.pdf
              provider: dropbox
              attachment_url: 'https://www.dropbox.com/doc1.pdf'
          description: Cloud Attachments
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/attachment'
    Pagination:
      type: object
      title: Pagination
      x-tags:
        - Pagination
      additionalProperties: false
      properties:
        total_items:
          type: integer
          format: int64
          readOnly: true
          minimum: 0
          description: Total items available
          example: 1
        total_pages:
          type: integer
          format: int64
          readOnly: true
          minimum: 1
          description: Total pages required to see all available items
          example: 1
        current_page:
          type: integer
          format: int64
          readOnly: true
          minimum: 1
          description: Current page out of all available pages
          example: 1
    SearchRequest:
      title: Search Request
      description: Request body to give filter condition to give external devops id to search changes/tickets
      x-tags:
        - Devops Platform
      type: object
      properties:
        devops_entities:
          type: array
          items:
            type: object
            properties:
              ids:
                type: array
                items:
                  type: integer
                  format: int64
                  example: 1
                  description: devops external ids of workitem/pullrequest/pipeline-run id
              devops_type:
                type: string
                enum:
                  - work_item
                  - pull_request
                  - pipeline_run
                example: work_item
              devops_source:
                type: string
                enum:
                  - jira
                  - github
                  - azure_devops
                example: azure_devops
      example:
        devops_entities:
          - ids:
              - 23
              - 100
              - 1
              - 2
              - 34
              - 4
            devops_type: pull_request
            devops_source: github
    Contract:
      type: object
      title: Contract
      description: Fields that are common for all contracts. Based on the contract type some additional and required fields will get added.
      x-tags:
        - Contracts
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int64
          description: Unique ID of the contract
          example: 14000234324
          minimum: 1
          readOnly: true
        name:
          type: string
          description: Name of the Contract
          example: Adobe contract
          maxLength: 255
          minLength: 1
        description:
          type: string
          description: Description of the Contract
          example: Adobe contract description
          maxLength: 65535
        vendor_id:
          type: integer
          format: int64
          description: ID of the Vendor
          example: 14000234324
          minimum: 1
        auto_renew:
          type: boolean
          description: True (1) if the contract is set to Auto Renew. Default is False (0)
          example: true
        notify_expiry:
          type: boolean
          description: True (1) if the expiry notification is set up for the contract. Default is False (0)
          example: true
        notify_before:
          type: integer
          nullable: true
          minimum: 1
          maximum: 365
          description: Number of days before contract expiry date when the expiry notifications need to be sent. Cannot exceed 365 days
          example: 30
        approver_id:
          type: integer
          nullable: true
          format: int64
          description: ID of the agent who needs to approve the contract
          example: 14000234324
          minimum: 1
        start_date:
          type: string
          nullable: true
          format: date-time
          description: Start date of the contract
          example: '2021-08-12T10:10:20Z'
        end_date:
          type: string
          nullable: true
          format: date-time
          description: End date of the contract
          example: '2021-08-12T10:10:20Z'
        cost:
          type: number
          example: 1500.33
          description: Cost of the contract. It can be 0 only for software contract.
          format: float
          maximum: 99999999.99
          minimum: 0
        status:
          type: string
          enum:
            - draft
            - pending
            - approved
            - active
            - expired
            - rejected
            - cancelled
            - pending_esign
            - esigned
            - decline_esign
          description: Status of the contract
          example: active
          default: draft
          readOnly: true
        contract_number:
          type: string
          description: User entered ID for the contract. This has to be unique.
          example: ADB12
          minLength: 1
          maxLength: 255
        contract_type_id:
          type: integer
          description: ID of the contract type (Cannot be updated)
          example: 14000234324
          minimum: 1
          format: int64
        visible_to_id:
          type: integer
          nullable: true
          format: int64
          description: ID of agent group in Freshservice to control visibility of the contract
          example: 14000234324
          minimum: 1
        notify_to:
          type: array
          nullable: true
          uniqueItems: true
          description: List of email addresses to notify expiry
          example:
            - andrea@freshservice.com
            - rachel@freshservice.com
          maxItems: 50
          items:
            type: string
            format: email
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
        software_id:
          type: integer
          format: int64
          description: ID of the software(Cannot be updated). Available only for software contracts and reqired.
          example: 14000234324
          minimum: 1
        license_type:
          type: string
          description: Type of the license(Cannot be updated). Available only for software contracts.
          enum:
            - volume
            - enterprise
            - trial
            - open_source
            - free
          example: open_source
          default: volume
        billing_cycle:
          type: string
          enum:
            - monthly
            - quarterly
            - half_yearly
            - annual
            - one_time
          example: one_time
          description: Represents the contract term period. Available only for software contracts
          default: one_time
        license_key:
          type: string
          nullable: true
          description: License key for the contract. Available only for software contracts
          example: AABBCC
          maxLength: 255
        item_cost_details:
          type: array
          title: ItemCostDetails
          x-tags:
            - Contracts
          description: Item cost details(line item) of the contract. Available only for software contracts.
          example:
            - item_name: Installation
              pricing_model: one_time
              cost: 200
              count: 10
              comments: Installation comment
              created_at: '2021-11-10T10:51:40Z'
              updated_at: '2021-11-10T10:51:40Z'
          maxItems: 10
          items:
            type: object
            additionalProperties: false
            properties:
              id:
                type: integer
                format: int64
                description: Unique ID of the line item. Should not give in create(POST method)
                example: 14000234324
                minimum: 1
              item_name:
                type: string
                description: Name of the particular line item
                example: Installation
                maxLength: 255
              pricing_model:
                type: string
                enum:
                  - per_unit
                  - fixed
                  - one_time
                description: Represents the pricing unit of a particular line item
                example: one_time
                default: per_unit
              cost:
                type: number
                format: float
                description: Represents the cost of a particular line item
                example: 200
              count:
                type: integer
                description: Represents the number of units of a particular line item. -1 represents 'unlimited' and it is not available for per_unit pricing model.
                example: 10
                minimum: -1
                maximum: 2147483648
              comments:
                type: string
                nullable: true
                description: To add any additional comments for a particular line item
                example: Installation comment
                maxLength: 65535
              created_at:
                type: string
                description: Timestamp at which the item cost detail was created
                example: '2021-08-12T10:10:20Z'
                format: date-time
                readOnly: true
              updated_at:
                type: string
                description: Timestamp at which the item cost detail was updated
                example: '2021-08-12T10:10:20Z'
                format: date-time
                readOnly: true
        future_contract_id:
          type: integer
          nullable: true
          format: int64
          description: 'If the contract has an approved renewal,it gives a URL to see the details of the renewal.'
          example: 14000234324
          minimum: 1
          readOnly: true
        has_associated_assets:
          type: boolean
          description: Indicates whether the contract has associated assets.
          example: true
          readOnly: true
        has_attachments:
          type: boolean
          description: Indicates whether the contract has attachments
          example: true
          readOnly: true
        expiry_notified:
          type: boolean
          description: True if the expiry of the contract has been notified. False if not notified
          example: true
          readOnly: true
        requester_id:
          type: integer
          nullable: true
          format: int64
          description: Denotes the user who creates the contract and renew the contract
          example: 14000234324
          minimum: 1
          readOnly: true
        delegatee_id:
          type: integer
          nullable: true
          description: ID of the agent whom the contract approval is delegated to
          example: 14000234324
          minimum: 1
          format: int64
          readOnly: true
        created_at:
          type: string
          format: date-time
          description: Timestamp at which the contract was created
          example: '2021-08-12T10:10:20Z'
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: Timestamp at which the contract was updated
          example: '2021-08-12T10:10:20Z'
          readOnly: true
      required:
        - name
        - vendor_id
        - contract_number
        - contract_type_id
    ContractType:
      type: object
      title: ContractType
      x-tags:
        - Contracts
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int64
          description: Unique ID of the contract type
          example: 14000234324
          minimum: 1
          readOnly: true
        name:
          type: string
          description: Name of the contract type
          example: Lease
          maxLength: 255
          minLength: 1
        description:
          type: string
          description: Description of the contract type
          example: Lease description
          maxLength: 65535
        needs_approval:
          type: boolean
          description: Indicates whether the contract of this type needs approval
          example: true
        is_default:
          type: boolean
          description: Indicates whether the type is a default type or a custom type
          example: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          description: Timestamp at which the contract type was created
          example: '2021-08-12T10:10:20Z'
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: Timestamp at which the contract type was updated
          example: '2021-08-12T10:10:20Z'
          readOnly: true
    ContractTypeField:
      type: object
      title: ContractTypeField
      x-tags:
        - Contracts
      additionalProperties: false
      properties:
        label:
          type: string
          description: Lable of the contract type field
          example: Contract Name
          minLength: 1
          maxLength: 255
          readOnly: true
        name:
          type: string
          description: Name of the contract type field
          example: name
          minLength: 1
          maxLength: 255
        required:
          type: boolean
          description: Mandatoriness of this field when creating or updating a contract
          example: true
        field_type:
          type: string
          description: Field type of the contract type field
          enum:
            - text
            - paragraph
            - dropdown
            - number
            - integer
            - date
            - checkbox
            - Array
            - phone_number
            - url
          example: text
        data_type:
          type: string
          description: Data type of the contract type field
          enum:
            - string
            - integer
            - decimal
            - datetime
            - boolean
            - text
          example: string
        visible_in_renewal:
          type: boolean
          description: Indicates whether the field is visible in contract renewal page
          example: true
        default_field:
          type: boolean
          description: Indicates whether the field is a default field or a custom field
          example: true
        choices:
          type: array
          description: Choices of dropdown field. Applicable only for dropdown field.
          example:
            - Option 1
            - Option 2
          minItems: 1
          items:
            type: string
            minLength: 1
            maxLength: 255
        created_at:
          type: string
          format: date-time
          description: Timestamp at which the contract type field was created
          example: '2021-11-10T10:51:39Z'
          readOnly: true
        updated_at:
          type: string
          description: Timestamp at which the contract type field was updated
          format: date-time
          example: '2021-11-10T10:51:39Z'
          readOnly: true
    RenewalDetails:
      type: object
      title: RenewalDetails
      x-tags:
        - Contracts
      additionalProperties: false
      properties:
        type:
          nullable: true
          type: string
          enum:
            - renewal
            - extension
          example: renewal
          description: Type of the renewal
          readOnly: true
        status:
          type: string
          description: Status of the renewal
          enum:
            - Draft
            - Pending
            - Approved
            - Active
            - Expired
            - Rejected
            - Cancelled
            - Pending_esign
            - Esigned
            - Decline_esign
            - Extension Requested
            - Extended
            - Extension Cancelled
            - Renewal Requested
            - Renewed
            - Renewal Cancelled
          example: Renewed
          default: Draft
          readOnly: true
        history_type:
          type: string
          enum:
            - past
            - current
            - future
          example: current
        approver_id:
          type: number
          nullable: true
          description: ID of the agent who needs to approve the renewal
          example: 14000234324
        start_date:
          type: string
          nullable: true
          format: date-time
          description: Start date of the renewal
          example: '2021-08-12T10:10:20Z'
        end_date:
          type: string
          nullable: true
          format: date-time
          description: End date of the renewal
          example: '2021-08-12T10:10:20Z'
        id:
          type: integer
          description: Unique ID of the Future contract
          example: 14000234324
          minimum: 1
          format: int64
          readOnly: true
        cost:
          type: number
          description: Cost of the renewal
          example: 2450
          format: float
          maximum: 99999999.99
          minimum: 0
        custom_fields:
          $ref: '#/components/schemas/custom_fields'
        billing_cycle:
          type: string
          enum:
            - monthly
            - quarterly
            - half_yearly
            - annual
            - one_time
          example: one_time
          description: Represents the contract term period. Available only for software contracts.
          default: one_time
        item_cost_details:
          $ref: '#/components/schemas/Contract/properties/item_cost_details'
    service_request_approval:
      title: SR Approval
      type: object
      description: ''
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
          example: 11098665467
          description: Auto increment value
          readOnly: true
        created_at:
          type: string
          description: Timestamp at which approval was created
          example: '2021-08-12T10:10:20Z'
          readOnly: true
        updated_at:
          type: string
          description: Timestamp at which approval was updated
          example: '2021-08-12T10:10:20Z'
          readOnly: true
        approver_id:
          type: integer
          format: int64
          minimum: 1
          description: Id of the approver
          example: 110989865
        approver_name:
          type: string
          description: Name of the approver
          example: Jack
        approval_type:
          type: integer
          description: Id of the Approval Type
          enum:
            - 0
            - 1
            - 2
            - 3
          example: 1
        user_id:
          type: integer
          format: int64
          minimum: 1
          example: 1109866
          description: Id of the author requesting for approval
        level:
          type: integer
          format: int64
          minimum: 1
          description: Level of the approval
          example: 2
        user_name:
          type: string
          description: Name of the author requesting for approval
          example: Neil
        approval_status:
          title: Approval Status
          type: object
          description: Approval status
          properties:
            id:
              type: integer
              description: Id of the Approval Status
              enum:
                - 0
                - 1
                - 2
                - 3
              example: 1
            name:
              type: string
              description: Name of the Approval Status
              enum:
                - requested
                - approved
                - rejected
                - cancelled
              example: approved
          example:
            id: 0
            name: requested
        delegatee:
          required:
            - id
            - name
          example:
            id: 1
            name: Andrea
        latest_remark:
          type: string
          description: Latest Remark
          example: edit required
    ReportsTransfer:
      title: ReportsTransfer
      description: Analytics Reports transfer ownership schema
      x-tags:
        - Analytics
      type: object
      properties:
        from_user:
          type: integer
          format: int64
          example: 1001234
          description: User id of the agent whose reports need to be transferred
        to_user:
          type: integer
          format: int64
          example: 1001235
          description: User id of the agent to whom the reports need to be transferred to
      example:
        from_user: 1001234
        to_user: 1001235
      required:
        - from_user
        - to_user
    TaskFormField:
      type: object
      properties:
        name:
          type: string
          readOnly: true
          description: Name of the Task field
          example: cf_email_4021
        label:
          type: string
          readOnly: true
          description: Display name for the Task field
          example: Email
        position:
          type: integer
          format: int64
          example: 2
          readOnly: true
          minimum: 1
        field_type:
          description: Describes the type of field.
          type: string
          enum:
            - custom_text
            - custom_paragraph
            - custom_dropdown
            - custom_date
            - custom_checkbox
            - custom_number
            - custom_url
        is_default_field:
          type: boolean
          readOnly: true
          description: Indicates whether it is a default field or user-defined custom field
          example: true
        created_at:
          type: string
          format: date-time
          example: '2015-01-08 07:53:41Z'
          readOnly: true
        updated_at:
          type: string
          format: date-time
          example: '2015-01-08 07:53:41Z'
          readOnly: true
        choices:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                readOnly: true
                description: Display id of the dropdown choices
                example: '1'
              value:
                type: string
                readOnly: true
                example: In Progress
    NewGenProjectTask:
      title: ProjectTask
      type: object
      description: ''
      x-tags:
        - New Gen PM
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier of the task
          example: 1001
          minimum: 1
          maximum: 9223372036854776000
          readOnly: true
        project_id:
          type: integer
          format: int64
          description: Unique identifier of the project
          example: 10
          minimum: 1
          maximum: 9223372036854776000
          readOnly: true
        title:
          type: string
          description: Name of the task
          example: Clear backlog
          maxLength: 255
        display_key:
          type: string
          description: Human display id of the task
          example: FS-15
          readOnly: true
        description:
          type: string
          description: Description of the task in plain text or HTML format.
          example: Clear backlog
          maxLength: 65535
        status_id:
          type: integer
          format: int32
          description: Status of the task.
          minimum: 1
          example: 1
        priority_id:
          type: integer
          example: 4567
          format: int32
          minimum: 1
          description: Priority of the task.
        type_id:
          type: integer
          format: int64
          example: 456789
          minimum: 1
          description: Id of the task type
        assignee_id:
          type: integer
          format: int64
          minimum: 1
          description: User ID of the person to whom the task is assigned.
          example: 984793
        planned_start_date:
          type: string
          format: date-time
          description: Planned start date of the task.
          example: '2021-06-14T07:16:45Z'
        planned_end_date:
          type: string
          format: date-time
          description: Planned end date of the task.
          example: '2021-06-11T07:16:45Z'
        parent_id:
          type: integer
          format: int64
          description: ID of the parent task
          example: 34534
          minimum: 1
        story_points:
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 5
            - 8
            - 13
          example: 5
          description: Story Points of the task
        reporter_id:
          type: integer
          example: 789621
          format: int64
          minimum: 1
          description: User ID of the person who reported the task.
        sprint_id:
          type: integer
          format: int64
          example: 7892913
          minimum: 1
          description: ID of the sprint this task should be a part of
        version_id:
          type: integer
          format: int64
          example: 789271
          minimum: 1
          description: ID of the version this task is a part of
        created_at:
          type: string
          example: '2021-06-14T07:16:45Z'
          format: date-time
          readOnly: true
        updated_at:
          type: string
          example: '2021-06-14T07:16:45Z'
          format: date-time
          readOnly: true
        planned_effort:
          type: string
          example: 1w 2d 3h 4m
          description: Planned effort of the task.
        planned_duration:
          type: string
          example: 1w 2d 3h 4m
          description: Planned duration of the task.
        custom_fields:
          type: object
          example:
            'Story Link: Link URL': null
          description: Key value pairs containing the names and values of custom fields.
          properties:
            field1:
              type: string
              example: Story Link
      required:
        - title
        - type_id
    NewGenProject:
      title: Project
      type: object
      x-tags:
        - New Gen PM
      properties:
        id:
          type: integer
          format: int64
          description: Unique ID of the project
          example: 13298
          minimum: 1
          maximum: 9223372036854776000
          readOnly: true
        name:
          type: string
          description: Name of the project
          example: Solution Articles for Ticket
          minLength: 1
        key:
          type: string
          description: Project Key
          example: SP3
          maxLength: 255
        description:
          type: string
          description: Description about the project in HTML format
          example: <div>Working on this project to grab the next year deal</div>
          maxLength: 65535
        status_id:
          type: integer
          format: int32
          description: '''Status of the project. 1-open, 2-in progress, 3-completed'''
          example: 2
          enum:
            - 1
            - 2
            - 3
          default: 1
        priority_id:
          type: integer
          format: int32
          description: 'Priority of the change 1-Low, 2-Medium, 3-High, 4-Urgent'
          example: 2
          enum:
            - 1
            - 2
            - 3
            - 4
          default: 2
        manager_id:
          type: integer
          format: int64
          description: User ID of the project manager.
          example: 43423
          minimum: 1
          maximum: 9223372036854776000
        start_date:
          type: string
          description: Start date of the project
          example: '2022-06-23'
          format: date
        end_date:
          type: string
          description: End date of the project
          example: '2022-06-24'
          format: date
        sprint_duration:
          type: integer
          example: 14
          description: Sprint duration in days for the project
          format: int64
          minimum: 1
        archived:
          type: boolean
          description: Project archived status
          example: true
          default: false
          readOnly: true
        project_type:
          type: integer
          enum:
            - 0
            - 1
          example: 1
          default: 1
          description: 'Type of the Project, 0 - Software Project, 1 - Business Project'
        visibility:
          type: integer
          description: 'Visibility of the Project, 1-public, 0-private'
          enum:
            - 0
            - 1
          example: 1
        created_at:
          type: string
          format: date-time
          example: '2021-04-01T07:16:45Z'
          readOnly: true
        updated_at:
          type: string
          example: '2021-07-01T07:16:45Z'
          format: date-time
          readOnly: true
        custom_fields:
          type: object
          example:
            key: value
          properties:
            field1:
              type: string
              example: PR Link
            field2:
              type: string
              example: Document Link
      required:
        - name
        - project_type
    BadRequest:
      type: object
      title: BadRequest
      x-tags:
        - Errors
      additionalProperties: false
      properties:
        description:
          type: string
          description: Error description
          example: Validation failed
          readOnly: true
        errors:
          type: array
          example:
            - field: username
              message: Email already exist
              code: invalid_value
          items:
            type: object
            title: FieldError
            x-tags:
              - Errors
            additionalProperties: false
            properties:
              field:
                type: string
                example: username
                readOnly: true
              message:
                type: string
                example: Username already exist
                readOnly: true
              code:
                type: string
                example: invalid_value
                readOnly: true
            required:
              - field
              - message
              - code
      required:
        - description
        - errors
    StatusPageIncident:
      title: Incident
      type: object
      x-tags:
        - Status page
      properties:
        id:
          type: integer
          format: int64
          example: 1
          minimum: 1
          readOnly: true
        created_at:
          type: string
          format: date-time
          example: '2024-06-24T06:23:46Z'
          readOnly: true
        updated_at:
          type: string
          format: date-time
          example: '2024-06-24T06:23:46Z'
          readOnly: true
        started_at:
          type: string
          format: date-time
          example: '2024-06-24T06:23:46Z'
          description: Start time of the incident
        ended_at:
          type: string
          format: date-time
          description: Resolution time of the incident
          example: '2024-06-25T06:23:46Z'
        title:
          type: string
          description: Title of the incident
          minLength: 1
          maxLength: 255
        description:
          type: string
          maxLength: 4096
          minLength: 1
          description: Description of the incident
        user_id:
          type: integer
          format: int64
          example: 1
          description: ID of the user creating the incident
          readOnly: true
        status:
          type: integer
          format: int32
          example: 1
          enum:
            - 1
            - 2
          description: |-
            Status of the incident. 
            1 - Open
            2 - Resolved
          default: 1
        impacted_services:
          type: array
          minItems: 0
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
                minimum: 1
                description: ID of the impacted service
              status:
                type: integer
                format: int32
                enum:
                  - 1
                  - 10
                  - 20
                  - 30
                description: |-
                  Status of the service
                  1 - Operational
                  10 - Degraded performance
                  20 - Partial outage
                  30 - Major outage
            required:
              - id
              - status
        ticket_id:
          type: integer
          format: int64
          example: 1
          description: ID of the Freshservice ticket associated to the status page  incident
          readOnly: true
      required:
        - started_at
        - title
        - description
    StatusPageMaintenance:
      title: Maintenance
      type: object
      x-tags:
        - Status page
      properties:
        id:
          type: integer
          format: int64
          example: 1
          minimum: 1
          readOnly: true
        created_at:
          type: string
          format: date-time
          example: '2024-06-24T06:23:46Z'
          readOnly: true
        updated_at:
          type: string
          format: date-time
          example: '2024-06-24T06:23:46Z'
          readOnly: true
        started_at:
          type: string
          format: date-time
          example: '2024-06-24T06:23:46Z'
          description: Start time of the maintenance
        ended_at:
          type: string
          format: date-time
          description: End time of the maintenance
          example: '2024-06-25T06:23:46Z'
        title:
          type: string
          description: Title of the maintenance
          minLength: 1
          maxLength: 255
        description:
          type: string
          maxLength: 4096
          minLength: 1
          description: Description of the maintenance
        user_id:
          type: integer
          format: int64
          example: 1
          description: ID of the user creating the maintenance
          readOnly: true
        status:
          type: integer
          format: int32
          description: |-
            Status of the maintenance. 
            0 - Upcoming
            1 - Ongoing
            2 - Completed
          enum:
            - 0
            - 1
            - 2
          default: 0
          example: 0
        impacted_services:
          type: array
          minItems: 0
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
                minimum: 1
                description: ID of the impacted service
              status:
                type: integer
                format: int32
                description: |-
                  Status of the service
                  5 - Under maintenance
                enum:
                  - 5
            required:
              - id
              - status
        maintenance_window_id:
          type: integer
          format: int64
          example: 1
          description: ID of the Freshservice maintenance window associated to the status page maintenance
          readOnly: true
        notification_options:
          type: object
          description: Notification options configured for the maintenance
          properties:
            id:
              type: integer
              format: int64
              minimum: 1
            options:
              type: object
              properties:
                value:
                  type: integer
                  format: int64
                  example: 60
                  description: The number of minutes before the maintenance when the notification should be triggered
              required:
                - value
            trigger:
              type: integer
              enum:
                - 1
                - 2
                - 3
              format: int32
              example: 2
              description: |-
                Event that triggers the notification for the maintenance
                1 - On start
                2 - Before start
                3 - On complete
          required:
            - id
      required:
        - started_at
        - ended_at
        - title
        - description
    DisruptionUpdate:
      title: Disruption Update
      type: object
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
          readOnly: true
        created_at:
          type: string
          format: date-time
          example: '2024-06-24T09:30:34Z'
          readOnly: true
        updated_at:
          type: string
          format: date-time
          example: '2024-06-24T09:30:34Z'
          readOnly: true
        posted_on:
          type: string
          format: date-time
          example: '2024-06-24T09:30:34Z'
          description: Time at which the update is posted
        user_id:
          type: integer
          format: int64
          example: 1
          description: ID of the user posting the update
          readOnly: true
        message:
          type: string
          minLength: 1
          maxLength: 4096
        status_id:
          type: integer
          format: int64
          minimum: 1
          example: 1
          description: ID of the disruption status
      required:
        - posted_on
        - message
      x-tags:
        - Status page
    DisruptionStatus:
      title: Disruption Status
      type: object
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
          readOnly: true
        name:
          type: string
          description: Name of the disruption status
          example: Resolved
          minLength: 1
          maxLength: 255
        position:
          type: integer
          format: int32
          example: 1
          minimum: 1
          description: Position of the disruption status
        color:
          type: string
          description: Hex color code of the disruption status
          example: '#e0600b'
          pattern: '^#[a-f0-9]{6}$'
          default: '#000000'
      x-tags:
        - Status page
    ServiceComponent:
      title: ServiceComponent
      type: object
      x-tags:
        - Status page
      properties:
        id:
          type: integer
          format: int64
          example: 1
          minimum: 1
          readOnly: true
        name:
          type: string
          example: RDS
          maxLength: 255
          description: Name of the service component
        position:
          type: integer
          format: int32
          example: 1
          minimum: 1
          description: Position of the service component
        status:
          type: integer
          format: int32
          example: 20
          enum:
            - 1
            - 5
            - 10
            - 20
            - 30
          description: Status of the service component
        type:
          type: integer
          format: int32
          enum:
            - 1
            - 2
          description: |-
            Type of service component
            1 - Service
            2 - Service group
        settings:
          type: object
          minProperties: 2
          properties:
            start_date:
              type: string
              format: date-time
              example: '2023-11-28T08:21:02.615Z'
              description: Start date of the service
            service_id:
              type: integer
              format: int64
              example: 1
              minimum: 1
              description: ID of the Freshservice service
            uptime_history:
              type: boolean
              description: Indicates whether uptime history needs to be shown for the service group/service
            expand_on_load:
              type: boolean
              description: Indicates whether all services in the group needs to be expanded on page load. Applicable for service groups only.
        components:
          type: array
          description: Contains the sub group/service details
          items:
            $ref: '#/components/schemas/ServiceComponent'
    StatusPage:
      title: Status Page
      type: object
      x-tags:
        - Status page
      properties:
        id:
          type: integer
          format: int64
          example: 1
          minimum: 1
          readOnly: true
        domain:
          type: string
          format: hostname
          example: it1.status.freshservice.com
          description: Default domain of the status page
        name:
          type: string
          description: Name of the status page
          maxLength: 255
        custom_domain:
          type: string
          format: hostname
          example: it.statuspage.com
        workspace_id:
          type: integer
          format: int64
          example: 2
          minimum: 2
          description: Workspace ID of the status page
          readOnly: true
        private:
          type: boolean
          description: Indicates whether the status page is private
          default: false
        overall_status:
          type: integer
          format: int32
          minimum: 1
          enum:
            - 1
            - 5
            - 10
            - 20
            - 30
          maximum: 30
          description: |-
            Indicates the overall status of the services in the status page
            1 - Operational
            5 - Under maintenance
            10 - Degraded performance
            20 - Partial outage
            30 - Major outage
          readOnly: true
      required:
        - domain
        - name
  responses:
    AsyncAccepted:
      description: Response for Asynchronous endpoints
      content:
        application/json:
          schema:
            title: AsyncAccepted
            description: Common response for aysnchronous endpoints
            type: object
            properties:
              job_id:
                type: string
                minLength: 1
                maxLength: 36
                description: Unique identifier for the asynchronous job
                example: 46683d65-e670-4ef5-ba7c-aba121d6892a
              href:
                type: string
                format: uri
                minLength: 1
                description: Endpoint that can be used to get the status of asynchronous job
                example: 'https://yourportal.freshservice.com/api/v2/jobs/46683d65-e670-4ef5-ba7c-aba121d6892a'
    PartialContent:
      description: Partial Content
      content:
        application/json:
          schema:
            title: PartialContent
            type: object
            additionalProperties: false
            properties:
              code:
                type: string
                description: Error Code
                example: cannot_edit_approval_requested_article
                readOnly: true
              message:
                type: string
                description: Error Message
                example: Articles in awaiting approval status cannot be edited.
            required:
              - code
              - message
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequest'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            type: object
            title: Forbidden
            x-tags:
              - Errors
            additionalProperties: false
            properties:
              code:
                type: string
                description: Error Code
                example: access_denied
                readOnly: true
              message:
                type: string
                description: Error Message
                example: You are not authorized to perform this action.
            required:
              - code
              - message
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            type: object
            title: NotFound
            x-tags:
              - Errors
            additionalProperties: false
            properties:
              description:
                type: string
                description: Error description
                example: Not Found
                readOnly: true
              message:
                type: string
                description: Error message
                example: 'There is no record matching the id: -1'
            required:
              - description
              - message
    MethodNotAllowed:
      description: Method Not Allowed
      content:
        application/json:
          schema:
            type: object
            title: MethodNotAllowed
            x-tags:
              - Errors
            additionalProperties: false
            properties:
              message:
                type: string
                readOnly: true
                description: Error message
                example: 'COPY method is not allowed. It should be one of these method(s): GET, HEAD, PATCH, PUT, DELETE'
            required:
              - message
    NotAcceptable:
      description: Not Acceptable
      content:
        application/json:
          schema:
            type: object
            title: NotAcceptable
            x-tags:
              - Errors
            additionalProperties: false
            properties:
              code:
                type: string
                description: Error Code
                example: invalid_accept_header
                readOnly: true
              message:
                type: string
                description: Error Message
                example: Accept header should have application/json or */*.
            required:
              - code
              - message
    Conflict:
      description: Conflict
      content:
        application/json:
          schema:
            type: object
            title: Conflict
            x-tags:
              - Errors
            additionalProperties: false
            properties:
              description:
                type: string
                description: Error description
                example: Conflict
                readOnly: true
              errors:
                type: array
                example:
                  - field: username
                    message: Email already exist
                    code: invalid_value
                items:
                  $ref: '#/components/schemas/BadRequest/properties/errors/items'
            required:
              - description
              - errors
    UnsupportedMediaType:
      description: Unsupported Media Type
      content:
        application/json:
          schema:
            type: object
            title: UnsupportedMediaType
            x-tags:
              - Errors
            additionalProperties: false
            properties:
              code:
                type: string
                description: Error Code
                example: invalid_content_type
                readOnly: true
              message:
                type: string
                description: Error Message
                example: Content-Type header should have application/json.
            required:
              - code
              - message
    MultiStatus:
      description: Multi Status
      content:
        application/json:
          schema:
            type: object
            title: Multi-Status
            x-tags:
              - Response
            additionalProperties: false
            properties:
              id:
                type: number
                description: Specific id
                example: 56
                readOnly: true
              http_code:
                type: integer
                description: HTTP Response code
                example: 204
                readOnly: true
              error:
                type: object
                required:
                  - code
                  - field
                  - http_code
                  - message
                properties:
                  code:
                    type: string
                    description: Response description
                    example: invalid_id
                    readOnly: true
                  field:
                    type: string
                    description: Field Name
                    readOnly: true
                    example: ids
                  nested_field:
                    type: object
                    description: Nested Field Name
                    example:
                      id: 34
                      name: nf_field1
                    readOnly: true
                  http_code:
                    type: number
                    description: Http code
                    example: 404
                    readOnly: true
                  message:
                    type: string
                    description: Response Message
                    example: 'There is no record matching the id: 9218'
                    readOnly: true
            required:
              - id
              - http_code
    UnprocessableEntity:
      description: UnprocessableEntity
      content:
        application/json:
          schema:
            type: object
            title: UnprocessableEntity
            x-tags:
              - Errors
            additionalProperties: false
            properties:
              description:
                type: string
                description: Error description
                example: Validation failed
                readOnly: true
              errors:
                type: array
                example:
                  - field: username
                    message: Email already exist
                    code: invalid_value
                  - field: to
                    message: This field cannot be empty
                    code: missing_field
                  - field: subject
                    message: 'Has 287 characters, it should have minimum of 0 characters and can have maximum of 255 characters'
                    code: invalid_value
                items:
                  $ref: '#/components/schemas/BadRequest/properties/errors/items'
            required:
              - description
              - errors
    RateLimitError:
      description: Rate Limit Exceeded
      headers:
        retry-after:
          description: The time at which the rate limit will be revoked.
          schema:
            type: string
            format: date-time
      content:
        application/json:
          schema:
            type: object
            title: RateLimitError
            x-tags:
              - Errors
            additionalProperties: false
            properties:
              message:
                type: string
                description: Error Message
                example: The API rate limit allotted for your Freshservice domain has been exhausted
                readOnly: true
            required:
              - message
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            type: object
            title: InternalServerError
            x-tags:
              - Errors
            additionalProperties: false
            properties:
              code:
                type: string
                description: Error Code
                example: internal_error
                readOnly: true
              message:
                type: string
                description: Error Message
                example: 'We''re sorry, but something went wrong.'
            required:
              - code
              - message
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            title: Unauthorized
            x-tags:
              - Errors
            additionalProperties: false
            properties:
              code:
                type: string
                description: Error Code
                example: invalid_credentials
                readOnly: true
              message:
                type: string
                description: Error Message
                example: You have to be logged in to perform this action.
            required:
              - code
              - message